function yF(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in n)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(n,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=e(a);fetch(a.href,r)}})();function Y2(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function bF(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var a=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,a.get?a:{enumerable:!0,get:function(){return n[s]}})}),e}var wb={exports:{}},uc={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var MC;function xF(){if(MC)return uc;MC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(s,a,r){var i=null;if(r!==void 0&&(i=""+r),a.key!==void 0&&(i=""+a.key),"key"in a){r={};for(var l in a)l!=="key"&&(r[l]=a[l])}else r=a;return a=r.ref,{$$typeof:n,type:s,key:i,ref:a!==void 0?a:null,props:r}}return uc.Fragment=t,uc.jsx=e,uc.jsxs=e,uc}var BC;function vF(){return BC||(BC=1,wb.exports=xF()),wb.exports}var yr=vF(),Sb={exports:{}},qt={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var VC;function wF(){if(VC)return qt;VC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.portal"),e=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),r=Symbol.for("react.consumer"),i=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;function m(B){return B===null||typeof B!="object"?null:(B=p&&B[p]||B["@@iterator"],typeof B=="function"?B:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b=Object.assign,v={};function w(B,j,lt){this.props=B,this.context=j,this.refs=v,this.updater=lt||y}w.prototype.isReactComponent={},w.prototype.setState=function(B,j){if(typeof B!="object"&&typeof B!="function"&&B!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,B,j,"setState")},w.prototype.forceUpdate=function(B){this.updater.enqueueForceUpdate(this,B,"forceUpdate")};function S(){}S.prototype=w.prototype;function C(B,j,lt){this.props=B,this.context=j,this.refs=v,this.updater=lt||y}var $=C.prototype=new S;$.constructor=C,b($,w.prototype),$.isPureReactComponent=!0;var T=Array.isArray,I={H:null,A:null,T:null,S:null},R=Object.prototype.hasOwnProperty;function F(B,j,lt,ot,ut,mt){return lt=mt.ref,{$$typeof:n,type:B,key:j,ref:lt!==void 0?lt:null,props:mt}}function M(B,j){return F(B.type,j,void 0,void 0,void 0,B.props)}function D(B){return typeof B=="object"&&B!==null&&B.$$typeof===n}function O(B){var j={"=":"=0",":":"=2"};return"$"+B.replace(/[=:]/g,function(lt){return j[lt]})}var A=/\/+/g;function W(B,j){return typeof B=="object"&&B!==null&&B.key!=null?O(""+B.key):j.toString(36)}function K(){}function tt(B){switch(B.status){case"fulfilled":return B.value;case"rejected":throw B.reason;default:switch(typeof B.status=="string"?B.then(K,K):(B.status="pending",B.then(function(j){B.status==="pending"&&(B.status="fulfilled",B.value=j)},function(j){B.status==="pending"&&(B.status="rejected",B.reason=j)})),B.status){case"fulfilled":return B.value;case"rejected":throw B.reason}}throw B}function Q(B,j,lt,ot,ut){var mt=typeof B;(mt==="undefined"||mt==="boolean")&&(B=null);var bt=!1;if(B===null)bt=!0;else switch(mt){case"bigint":case"string":case"number":bt=!0;break;case"object":switch(B.$$typeof){case n:case t:bt=!0;break;case f:return bt=B._init,Q(bt(B._payload),j,lt,ot,ut)}}if(bt)return ut=ut(B),bt=ot===""?"."+W(B,0):ot,T(ut)?(lt="",bt!=null&&(lt=bt.replace(A,"$&/")+"/"),Q(ut,j,lt,"",function(Tt){return Tt})):ut!=null&&(D(ut)&&(ut=M(ut,lt+(ut.key==null||B&&B.key===ut.key?"":(""+ut.key).replace(A,"$&/")+"/")+bt)),j.push(ut)),1;bt=0;var Ct=ot===""?".":ot+":";if(T(B))for(var wt=0;wt<B.length;wt++)ot=B[wt],mt=Ct+W(ot,wt),bt+=Q(ot,j,lt,mt,ut);else if(wt=m(B),typeof wt=="function")for(B=wt.call(B),wt=0;!(ot=B.next()).done;)ot=ot.value,mt=Ct+W(ot,wt++),bt+=Q(ot,j,lt,mt,ut);else if(mt==="object"){if(typeof B.then=="function")return Q(tt(B),j,lt,ot,ut);throw j=String(B),Error("Objects are not valid as a React child (found: "+(j==="[object Object]"?"object with keys {"+Object.keys(B).join(", ")+"}":j)+"). If you meant to render a collection of children, use an array instead.")}return bt}function P(B,j,lt){if(B==null)return B;var ot=[],ut=0;return Q(B,ot,"","",function(mt){return j.call(lt,mt,ut++)}),ot}function et(B){if(B._status===-1){var j=B._result;j=j(),j.then(function(lt){(B._status===0||B._status===-1)&&(B._status=1,B._result=lt)},function(lt){(B._status===0||B._status===-1)&&(B._status=2,B._result=lt)}),B._status===-1&&(B._status=0,B._result=j)}if(B._status===1)return B._result.default;throw B._result}var Y=typeof reportError=="function"?reportError:function(B){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var j=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof B=="object"&&B!==null&&typeof B.message=="string"?String(B.message):String(B),error:B});if(!window.dispatchEvent(j))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",B);return}console.error(B)};function rt(){}return qt.Children={map:P,forEach:function(B,j,lt){P(B,function(){j.apply(this,arguments)},lt)},count:function(B){var j=0;return P(B,function(){j++}),j},toArray:function(B){return P(B,function(j){return j})||[]},only:function(B){if(!D(B))throw Error("React.Children.only expected to receive a single React element child.");return B}},qt.Component=w,qt.Fragment=e,qt.Profiler=a,qt.PureComponent=C,qt.StrictMode=s,qt.Suspense=u,qt.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=I,qt.act=function(){throw Error("act(...) is not supported in production builds of React.")},qt.cache=function(B){return function(){return B.apply(null,arguments)}},qt.cloneElement=function(B,j,lt){if(B==null)throw Error("The argument must be a React element, but you passed "+B+".");var ot=b({},B.props),ut=B.key,mt=void 0;if(j!=null)for(bt in j.ref!==void 0&&(mt=void 0),j.key!==void 0&&(ut=""+j.key),j)!R.call(j,bt)||bt==="key"||bt==="__self"||bt==="__source"||bt==="ref"&&j.ref===void 0||(ot[bt]=j[bt]);var bt=arguments.length-2;if(bt===1)ot.children=lt;else if(1<bt){for(var Ct=Array(bt),wt=0;wt<bt;wt++)Ct[wt]=arguments[wt+2];ot.children=Ct}return F(B.type,ut,void 0,void 0,mt,ot)},qt.createContext=function(B){return B={$$typeof:i,_currentValue:B,_currentValue2:B,_threadCount:0,Provider:null,Consumer:null},B.Provider=B,B.Consumer={$$typeof:r,_context:B},B},qt.createElement=function(B,j,lt){var ot,ut={},mt=null;if(j!=null)for(ot in j.key!==void 0&&(mt=""+j.key),j)R.call(j,ot)&&ot!=="key"&&ot!=="__self"&&ot!=="__source"&&(ut[ot]=j[ot]);var bt=arguments.length-2;if(bt===1)ut.children=lt;else if(1<bt){for(var Ct=Array(bt),wt=0;wt<bt;wt++)Ct[wt]=arguments[wt+2];ut.children=Ct}if(B&&B.defaultProps)for(ot in bt=B.defaultProps,bt)ut[ot]===void 0&&(ut[ot]=bt[ot]);return F(B,mt,void 0,void 0,null,ut)},qt.createRef=function(){return{current:null}},qt.forwardRef=function(B){return{$$typeof:l,render:B}},qt.isValidElement=D,qt.lazy=function(B){return{$$typeof:f,_payload:{_status:-1,_result:B},_init:et}},qt.memo=function(B,j){return{$$typeof:h,type:B,compare:j===void 0?null:j}},qt.startTransition=function(B){var j=I.T,lt={};I.T=lt;try{var ot=B(),ut=I.S;ut!==null&&ut(lt,ot),typeof ot=="object"&&ot!==null&&typeof ot.then=="function"&&ot.then(rt,Y)}catch(mt){Y(mt)}finally{I.T=j}},qt.unstable_useCacheRefresh=function(){return I.H.useCacheRefresh()},qt.use=function(B){return I.H.use(B)},qt.useActionState=function(B,j,lt){return I.H.useActionState(B,j,lt)},qt.useCallback=function(B,j){return I.H.useCallback(B,j)},qt.useContext=function(B){return I.H.useContext(B)},qt.useDebugValue=function(){},qt.useDeferredValue=function(B,j){return I.H.useDeferredValue(B,j)},qt.useEffect=function(B,j){return I.H.useEffect(B,j)},qt.useId=function(){return I.H.useId()},qt.useImperativeHandle=function(B,j,lt){return I.H.useImperativeHandle(B,j,lt)},qt.useInsertionEffect=function(B,j){return I.H.useInsertionEffect(B,j)},qt.useLayoutEffect=function(B,j){return I.H.useLayoutEffect(B,j)},qt.useMemo=function(B,j){return I.H.useMemo(B,j)},qt.useOptimistic=function(B,j){return I.H.useOptimistic(B,j)},qt.useReducer=function(B,j,lt){return I.H.useReducer(B,j,lt)},qt.useRef=function(B){return I.H.useRef(B)},qt.useState=function(B){return I.H.useState(B)},qt.useSyncExternalStore=function(B,j,lt){return I.H.useSyncExternalStore(B,j,lt)},qt.useTransition=function(){return I.H.useTransition()},qt.version="19.0.0",qt}var PC;function vp(){return PC||(PC=1,Sb.exports=wF()),Sb.exports}var Rf=vp(),Nb={exports:{}},cc={},Cb={exports:{}},Tb={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var UC;function SF(){return UC||(UC=1,function(n){function t(P,et){var Y=P.length;P.push(et);t:for(;0<Y;){var rt=Y-1>>>1,B=P[rt];if(0<a(B,et))P[rt]=et,P[Y]=B,Y=rt;else break t}}function e(P){return P.length===0?null:P[0]}function s(P){if(P.length===0)return null;var et=P[0],Y=P.pop();if(Y!==et){P[0]=Y;t:for(var rt=0,B=P.length,j=B>>>1;rt<j;){var lt=2*(rt+1)-1,ot=P[lt],ut=lt+1,mt=P[ut];if(0>a(ot,Y))ut<B&&0>a(mt,ot)?(P[rt]=mt,P[ut]=Y,rt=ut):(P[rt]=ot,P[lt]=Y,rt=lt);else if(ut<B&&0>a(mt,Y))P[rt]=mt,P[ut]=Y,rt=ut;else break t}}return et}function a(P,et){var Y=P.sortIndex-et.sortIndex;return Y!==0?Y:P.id-et.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;n.unstable_now=function(){return r.now()}}else{var i=Date,l=i.now();n.unstable_now=function(){return i.now()-l}}var u=[],h=[],f=1,p=null,m=3,y=!1,b=!1,v=!1,w=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,C=typeof setImmediate<"u"?setImmediate:null;function $(P){for(var et=e(h);et!==null;){if(et.callback===null)s(h);else if(et.startTime<=P)s(h),et.sortIndex=et.expirationTime,t(u,et);else break;et=e(h)}}function T(P){if(v=!1,$(P),!b)if(e(u)!==null)b=!0,tt();else{var et=e(h);et!==null&&Q(T,et.startTime-P)}}var I=!1,R=-1,F=5,M=-1;function D(){return!(n.unstable_now()-M<F)}function O(){if(I){var P=n.unstable_now();M=P;var et=!0;try{t:{b=!1,v&&(v=!1,S(R),R=-1),y=!0;var Y=m;try{e:{for($(P),p=e(u);p!==null&&!(p.expirationTime>P&&D());){var rt=p.callback;if(typeof rt=="function"){p.callback=null,m=p.priorityLevel;var B=rt(p.expirationTime<=P);if(P=n.unstable_now(),typeof B=="function"){p.callback=B,$(P),et=!0;break e}p===e(u)&&s(u),$(P)}else s(u);p=e(u)}if(p!==null)et=!0;else{var j=e(h);j!==null&&Q(T,j.startTime-P),et=!1}}break t}finally{p=null,m=Y,y=!1}et=void 0}}finally{et?A():I=!1}}}var A;if(typeof C=="function")A=function(){C(O)};else if(typeof MessageChannel<"u"){var W=new MessageChannel,K=W.port2;W.port1.onmessage=O,A=function(){K.postMessage(null)}}else A=function(){w(O,0)};function tt(){I||(I=!0,A())}function Q(P,et){R=w(function(){P(n.unstable_now())},et)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(P){P.callback=null},n.unstable_continueExecution=function(){b||y||(b=!0,tt())},n.unstable_forceFrameRate=function(P){0>P||125<P?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):F=0<P?Math.floor(1e3/P):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return e(u)},n.unstable_next=function(P){switch(m){case 1:case 2:case 3:var et=3;break;default:et=m}var Y=m;m=et;try{return P()}finally{m=Y}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(P,et){switch(P){case 1:case 2:case 3:case 4:case 5:break;default:P=3}var Y=m;m=P;try{return et()}finally{m=Y}},n.unstable_scheduleCallback=function(P,et,Y){var rt=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?rt+Y:rt):Y=rt,P){case 1:var B=-1;break;case 2:B=250;break;case 5:B=1073741823;break;case 4:B=1e4;break;default:B=5e3}return B=Y+B,P={id:f++,callback:et,priorityLevel:P,startTime:Y,expirationTime:B,sortIndex:-1},Y>rt?(P.sortIndex=Y,t(h,P),e(u)===null&&P===e(h)&&(v?(S(R),R=-1):v=!0,Q(T,Y-rt))):(P.sortIndex=B,t(u,P),b||y||(b=!0,tt())),P},n.unstable_shouldYield=D,n.unstable_wrapCallback=function(P){var et=m;return function(){var Y=m;m=et;try{return P.apply(this,arguments)}finally{m=Y}}}}(Tb)),Tb}var WC;function NF(){return WC||(WC=1,Cb.exports=SF()),Cb.exports}var $b={exports:{}},Vn={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var GC;function CF(){if(GC)return Vn;GC=1;var n=vp();function t(u){var h="https://react.dev/errors/"+u;if(1<arguments.length){h+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)h+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+u+"; visit "+h+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function e(){}var s={d:{f:e,r:function(){throw Error(t(522))},D:e,C:e,L:e,m:e,X:e,S:e,M:e},p:0,findDOMNode:null},a=Symbol.for("react.portal");function r(u,h,f){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:a,key:p==null?null:""+p,children:u,containerInfo:h,implementation:f}}var i=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(u,h){if(u==="font")return"";if(typeof h=="string")return h==="use-credentials"?h:""}return Vn.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Vn.createPortal=function(u,h){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!h||h.nodeType!==1&&h.nodeType!==9&&h.nodeType!==11)throw Error(t(299));return r(u,h,null,f)},Vn.flushSync=function(u){var h=i.T,f=s.p;try{if(i.T=null,s.p=2,u)return u()}finally{i.T=h,s.p=f,s.d.f()}},Vn.preconnect=function(u,h){typeof u=="string"&&(h?(h=h.crossOrigin,h=typeof h=="string"?h==="use-credentials"?h:"":void 0):h=null,s.d.C(u,h))},Vn.prefetchDNS=function(u){typeof u=="string"&&s.d.D(u)},Vn.preinit=function(u,h){if(typeof u=="string"&&h&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin),m=typeof h.integrity=="string"?h.integrity:void 0,y=typeof h.fetchPriority=="string"?h.fetchPriority:void 0;f==="style"?s.d.S(u,typeof h.precedence=="string"?h.precedence:void 0,{crossOrigin:p,integrity:m,fetchPriority:y}):f==="script"&&s.d.X(u,{crossOrigin:p,integrity:m,fetchPriority:y,nonce:typeof h.nonce=="string"?h.nonce:void 0})}},Vn.preinitModule=function(u,h){if(typeof u=="string")if(typeof h=="object"&&h!==null){if(h.as==null||h.as==="script"){var f=l(h.as,h.crossOrigin);s.d.M(u,{crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0})}}else h==null&&s.d.M(u)},Vn.preload=function(u,h){if(typeof u=="string"&&typeof h=="object"&&h!==null&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin);s.d.L(u,f,{crossOrigin:p,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0,type:typeof h.type=="string"?h.type:void 0,fetchPriority:typeof h.fetchPriority=="string"?h.fetchPriority:void 0,referrerPolicy:typeof h.referrerPolicy=="string"?h.referrerPolicy:void 0,imageSrcSet:typeof h.imageSrcSet=="string"?h.imageSrcSet:void 0,imageSizes:typeof h.imageSizes=="string"?h.imageSizes:void 0,media:typeof h.media=="string"?h.media:void 0})}},Vn.preloadModule=function(u,h){if(typeof u=="string")if(h){var f=l(h.as,h.crossOrigin);s.d.m(u,{as:typeof h.as=="string"&&h.as!=="script"?h.as:void 0,crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0})}else s.d.m(u)},Vn.requestFormReset=function(u){s.d.r(u)},Vn.unstable_batchedUpdates=function(u,h){return u(h)},Vn.useFormState=function(u,h,f){return i.H.useFormState(u,h,f)},Vn.useFormStatus=function(){return i.H.useHostTransitionStatus()},Vn.version="19.0.0",Vn}var HC;function TF(){if(HC)return $b.exports;HC=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),$b.exports=CF(),$b.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qC;function $F(){if(qC)return cc;qC=1;var n=NF(),t=vp(),e=TF();function s(o){var c="https://react.dev/errors/"+o;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var d=2;d<arguments.length;d++)c+="&args[]="+encodeURIComponent(arguments[d])}return"Minified React error #"+o+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11)}var r=Symbol.for("react.element"),i=Symbol.for("react.transitional.element"),l=Symbol.for("react.portal"),u=Symbol.for("react.fragment"),h=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.consumer"),y=Symbol.for("react.context"),b=Symbol.for("react.forward_ref"),v=Symbol.for("react.suspense"),w=Symbol.for("react.suspense_list"),S=Symbol.for("react.memo"),C=Symbol.for("react.lazy"),$=Symbol.for("react.offscreen"),T=Symbol.for("react.memo_cache_sentinel"),I=Symbol.iterator;function R(o){return o===null||typeof o!="object"?null:(o=I&&o[I]||o["@@iterator"],typeof o=="function"?o:null)}var F=Symbol.for("react.client.reference");function M(o){if(o==null)return null;if(typeof o=="function")return o.$$typeof===F?null:o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case u:return"Fragment";case l:return"Portal";case f:return"Profiler";case h:return"StrictMode";case v:return"Suspense";case w:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Provider";case m:return(o._context.displayName||"Context")+".Consumer";case b:var c=o.render;return o=o.displayName,o||(o=c.displayName||c.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case S:return c=o.displayName||null,c!==null?c:M(o.type)||"Memo";case C:c=o._payload,o=o._init;try{return M(o(c))}catch{}}return null}var D=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,O=Object.assign,A,W;function K(o){if(A===void 0)try{throw Error()}catch(d){var c=d.stack.trim().match(/\n( *(at )?)/);A=c&&c[1]||"",W=-1<d.stack.indexOf(`
    at`)?" (<anonymous>)":-1<d.stack.indexOf("@")?"@unknown:0:0":""}return`
`+A+o+W}var tt=!1;function Q(o,c){if(!o||tt)return"";tt=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var g={DetermineComponentFrameRoot:function(){try{if(c){var vt=function(){throw Error()};if(Object.defineProperty(vt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(vt,[])}catch(ft){var ct=ft}Reflect.construct(o,[],vt)}else{try{vt.call()}catch(ft){ct=ft}o.call(vt.prototype)}}else{try{throw Error()}catch(ft){ct=ft}(vt=o())&&typeof vt.catch=="function"&&vt.catch(function(){})}}catch(ft){if(ft&&ct&&typeof ft.stack=="string")return[ft.stack,ct.stack]}return[null,null]}};g.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var x=Object.getOwnPropertyDescriptor(g.DetermineComponentFrameRoot,"name");x&&x.configurable&&Object.defineProperty(g.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var N=g.DetermineComponentFrameRoot(),E=N[0],z=N[1];if(E&&z){var V=E.split(`
`),J=z.split(`
`);for(x=g=0;g<V.length&&!V[g].includes("DetermineComponentFrameRoot");)g++;for(;x<J.length&&!J[x].includes("DetermineComponentFrameRoot");)x++;if(g===V.length||x===J.length)for(g=V.length-1,x=J.length-1;1<=g&&0<=x&&V[g]!==J[x];)x--;for(;1<=g&&0<=x;g--,x--)if(V[g]!==J[x]){if(g!==1||x!==1)do if(g--,x--,0>x||V[g]!==J[x]){var pt=`
`+V[g].replace(" at new "," at ");return o.displayName&&pt.includes("<anonymous>")&&(pt=pt.replace("<anonymous>",o.displayName)),pt}while(1<=g&&0<=x);break}}}finally{tt=!1,Error.prepareStackTrace=d}return(d=o?o.displayName||o.name:"")?K(d):""}function P(o){switch(o.tag){case 26:case 27:case 5:return K(o.type);case 16:return K("Lazy");case 13:return K("Suspense");case 19:return K("SuspenseList");case 0:case 15:return o=Q(o.type,!1),o;case 11:return o=Q(o.type.render,!1),o;case 1:return o=Q(o.type,!0),o;default:return""}}function et(o){try{var c="";do c+=P(o),o=o.return;while(o);return c}catch(d){return`
Error generating stack: `+d.message+`
`+d.stack}}function Y(o){var c=o,d=o;if(o.alternate)for(;c.return;)c=c.return;else{o=c;do c=o,(c.flags&4098)!==0&&(d=c.return),o=c.return;while(o)}return c.tag===3?d:null}function rt(o){if(o.tag===13){var c=o.memoizedState;if(c===null&&(o=o.alternate,o!==null&&(c=o.memoizedState)),c!==null)return c.dehydrated}return null}function B(o){if(Y(o)!==o)throw Error(s(188))}function j(o){var c=o.alternate;if(!c){if(c=Y(o),c===null)throw Error(s(188));return c!==o?null:o}for(var d=o,g=c;;){var x=d.return;if(x===null)break;var N=x.alternate;if(N===null){if(g=x.return,g!==null){d=g;continue}break}if(x.child===N.child){for(N=x.child;N;){if(N===d)return B(x),o;if(N===g)return B(x),c;N=N.sibling}throw Error(s(188))}if(d.return!==g.return)d=x,g=N;else{for(var E=!1,z=x.child;z;){if(z===d){E=!0,d=x,g=N;break}if(z===g){E=!0,g=x,d=N;break}z=z.sibling}if(!E){for(z=N.child;z;){if(z===d){E=!0,d=N,g=x;break}if(z===g){E=!0,g=N,d=x;break}z=z.sibling}if(!E)throw Error(s(189))}}if(d.alternate!==g)throw Error(s(190))}if(d.tag!==3)throw Error(s(188));return d.stateNode.current===d?o:c}function lt(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o;for(o=o.child;o!==null;){if(c=lt(o),c!==null)return c;o=o.sibling}return null}var ot=Array.isArray,ut=e.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,mt={pending:!1,data:null,method:null,action:null},bt=[],Ct=-1;function wt(o){return{current:o}}function Tt(o){0>Ct||(o.current=bt[Ct],bt[Ct]=null,Ct--)}function It(o,c){Ct++,bt[Ct]=o.current,o.current=c}var Mt=wt(null),ee=wt(null),ne=wt(null),ye=wt(null);function ce(o,c){switch(It(ne,c),It(ee,o),It(Mt,null),o=c.nodeType,o){case 9:case 11:c=(c=c.documentElement)&&(c=c.namespaceURI)?fC(c):0;break;default:if(o=o===8?c.parentNode:c,c=o.tagName,o=o.namespaceURI)o=fC(o),c=pC(o,c);else switch(c){case"svg":c=1;break;case"math":c=2;break;default:c=0}}Tt(Mt),It(Mt,c)}function se(){Tt(Mt),Tt(ee),Tt(ne)}function be(o){o.memoizedState!==null&&It(ye,o);var c=Mt.current,d=pC(c,o.type);c!==d&&(It(ee,o),It(Mt,d))}function fe(o){ee.current===o&&(Tt(Mt),Tt(ee)),ye.current===o&&(Tt(ye),ac._currentValue=mt)}var vs=Object.prototype.hasOwnProperty,Be=n.unstable_scheduleCallback,_s=n.unstable_cancelCallback,jn=n.unstable_shouldYield,Ka=n.unstable_requestPaint,Ve=n.unstable_now,ua=n.unstable_getCurrentPriorityLevel,ca=n.unstable_ImmediatePriority,ha=n.unstable_UserBlockingPriority,ws=n.unstable_NormalPriority,Ri=n.unstable_LowPriority,Bo=n.unstable_IdlePriority,fu=n.log,pg=n.unstable_setDisableYieldValue,Ea=null,Xn=null;function mg(o){if(Xn&&typeof Xn.onCommitFiberRoot=="function")try{Xn.onCommitFiberRoot(Ea,o,void 0,(o.current.flags&128)===128)}catch{}}function Ar(o){if(typeof fu=="function"&&pg(o),Xn&&typeof Xn.setStrictMode=="function")try{Xn.setStrictMode(Ea,o)}catch{}}var Ss=Math.clz32?Math.clz32:aO,nO=Math.log,sO=Math.LN2;function aO(o){return o>>>=0,o===0?32:31-(nO(o)/sO|0)|0}var rd=128,id=4194304;function Di(o){var c=o&42;if(c!==0)return c;switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return o&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return o}}function od(o,c){var d=o.pendingLanes;if(d===0)return 0;var g=0,x=o.suspendedLanes,N=o.pingedLanes,E=o.warmLanes;o=o.finishedLanes!==0;var z=d&134217727;return z!==0?(d=z&~x,d!==0?g=Di(d):(N&=z,N!==0?g=Di(N):o||(E=z&~E,E!==0&&(g=Di(E))))):(z=d&~x,z!==0?g=Di(z):N!==0?g=Di(N):o||(E=d&~E,E!==0&&(g=Di(E)))),g===0?0:c!==0&&c!==g&&(c&x)===0&&(x=g&-g,E=c&-c,x>=E||x===32&&(E&4194176)!==0)?c:g}function pu(o,c){return(o.pendingLanes&~(o.suspendedLanes&~o.pingedLanes)&c)===0}function rO(o,c){switch(o){case 1:case 2:case 4:case 8:return c+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function rw(){var o=rd;return rd<<=1,(rd&4194176)===0&&(rd=128),o}function iw(){var o=id;return id<<=1,(id&62914560)===0&&(id=4194304),o}function gg(o){for(var c=[],d=0;31>d;d++)c.push(o);return c}function mu(o,c){o.pendingLanes|=c,c!==268435456&&(o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0)}function iO(o,c,d,g,x,N){var E=o.pendingLanes;o.pendingLanes=d,o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0,o.expiredLanes&=d,o.entangledLanes&=d,o.errorRecoveryDisabledLanes&=d,o.shellSuspendCounter=0;var z=o.entanglements,V=o.expirationTimes,J=o.hiddenUpdates;for(d=E&~d;0<d;){var pt=31-Ss(d),vt=1<<pt;z[pt]=0,V[pt]=-1;var ct=J[pt];if(ct!==null)for(J[pt]=null,pt=0;pt<ct.length;pt++){var ft=ct[pt];ft!==null&&(ft.lane&=-536870913)}d&=~vt}g!==0&&ow(o,g,0),N!==0&&x===0&&o.tag!==0&&(o.suspendedLanes|=N&~(E&~c))}function ow(o,c,d){o.pendingLanes|=c,o.suspendedLanes&=~c;var g=31-Ss(c);o.entangledLanes|=c,o.entanglements[g]=o.entanglements[g]|1073741824|d&4194218}function lw(o,c){var d=o.entangledLanes|=c;for(o=o.entanglements;d;){var g=31-Ss(d),x=1<<g;x&c|o[g]&c&&(o[g]|=c),d&=~x}}function uw(o){return o&=-o,2<o?8<o?(o&134217727)!==0?32:268435456:8:2}function cw(){var o=ut.p;return o!==0?o:(o=window.event,o===void 0?32:DC(o.type))}function oO(o,c){var d=ut.p;try{return ut.p=o,c()}finally{ut.p=d}}var Rr=Math.random().toString(36).slice(2),Mn="__reactFiber$"+Rr,ns="__reactProps$"+Rr,Vo="__reactContainer$"+Rr,yg="__reactEvents$"+Rr,lO="__reactListeners$"+Rr,uO="__reactHandles$"+Rr,hw="__reactResources$"+Rr,gu="__reactMarker$"+Rr;function bg(o){delete o[Mn],delete o[ns],delete o[yg],delete o[lO],delete o[uO]}function Oi(o){var c=o[Mn];if(c)return c;for(var d=o.parentNode;d;){if(c=d[Vo]||d[Mn]){if(d=c.alternate,c.child!==null||d!==null&&d.child!==null)for(o=yC(o);o!==null;){if(d=o[Mn])return d;o=yC(o)}return c}o=d,d=o.parentNode}return null}function Po(o){if(o=o[Mn]||o[Vo]){var c=o.tag;if(c===5||c===6||c===13||c===26||c===27||c===3)return o}return null}function yu(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o.stateNode;throw Error(s(33))}function Uo(o){var c=o[hw];return c||(c=o[hw]={hoistableStyles:new Map,hoistableScripts:new Map}),c}function yn(o){o[gu]=!0}var dw=new Set,fw={};function _i(o,c){Wo(o,c),Wo(o+"Capture",c)}function Wo(o,c){for(fw[o]=c,o=0;o<c.length;o++)dw.add(c[o])}var Ya=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),cO=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),pw={},mw={};function hO(o){return vs.call(mw,o)?!0:vs.call(pw,o)?!1:cO.test(o)?mw[o]=!0:(pw[o]=!0,!1)}function ld(o,c,d){if(hO(c))if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":o.removeAttribute(c);return;case"boolean":var g=c.toLowerCase().slice(0,5);if(g!=="data-"&&g!=="aria-"){o.removeAttribute(c);return}}o.setAttribute(c,""+d)}}function ud(o,c,d){if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(c);return}o.setAttribute(c,""+d)}}function Za(o,c,d,g){if(g===null)o.removeAttribute(d);else{switch(typeof g){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(d);return}o.setAttributeNS(c,d,""+g)}}function Fs(o){switch(typeof o){case"bigint":case"boolean":case"number":case"string":case"undefined":return o;case"object":return o;default:return""}}function gw(o){var c=o.type;return(o=o.nodeName)&&o.toLowerCase()==="input"&&(c==="checkbox"||c==="radio")}function dO(o){var c=gw(o)?"checked":"value",d=Object.getOwnPropertyDescriptor(o.constructor.prototype,c),g=""+o[c];if(!o.hasOwnProperty(c)&&typeof d<"u"&&typeof d.get=="function"&&typeof d.set=="function"){var x=d.get,N=d.set;return Object.defineProperty(o,c,{configurable:!0,get:function(){return x.call(this)},set:function(E){g=""+E,N.call(this,E)}}),Object.defineProperty(o,c,{enumerable:d.enumerable}),{getValue:function(){return g},setValue:function(E){g=""+E},stopTracking:function(){o._valueTracker=null,delete o[c]}}}}function cd(o){o._valueTracker||(o._valueTracker=dO(o))}function yw(o){if(!o)return!1;var c=o._valueTracker;if(!c)return!0;var d=c.getValue(),g="";return o&&(g=gw(o)?o.checked?"true":"false":o.value),o=g,o!==d?(c.setValue(o),!0):!1}function hd(o){if(o=o||(typeof document<"u"?document:void 0),typeof o>"u")return null;try{return o.activeElement||o.body}catch{return o.body}}var fO=/[\n"\\]/g;function Ls(o){return o.replace(fO,function(c){return"\\"+c.charCodeAt(0).toString(16)+" "})}function xg(o,c,d,g,x,N,E,z){o.name="",E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"?o.type=E:o.removeAttribute("type"),c!=null?E==="number"?(c===0&&o.value===""||o.value!=c)&&(o.value=""+Fs(c)):o.value!==""+Fs(c)&&(o.value=""+Fs(c)):E!=="submit"&&E!=="reset"||o.removeAttribute("value"),c!=null?vg(o,E,Fs(c)):d!=null?vg(o,E,Fs(d)):g!=null&&o.removeAttribute("value"),x==null&&N!=null&&(o.defaultChecked=!!N),x!=null&&(o.checked=x&&typeof x!="function"&&typeof x!="symbol"),z!=null&&typeof z!="function"&&typeof z!="symbol"&&typeof z!="boolean"?o.name=""+Fs(z):o.removeAttribute("name")}function bw(o,c,d,g,x,N,E,z){if(N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"&&(o.type=N),c!=null||d!=null){if(!(N!=="submit"&&N!=="reset"||c!=null))return;d=d!=null?""+Fs(d):"",c=c!=null?""+Fs(c):d,z||c===o.value||(o.value=c),o.defaultValue=c}g=g??x,g=typeof g!="function"&&typeof g!="symbol"&&!!g,o.checked=z?o.checked:!!g,o.defaultChecked=!!g,E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"&&(o.name=E)}function vg(o,c,d){c==="number"&&hd(o.ownerDocument)===o||o.defaultValue===""+d||(o.defaultValue=""+d)}function Go(o,c,d,g){if(o=o.options,c){c={};for(var x=0;x<d.length;x++)c["$"+d[x]]=!0;for(d=0;d<o.length;d++)x=c.hasOwnProperty("$"+o[d].value),o[d].selected!==x&&(o[d].selected=x),x&&g&&(o[d].defaultSelected=!0)}else{for(d=""+Fs(d),c=null,x=0;x<o.length;x++){if(o[x].value===d){o[x].selected=!0,g&&(o[x].defaultSelected=!0);return}c!==null||o[x].disabled||(c=o[x])}c!==null&&(c.selected=!0)}}function xw(o,c,d){if(c!=null&&(c=""+Fs(c),c!==o.value&&(o.value=c),d==null)){o.defaultValue!==c&&(o.defaultValue=c);return}o.defaultValue=d!=null?""+Fs(d):""}function vw(o,c,d,g){if(c==null){if(g!=null){if(d!=null)throw Error(s(92));if(ot(g)){if(1<g.length)throw Error(s(93));g=g[0]}d=g}d==null&&(d=""),c=d}d=Fs(c),o.defaultValue=d,g=o.textContent,g===d&&g!==""&&g!==null&&(o.value=g)}function Ho(o,c){if(c){var d=o.firstChild;if(d&&d===o.lastChild&&d.nodeType===3){d.nodeValue=c;return}}o.textContent=c}var pO=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function ww(o,c,d){var g=c.indexOf("--")===0;d==null||typeof d=="boolean"||d===""?g?o.setProperty(c,""):c==="float"?o.cssFloat="":o[c]="":g?o.setProperty(c,d):typeof d!="number"||d===0||pO.has(c)?c==="float"?o.cssFloat=d:o[c]=(""+d).trim():o[c]=d+"px"}function Sw(o,c,d){if(c!=null&&typeof c!="object")throw Error(s(62));if(o=o.style,d!=null){for(var g in d)!d.hasOwnProperty(g)||c!=null&&c.hasOwnProperty(g)||(g.indexOf("--")===0?o.setProperty(g,""):g==="float"?o.cssFloat="":o[g]="");for(var x in c)g=c[x],c.hasOwnProperty(x)&&d[x]!==g&&ww(o,x,g)}else for(var N in c)c.hasOwnProperty(N)&&ww(o,N,c[N])}function wg(o){if(o.indexOf("-")===-1)return!1;switch(o){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var mO=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),gO=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function dd(o){return gO.test(""+o)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":o}var Sg=null;function Ng(o){return o=o.target||o.srcElement||window,o.correspondingUseElement&&(o=o.correspondingUseElement),o.nodeType===3?o.parentNode:o}var qo=null,jo=null;function Nw(o){var c=Po(o);if(c&&(o=c.stateNode)){var d=o[ns]||null;t:switch(o=c.stateNode,c.type){case"input":if(xg(o,d.value,d.defaultValue,d.defaultValue,d.checked,d.defaultChecked,d.type,d.name),c=d.name,d.type==="radio"&&c!=null){for(d=o;d.parentNode;)d=d.parentNode;for(d=d.querySelectorAll('input[name="'+Ls(""+c)+'"][type="radio"]'),c=0;c<d.length;c++){var g=d[c];if(g!==o&&g.form===o.form){var x=g[ns]||null;if(!x)throw Error(s(90));xg(g,x.value,x.defaultValue,x.defaultValue,x.checked,x.defaultChecked,x.type,x.name)}}for(c=0;c<d.length;c++)g=d[c],g.form===o.form&&yw(g)}break t;case"textarea":xw(o,d.value,d.defaultValue);break t;case"select":c=d.value,c!=null&&Go(o,!!d.multiple,c,!1)}}}var Cg=!1;function Cw(o,c,d){if(Cg)return o(c,d);Cg=!0;try{var g=o(c);return g}finally{if(Cg=!1,(qo!==null||jo!==null)&&(Kd(),qo&&(c=qo,o=jo,jo=qo=null,Nw(c),o)))for(c=0;c<o.length;c++)Nw(o[c])}}function bu(o,c){var d=o.stateNode;if(d===null)return null;var g=d[ns]||null;if(g===null)return null;d=g[c];t:switch(c){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(g=!g.disabled)||(o=o.type,g=!(o==="button"||o==="input"||o==="select"||o==="textarea")),o=!g;break t;default:o=!1}if(o)return null;if(d&&typeof d!="function")throw Error(s(231,c,typeof d));return d}var Tg=!1;if(Ya)try{var xu={};Object.defineProperty(xu,"passive",{get:function(){Tg=!0}}),window.addEventListener("test",xu,xu),window.removeEventListener("test",xu,xu)}catch{Tg=!1}var Dr=null,$g=null,fd=null;function Tw(){if(fd)return fd;var o,c=$g,d=c.length,g,x="value"in Dr?Dr.value:Dr.textContent,N=x.length;for(o=0;o<d&&c[o]===x[o];o++);var E=d-o;for(g=1;g<=E&&c[d-g]===x[N-g];g++);return fd=x.slice(o,1<g?1-g:void 0)}function pd(o){var c=o.keyCode;return"charCode"in o?(o=o.charCode,o===0&&c===13&&(o=13)):o=c,o===10&&(o=13),32<=o||o===13?o:0}function md(){return!0}function $w(){return!1}function ss(o){function c(d,g,x,N,E){this._reactName=d,this._targetInst=x,this.type=g,this.nativeEvent=N,this.target=E,this.currentTarget=null;for(var z in o)o.hasOwnProperty(z)&&(d=o[z],this[z]=d?d(N):N[z]);return this.isDefaultPrevented=(N.defaultPrevented!=null?N.defaultPrevented:N.returnValue===!1)?md:$w,this.isPropagationStopped=$w,this}return O(c.prototype,{preventDefault:function(){this.defaultPrevented=!0;var d=this.nativeEvent;d&&(d.preventDefault?d.preventDefault():typeof d.returnValue!="unknown"&&(d.returnValue=!1),this.isDefaultPrevented=md)},stopPropagation:function(){var d=this.nativeEvent;d&&(d.stopPropagation?d.stopPropagation():typeof d.cancelBubble!="unknown"&&(d.cancelBubble=!0),this.isPropagationStopped=md)},persist:function(){},isPersistent:md}),c}var Fi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(o){return o.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},gd=ss(Fi),vu=O({},Fi,{view:0,detail:0}),yO=ss(vu),kg,Ig,wu,yd=O({},vu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ag,button:0,buttons:0,relatedTarget:function(o){return o.relatedTarget===void 0?o.fromElement===o.srcElement?o.toElement:o.fromElement:o.relatedTarget},movementX:function(o){return"movementX"in o?o.movementX:(o!==wu&&(wu&&o.type==="mousemove"?(kg=o.screenX-wu.screenX,Ig=o.screenY-wu.screenY):Ig=kg=0,wu=o),kg)},movementY:function(o){return"movementY"in o?o.movementY:Ig}}),kw=ss(yd),bO=O({},yd,{dataTransfer:0}),xO=ss(bO),vO=O({},vu,{relatedTarget:0}),Eg=ss(vO),wO=O({},Fi,{animationName:0,elapsedTime:0,pseudoElement:0}),SO=ss(wO),NO=O({},Fi,{clipboardData:function(o){return"clipboardData"in o?o.clipboardData:window.clipboardData}}),CO=ss(NO),TO=O({},Fi,{data:0}),Iw=ss(TO),$O={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kO={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},IO={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function EO(o){var c=this.nativeEvent;return c.getModifierState?c.getModifierState(o):(o=IO[o])?!!c[o]:!1}function Ag(){return EO}var AO=O({},vu,{key:function(o){if(o.key){var c=$O[o.key]||o.key;if(c!=="Unidentified")return c}return o.type==="keypress"?(o=pd(o),o===13?"Enter":String.fromCharCode(o)):o.type==="keydown"||o.type==="keyup"?kO[o.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ag,charCode:function(o){return o.type==="keypress"?pd(o):0},keyCode:function(o){return o.type==="keydown"||o.type==="keyup"?o.keyCode:0},which:function(o){return o.type==="keypress"?pd(o):o.type==="keydown"||o.type==="keyup"?o.keyCode:0}}),RO=ss(AO),DO=O({},yd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Ew=ss(DO),OO=O({},vu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ag}),_O=ss(OO),FO=O({},Fi,{propertyName:0,elapsedTime:0,pseudoElement:0}),LO=ss(FO),zO=O({},yd,{deltaX:function(o){return"deltaX"in o?o.deltaX:"wheelDeltaX"in o?-o.wheelDeltaX:0},deltaY:function(o){return"deltaY"in o?o.deltaY:"wheelDeltaY"in o?-o.wheelDeltaY:"wheelDelta"in o?-o.wheelDelta:0},deltaZ:0,deltaMode:0}),MO=ss(zO),BO=O({},Fi,{newState:0,oldState:0}),VO=ss(BO),PO=[9,13,27,32],Rg=Ya&&"CompositionEvent"in window,Su=null;Ya&&"documentMode"in document&&(Su=document.documentMode);var UO=Ya&&"TextEvent"in window&&!Su,Aw=Ya&&(!Rg||Su&&8<Su&&11>=Su),Rw=" ",Dw=!1;function Ow(o,c){switch(o){case"keyup":return PO.indexOf(c.keyCode)!==-1;case"keydown":return c.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function _w(o){return o=o.detail,typeof o=="object"&&"data"in o?o.data:null}var Xo=!1;function WO(o,c){switch(o){case"compositionend":return _w(c);case"keypress":return c.which!==32?null:(Dw=!0,Rw);case"textInput":return o=c.data,o===Rw&&Dw?null:o;default:return null}}function GO(o,c){if(Xo)return o==="compositionend"||!Rg&&Ow(o,c)?(o=Tw(),fd=$g=Dr=null,Xo=!1,o):null;switch(o){case"paste":return null;case"keypress":if(!(c.ctrlKey||c.altKey||c.metaKey)||c.ctrlKey&&c.altKey){if(c.char&&1<c.char.length)return c.char;if(c.which)return String.fromCharCode(c.which)}return null;case"compositionend":return Aw&&c.locale!=="ko"?null:c.data;default:return null}}var HO={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fw(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c==="input"?!!HO[o.type]:c==="textarea"}function Lw(o,c,d,g){qo?jo?jo.push(g):jo=[g]:qo=g,c=tf(c,"onChange"),0<c.length&&(d=new gd("onChange","change",null,d,g),o.push({event:d,listeners:c}))}var Nu=null,Cu=null;function qO(o){lC(o,0)}function bd(o){var c=yu(o);if(yw(c))return o}function zw(o,c){if(o==="change")return c}var Mw=!1;if(Ya){var Dg;if(Ya){var Og="oninput"in document;if(!Og){var Bw=document.createElement("div");Bw.setAttribute("oninput","return;"),Og=typeof Bw.oninput=="function"}Dg=Og}else Dg=!1;Mw=Dg&&(!document.documentMode||9<document.documentMode)}function Vw(){Nu&&(Nu.detachEvent("onpropertychange",Pw),Cu=Nu=null)}function Pw(o){if(o.propertyName==="value"&&bd(Cu)){var c=[];Lw(c,Cu,o,Ng(o)),Cw(qO,c)}}function jO(o,c,d){o==="focusin"?(Vw(),Nu=c,Cu=d,Nu.attachEvent("onpropertychange",Pw)):o==="focusout"&&Vw()}function XO(o){if(o==="selectionchange"||o==="keyup"||o==="keydown")return bd(Cu)}function KO(o,c){if(o==="click")return bd(c)}function YO(o,c){if(o==="input"||o==="change")return bd(c)}function ZO(o,c){return o===c&&(o!==0||1/o===1/c)||o!==o&&c!==c}var Ns=typeof Object.is=="function"?Object.is:ZO;function Tu(o,c){if(Ns(o,c))return!0;if(typeof o!="object"||o===null||typeof c!="object"||c===null)return!1;var d=Object.keys(o),g=Object.keys(c);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var x=d[g];if(!vs.call(c,x)||!Ns(o[x],c[x]))return!1}return!0}function Uw(o){for(;o&&o.firstChild;)o=o.firstChild;return o}function Ww(o,c){var d=Uw(o);o=0;for(var g;d;){if(d.nodeType===3){if(g=o+d.textContent.length,o<=c&&g>=c)return{node:d,offset:c-o};o=g}t:{for(;d;){if(d.nextSibling){d=d.nextSibling;break t}d=d.parentNode}d=void 0}d=Uw(d)}}function Gw(o,c){return o&&c?o===c?!0:o&&o.nodeType===3?!1:c&&c.nodeType===3?Gw(o,c.parentNode):"contains"in o?o.contains(c):o.compareDocumentPosition?!!(o.compareDocumentPosition(c)&16):!1:!1}function Hw(o){o=o!=null&&o.ownerDocument!=null&&o.ownerDocument.defaultView!=null?o.ownerDocument.defaultView:window;for(var c=hd(o.document);c instanceof o.HTMLIFrameElement;){try{var d=typeof c.contentWindow.location.href=="string"}catch{d=!1}if(d)o=c.contentWindow;else break;c=hd(o.document)}return c}function _g(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c&&(c==="input"&&(o.type==="text"||o.type==="search"||o.type==="tel"||o.type==="url"||o.type==="password")||c==="textarea"||o.contentEditable==="true")}function QO(o,c){var d=Hw(c);c=o.focusedElem;var g=o.selectionRange;if(d!==c&&c&&c.ownerDocument&&Gw(c.ownerDocument.documentElement,c)){if(g!==null&&_g(c)){if(o=g.start,d=g.end,d===void 0&&(d=o),"selectionStart"in c)c.selectionStart=o,c.selectionEnd=Math.min(d,c.value.length);else if(d=(o=c.ownerDocument||document)&&o.defaultView||window,d.getSelection){d=d.getSelection();var x=c.textContent.length,N=Math.min(g.start,x);g=g.end===void 0?N:Math.min(g.end,x),!d.extend&&N>g&&(x=g,g=N,N=x),x=Ww(c,N);var E=Ww(c,g);x&&E&&(d.rangeCount!==1||d.anchorNode!==x.node||d.anchorOffset!==x.offset||d.focusNode!==E.node||d.focusOffset!==E.offset)&&(o=o.createRange(),o.setStart(x.node,x.offset),d.removeAllRanges(),N>g?(d.addRange(o),d.extend(E.node,E.offset)):(o.setEnd(E.node,E.offset),d.addRange(o)))}}for(o=[],d=c;d=d.parentNode;)d.nodeType===1&&o.push({element:d,left:d.scrollLeft,top:d.scrollTop});for(typeof c.focus=="function"&&c.focus(),c=0;c<o.length;c++)d=o[c],d.element.scrollLeft=d.left,d.element.scrollTop=d.top}}var JO=Ya&&"documentMode"in document&&11>=document.documentMode,Ko=null,Fg=null,$u=null,Lg=!1;function qw(o,c,d){var g=d.window===d?d.document:d.nodeType===9?d:d.ownerDocument;Lg||Ko==null||Ko!==hd(g)||(g=Ko,"selectionStart"in g&&_g(g)?g={start:g.selectionStart,end:g.selectionEnd}:(g=(g.ownerDocument&&g.ownerDocument.defaultView||window).getSelection(),g={anchorNode:g.anchorNode,anchorOffset:g.anchorOffset,focusNode:g.focusNode,focusOffset:g.focusOffset}),$u&&Tu($u,g)||($u=g,g=tf(Fg,"onSelect"),0<g.length&&(c=new gd("onSelect","select",null,c,d),o.push({event:c,listeners:g}),c.target=Ko)))}function Li(o,c){var d={};return d[o.toLowerCase()]=c.toLowerCase(),d["Webkit"+o]="webkit"+c,d["Moz"+o]="moz"+c,d}var Yo={animationend:Li("Animation","AnimationEnd"),animationiteration:Li("Animation","AnimationIteration"),animationstart:Li("Animation","AnimationStart"),transitionrun:Li("Transition","TransitionRun"),transitionstart:Li("Transition","TransitionStart"),transitioncancel:Li("Transition","TransitionCancel"),transitionend:Li("Transition","TransitionEnd")},zg={},jw={};Ya&&(jw=document.createElement("div").style,"AnimationEvent"in window||(delete Yo.animationend.animation,delete Yo.animationiteration.animation,delete Yo.animationstart.animation),"TransitionEvent"in window||delete Yo.transitionend.transition);function zi(o){if(zg[o])return zg[o];if(!Yo[o])return o;var c=Yo[o],d;for(d in c)if(c.hasOwnProperty(d)&&d in jw)return zg[o]=c[d];return o}var Xw=zi("animationend"),Kw=zi("animationiteration"),Yw=zi("animationstart"),t_=zi("transitionrun"),e_=zi("transitionstart"),n_=zi("transitioncancel"),Zw=zi("transitionend"),Qw=new Map,Jw="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function da(o,c){Qw.set(o,c),_i(c,[o])}var zs=[],Zo=0,Mg=0;function xd(){for(var o=Zo,c=Mg=Zo=0;c<o;){var d=zs[c];zs[c++]=null;var g=zs[c];zs[c++]=null;var x=zs[c];zs[c++]=null;var N=zs[c];if(zs[c++]=null,g!==null&&x!==null){var E=g.pending;E===null?x.next=x:(x.next=E.next,E.next=x),g.pending=x}N!==0&&tS(d,x,N)}}function vd(o,c,d,g){zs[Zo++]=o,zs[Zo++]=c,zs[Zo++]=d,zs[Zo++]=g,Mg|=g,o.lanes|=g,o=o.alternate,o!==null&&(o.lanes|=g)}function Bg(o,c,d,g){return vd(o,c,d,g),wd(o)}function Or(o,c){return vd(o,null,null,c),wd(o)}function tS(o,c,d){o.lanes|=d;var g=o.alternate;g!==null&&(g.lanes|=d);for(var x=!1,N=o.return;N!==null;)N.childLanes|=d,g=N.alternate,g!==null&&(g.childLanes|=d),N.tag===22&&(o=N.stateNode,o===null||o._visibility&1||(x=!0)),o=N,N=N.return;x&&c!==null&&o.tag===3&&(N=o.stateNode,x=31-Ss(d),N=N.hiddenUpdates,o=N[x],o===null?N[x]=[c]:o.push(c),c.lane=d|536870912)}function wd(o){if(50<Zu)throw Zu=0,Hy=null,Error(s(185));for(var c=o.return;c!==null;)o=c,c=o.return;return o.tag===3?o.stateNode:null}var Qo={},eS=new WeakMap;function Ms(o,c){if(typeof o=="object"&&o!==null){var d=eS.get(o);return d!==void 0?d:(c={value:o,source:c,stack:et(c)},eS.set(o,c),c)}return{value:o,source:c,stack:et(c)}}var Jo=[],tl=0,Sd=null,Nd=0,Bs=[],Vs=0,Mi=null,Qa=1,Ja="";function Bi(o,c){Jo[tl++]=Nd,Jo[tl++]=Sd,Sd=o,Nd=c}function nS(o,c,d){Bs[Vs++]=Qa,Bs[Vs++]=Ja,Bs[Vs++]=Mi,Mi=o;var g=Qa;o=Ja;var x=32-Ss(g)-1;g&=~(1<<x),d+=1;var N=32-Ss(c)+x;if(30<N){var E=x-x%5;N=(g&(1<<E)-1).toString(32),g>>=E,x-=E,Qa=1<<32-Ss(c)+x|d<<x|g,Ja=N+o}else Qa=1<<N|d<<x|g,Ja=o}function Vg(o){o.return!==null&&(Bi(o,1),nS(o,1,0))}function Pg(o){for(;o===Sd;)Sd=Jo[--tl],Jo[tl]=null,Nd=Jo[--tl],Jo[tl]=null;for(;o===Mi;)Mi=Bs[--Vs],Bs[Vs]=null,Ja=Bs[--Vs],Bs[Vs]=null,Qa=Bs[--Vs],Bs[Vs]=null}var Kn=null,An=null,he=!1,fa=null,Aa=!1,Ug=Error(s(519));function Vi(o){var c=Error(s(418,""));throw Eu(Ms(c,o)),Ug}function sS(o){var c=o.stateNode,d=o.type,g=o.memoizedProps;switch(c[Mn]=o,c[ns]=g,d){case"dialog":ie("cancel",c),ie("close",c);break;case"iframe":case"object":case"embed":ie("load",c);break;case"video":case"audio":for(d=0;d<Ju.length;d++)ie(Ju[d],c);break;case"source":ie("error",c);break;case"img":case"image":case"link":ie("error",c),ie("load",c);break;case"details":ie("toggle",c);break;case"input":ie("invalid",c),bw(c,g.value,g.defaultValue,g.checked,g.defaultChecked,g.type,g.name,!0),cd(c);break;case"select":ie("invalid",c);break;case"textarea":ie("invalid",c),vw(c,g.value,g.defaultValue,g.children),cd(c)}d=g.children,typeof d!="string"&&typeof d!="number"&&typeof d!="bigint"||c.textContent===""+d||g.suppressHydrationWarning===!0||dC(c.textContent,d)?(g.popover!=null&&(ie("beforetoggle",c),ie("toggle",c)),g.onScroll!=null&&ie("scroll",c),g.onScrollEnd!=null&&ie("scrollend",c),g.onClick!=null&&(c.onclick=ef),c=!0):c=!1,c||Vi(o)}function aS(o){for(Kn=o.return;Kn;)switch(Kn.tag){case 3:case 27:Aa=!0;return;case 5:case 13:Aa=!1;return;default:Kn=Kn.return}}function ku(o){if(o!==Kn)return!1;if(!he)return aS(o),he=!0,!1;var c=!1,d;if((d=o.tag!==3&&o.tag!==27)&&((d=o.tag===5)&&(d=o.type,d=!(d!=="form"&&d!=="button")||lb(o.type,o.memoizedProps)),d=!d),d&&(c=!0),c&&An&&Vi(o),aS(o),o.tag===13){if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));t:{for(o=o.nextSibling,c=0;o;){if(o.nodeType===8)if(d=o.data,d==="/$"){if(c===0){An=ma(o.nextSibling);break t}c--}else d!=="$"&&d!=="$!"&&d!=="$?"||c++;o=o.nextSibling}An=null}}else An=Kn?ma(o.stateNode.nextSibling):null;return!0}function Iu(){An=Kn=null,he=!1}function Eu(o){fa===null?fa=[o]:fa.push(o)}var Au=Error(s(460)),rS=Error(s(474)),Wg={then:function(){}};function iS(o){return o=o.status,o==="fulfilled"||o==="rejected"}function Cd(){}function oS(o,c,d){switch(d=o[d],d===void 0?o.push(c):d!==c&&(c.then(Cd,Cd),c=d),c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===Au?Error(s(483)):o;default:if(typeof c.status=="string")c.then(Cd,Cd);else{if(o=$e,o!==null&&100<o.shellSuspendCounter)throw Error(s(482));o=c,o.status="pending",o.then(function(g){if(c.status==="pending"){var x=c;x.status="fulfilled",x.value=g}},function(g){if(c.status==="pending"){var x=c;x.status="rejected",x.reason=g}})}switch(c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===Au?Error(s(483)):o}throw Ru=c,Au}}var Ru=null;function lS(){if(Ru===null)throw Error(s(459));var o=Ru;return Ru=null,o}var el=null,Du=0;function Td(o){var c=Du;return Du+=1,el===null&&(el=[]),oS(el,o,c)}function Ou(o,c){c=c.props.ref,o.ref=c!==void 0?c:null}function $d(o,c){throw c.$$typeof===r?Error(s(525)):(o=Object.prototype.toString.call(c),Error(s(31,o==="[object Object]"?"object with keys {"+Object.keys(c).join(", ")+"}":o)))}function uS(o){var c=o._init;return c(o._payload)}function cS(o){function c(st,Z){if(o){var it=st.deletions;it===null?(st.deletions=[Z],st.flags|=16):it.push(Z)}}function d(st,Z){if(!o)return null;for(;Z!==null;)c(st,Z),Z=Z.sibling;return null}function g(st){for(var Z=new Map;st!==null;)st.key!==null?Z.set(st.key,st):Z.set(st.index,st),st=st.sibling;return Z}function x(st,Z){return st=Hr(st,Z),st.index=0,st.sibling=null,st}function N(st,Z,it){return st.index=it,o?(it=st.alternate,it!==null?(it=it.index,it<Z?(st.flags|=33554434,Z):it):(st.flags|=33554434,Z)):(st.flags|=1048576,Z)}function E(st){return o&&st.alternate===null&&(st.flags|=33554434),st}function z(st,Z,it,gt){return Z===null||Z.tag!==6?(Z=zy(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function V(st,Z,it,gt){var Dt=it.type;return Dt===u?pt(st,Z,it.props.children,gt,it.key):Z!==null&&(Z.elementType===Dt||typeof Dt=="object"&&Dt!==null&&Dt.$$typeof===C&&uS(Dt)===Z.type)?(Z=x(Z,it.props),Ou(Z,it),Z.return=st,Z):(Z=Gd(it.type,it.key,it.props,null,st.mode,gt),Ou(Z,it),Z.return=st,Z)}function J(st,Z,it,gt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==it.containerInfo||Z.stateNode.implementation!==it.implementation?(Z=My(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it.children||[]),Z.return=st,Z)}function pt(st,Z,it,gt,Dt){return Z===null||Z.tag!==7?(Z=Yi(it,st.mode,gt,Dt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function vt(st,Z,it){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=zy(""+Z,st.mode,it),Z.return=st,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case i:return it=Gd(Z.type,Z.key,Z.props,null,st.mode,it),Ou(it,Z),it.return=st,it;case l:return Z=My(Z,st.mode,it),Z.return=st,Z;case C:var gt=Z._init;return Z=gt(Z._payload),vt(st,Z,it)}if(ot(Z)||R(Z))return Z=Yi(Z,st.mode,it,null),Z.return=st,Z;if(typeof Z.then=="function")return vt(st,Td(Z),it);if(Z.$$typeof===y)return vt(st,Pd(st,Z),it);$d(st,Z)}return null}function ct(st,Z,it,gt){var Dt=Z!==null?Z.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Dt!==null?null:z(st,Z,""+it,gt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case i:return it.key===Dt?V(st,Z,it,gt):null;case l:return it.key===Dt?J(st,Z,it,gt):null;case C:return Dt=it._init,it=Dt(it._payload),ct(st,Z,it,gt)}if(ot(it)||R(it))return Dt!==null?null:pt(st,Z,it,gt,null);if(typeof it.then=="function")return ct(st,Z,Td(it),gt);if(it.$$typeof===y)return ct(st,Z,Pd(st,it),gt);$d(st,it)}return null}function ft(st,Z,it,gt,Dt){if(typeof gt=="string"&&gt!==""||typeof gt=="number"||typeof gt=="bigint")return st=st.get(it)||null,z(Z,st,""+gt,Dt);if(typeof gt=="object"&&gt!==null){switch(gt.$$typeof){case i:return st=st.get(gt.key===null?it:gt.key)||null,V(Z,st,gt,Dt);case l:return st=st.get(gt.key===null?it:gt.key)||null,J(Z,st,gt,Dt);case C:var Qt=gt._init;return gt=Qt(gt._payload),ft(st,Z,it,gt,Dt)}if(ot(gt)||R(gt))return st=st.get(it)||null,pt(Z,st,gt,Dt,null);if(typeof gt.then=="function")return ft(st,Z,it,Td(gt),Dt);if(gt.$$typeof===y)return ft(st,Z,it,Pd(Z,gt),Dt);$d(Z,gt)}return null}function _t(st,Z,it,gt){for(var Dt=null,Qt=null,zt=Z,Bt=Z=0,vn=null;zt!==null&&Bt<it.length;Bt++){zt.index>Bt?(vn=zt,zt=null):vn=zt.sibling;var de=ct(st,zt,it[Bt],gt);if(de===null){zt===null&&(zt=vn);break}o&&zt&&de.alternate===null&&c(st,zt),Z=N(de,Z,Bt),Qt===null?Dt=de:Qt.sibling=de,Qt=de,zt=vn}if(Bt===it.length)return d(st,zt),he&&Bi(st,Bt),Dt;if(zt===null){for(;Bt<it.length;Bt++)zt=vt(st,it[Bt],gt),zt!==null&&(Z=N(zt,Z,Bt),Qt===null?Dt=zt:Qt.sibling=zt,Qt=zt);return he&&Bi(st,Bt),Dt}for(zt=g(zt);Bt<it.length;Bt++)vn=ft(zt,st,Bt,it[Bt],gt),vn!==null&&(o&&vn.alternate!==null&&zt.delete(vn.key===null?Bt:vn.key),Z=N(vn,Z,Bt),Qt===null?Dt=vn:Qt.sibling=vn,Qt=vn);return o&&zt.forEach(function(Qr){return c(st,Qr)}),he&&Bi(st,Bt),Dt}function Ut(st,Z,it,gt){if(it==null)throw Error(s(151));for(var Dt=null,Qt=null,zt=Z,Bt=Z=0,vn=null,de=it.next();zt!==null&&!de.done;Bt++,de=it.next()){zt.index>Bt?(vn=zt,zt=null):vn=zt.sibling;var Qr=ct(st,zt,de.value,gt);if(Qr===null){zt===null&&(zt=vn);break}o&&zt&&Qr.alternate===null&&c(st,zt),Z=N(Qr,Z,Bt),Qt===null?Dt=Qr:Qt.sibling=Qr,Qt=Qr,zt=vn}if(de.done)return d(st,zt),he&&Bi(st,Bt),Dt;if(zt===null){for(;!de.done;Bt++,de=it.next())de=vt(st,de.value,gt),de!==null&&(Z=N(de,Z,Bt),Qt===null?Dt=de:Qt.sibling=de,Qt=de);return he&&Bi(st,Bt),Dt}for(zt=g(zt);!de.done;Bt++,de=it.next())de=ft(zt,st,Bt,de.value,gt),de!==null&&(o&&de.alternate!==null&&zt.delete(de.key===null?Bt:de.key),Z=N(de,Z,Bt),Qt===null?Dt=de:Qt.sibling=de,Qt=de);return o&&zt.forEach(function(gF){return c(st,gF)}),he&&Bi(st,Bt),Dt}function We(st,Z,it,gt){if(typeof it=="object"&&it!==null&&it.type===u&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case i:t:{for(var Dt=it.key;Z!==null;){if(Z.key===Dt){if(Dt=it.type,Dt===u){if(Z.tag===7){d(st,Z.sibling),gt=x(Z,it.props.children),gt.return=st,st=gt;break t}}else if(Z.elementType===Dt||typeof Dt=="object"&&Dt!==null&&Dt.$$typeof===C&&uS(Dt)===Z.type){d(st,Z.sibling),gt=x(Z,it.props),Ou(gt,it),gt.return=st,st=gt;break t}d(st,Z);break}else c(st,Z);Z=Z.sibling}it.type===u?(gt=Yi(it.props.children,st.mode,gt,it.key),gt.return=st,st=gt):(gt=Gd(it.type,it.key,it.props,null,st.mode,gt),Ou(gt,it),gt.return=st,st=gt)}return E(st);case l:t:{for(Dt=it.key;Z!==null;){if(Z.key===Dt)if(Z.tag===4&&Z.stateNode.containerInfo===it.containerInfo&&Z.stateNode.implementation===it.implementation){d(st,Z.sibling),gt=x(Z,it.children||[]),gt.return=st,st=gt;break t}else{d(st,Z);break}else c(st,Z);Z=Z.sibling}gt=My(it,st.mode,gt),gt.return=st,st=gt}return E(st);case C:return Dt=it._init,it=Dt(it._payload),We(st,Z,it,gt)}if(ot(it))return _t(st,Z,it,gt);if(R(it)){if(Dt=R(it),typeof Dt!="function")throw Error(s(150));return it=Dt.call(it),Ut(st,Z,it,gt)}if(typeof it.then=="function")return We(st,Z,Td(it),gt);if(it.$$typeof===y)return We(st,Z,Pd(st,it),gt);$d(st,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Z!==null&&Z.tag===6?(d(st,Z.sibling),gt=x(Z,it),gt.return=st,st=gt):(d(st,Z),gt=zy(it,st.mode,gt),gt.return=st,st=gt),E(st)):d(st,Z)}return function(st,Z,it,gt){try{Du=0;var Dt=We(st,Z,it,gt);return el=null,Dt}catch(zt){if(zt===Au)throw zt;var Qt=Gs(29,zt,null,st.mode);return Qt.lanes=gt,Qt.return=st,Qt}finally{}}}var Pi=cS(!0),hS=cS(!1),nl=wt(null),kd=wt(0);function dS(o,c){o=cr,It(kd,o),It(nl,c),cr=o|c.baseLanes}function Gg(){It(kd,cr),It(nl,nl.current)}function Hg(){cr=kd.current,Tt(nl),Tt(kd)}var Ps=wt(null),Ra=null;function _r(o){var c=o.alternate;It(cn,cn.current&1),It(Ps,o),Ra===null&&(c===null||nl.current!==null||c.memoizedState!==null)&&(Ra=o)}function fS(o){if(o.tag===22){if(It(cn,cn.current),It(Ps,o),Ra===null){var c=o.alternate;c!==null&&c.memoizedState!==null&&(Ra=o)}}else Fr()}function Fr(){It(cn,cn.current),It(Ps,Ps.current)}function tr(o){Tt(Ps),Ra===o&&(Ra=null),Tt(cn)}var cn=wt(0);function Id(o){for(var c=o;c!==null;){if(c.tag===13){var d=c.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||d.data==="$?"||d.data==="$!"))return c}else if(c.tag===19&&c.memoizedProps.revealOrder!==void 0){if((c.flags&128)!==0)return c}else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return null;c=c.return}c.sibling.return=c.return,c=c.sibling}return null}var s_=typeof AbortController<"u"?AbortController:function(){var o=[],c=this.signal={aborted:!1,addEventListener:function(d,g){o.push(g)}};this.abort=function(){c.aborted=!0,o.forEach(function(d){return d()})}},a_=n.unstable_scheduleCallback,r_=n.unstable_NormalPriority,hn={$$typeof:y,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function qg(){return{controller:new s_,data:new Map,refCount:0}}function _u(o){o.refCount--,o.refCount===0&&a_(r_,function(){o.controller.abort()})}var Fu=null,jg=0,sl=0,al=null;function i_(o,c){if(Fu===null){var d=Fu=[];jg=0,sl=Jy(),al={status:"pending",value:void 0,then:function(g){d.push(g)}}}return jg++,c.then(pS,pS),c}function pS(){if(--jg===0&&Fu!==null){al!==null&&(al.status="fulfilled");var o=Fu;Fu=null,sl=0,al=null;for(var c=0;c<o.length;c++)(0,o[c])()}}function o_(o,c){var d=[],g={status:"pending",value:null,reason:null,then:function(x){d.push(x)}};return o.then(function(){g.status="fulfilled",g.value=c;for(var x=0;x<d.length;x++)(0,d[x])(c)},function(x){for(g.status="rejected",g.reason=x,x=0;x<d.length;x++)(0,d[x])(void 0)}),g}var mS=D.S;D.S=function(o,c){typeof c=="object"&&c!==null&&typeof c.then=="function"&&i_(o,c),mS!==null&&mS(o,c)};var Ui=wt(null);function Xg(){var o=Ui.current;return o!==null?o:$e.pooledCache}function Ed(o,c){c===null?It(Ui,Ui.current):It(Ui,c.pool)}function gS(){var o=Xg();return o===null?null:{parent:hn._currentValue,pool:o}}var Lr=0,Yt=null,xe=null,Ze=null,Ad=!1,rl=!1,Wi=!1,Rd=0,Lu=0,il=null,l_=0;function Ke(){throw Error(s(321))}function Kg(o,c){if(c===null)return!1;for(var d=0;d<c.length&&d<o.length;d++)if(!Ns(o[d],c[d]))return!1;return!0}function Yg(o,c,d,g,x,N){return Lr=N,Yt=c,c.memoizedState=null,c.updateQueue=null,c.lanes=0,D.H=o===null||o.memoizedState===null?Gi:zr,Wi=!1,N=d(g,x),Wi=!1,rl&&(N=bS(c,d,g,x)),yS(o),N}function yS(o){D.H=Da;var c=xe!==null&&xe.next!==null;if(Lr=0,Ze=xe=Yt=null,Ad=!1,Lu=0,il=null,c)throw Error(s(300));o===null||bn||(o=o.dependencies,o!==null&&Vd(o)&&(bn=!0))}function bS(o,c,d,g){Yt=o;var x=0;do{if(rl&&(il=null),Lu=0,rl=!1,25<=x)throw Error(s(301));if(x+=1,Ze=xe=null,o.updateQueue!=null){var N=o.updateQueue;N.lastEffect=null,N.events=null,N.stores=null,N.memoCache!=null&&(N.memoCache.index=0)}D.H=Hi,N=c(d,g)}while(rl);return N}function u_(){var o=D.H,c=o.useState()[0];return c=typeof c.then=="function"?zu(c):c,o=o.useState()[0],(xe!==null?xe.memoizedState:null)!==o&&(Yt.flags|=1024),c}function Zg(){var o=Rd!==0;return Rd=0,o}function Qg(o,c,d){c.updateQueue=o.updateQueue,c.flags&=-2053,o.lanes&=~d}function Jg(o){if(Ad){for(o=o.memoizedState;o!==null;){var c=o.queue;c!==null&&(c.pending=null),o=o.next}Ad=!1}Lr=0,Ze=xe=Yt=null,rl=!1,Lu=Rd=0,il=null}function as(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Ze===null?Yt.memoizedState=Ze=o:Ze=Ze.next=o,Ze}function Qe(){if(xe===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=xe.next;var c=Ze===null?Yt.memoizedState:Ze.next;if(c!==null)Ze=c,xe=o;else{if(o===null)throw Yt.alternate===null?Error(s(467)):Error(s(310));xe=o,o={memoizedState:xe.memoizedState,baseState:xe.baseState,baseQueue:xe.baseQueue,queue:xe.queue,next:null},Ze===null?Yt.memoizedState=Ze=o:Ze=Ze.next=o}return Ze}var Dd;Dd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function zu(o){var c=Lu;return Lu+=1,il===null&&(il=[]),o=oS(il,o,c),c=Yt,(Ze===null?c.memoizedState:Ze.next)===null&&(c=c.alternate,D.H=c===null||c.memoizedState===null?Gi:zr),o}function Od(o){if(o!==null&&typeof o=="object"){if(typeof o.then=="function")return zu(o);if(o.$$typeof===y)return Bn(o)}throw Error(s(438,String(o)))}function ty(o){var c=null,d=Yt.updateQueue;if(d!==null&&(c=d.memoCache),c==null){var g=Yt.alternate;g!==null&&(g=g.updateQueue,g!==null&&(g=g.memoCache,g!=null&&(c={data:g.data.map(function(x){return x.slice()}),index:0})))}if(c==null&&(c={data:[],index:0}),d===null&&(d=Dd(),Yt.updateQueue=d),d.memoCache=c,d=c.data[c.index],d===void 0)for(d=c.data[c.index]=Array(o),g=0;g<o;g++)d[g]=T;return c.index++,d}function er(o,c){return typeof c=="function"?c(o):c}function _d(o){var c=Qe();return ey(c,xe,o)}function ey(o,c,d){var g=o.queue;if(g===null)throw Error(s(311));g.lastRenderedReducer=d;var x=o.baseQueue,N=g.pending;if(N!==null){if(x!==null){var E=x.next;x.next=N.next,N.next=E}c.baseQueue=x=N,g.pending=null}if(N=o.baseState,x===null)o.memoizedState=N;else{c=x.next;var z=E=null,V=null,J=c,pt=!1;do{var vt=J.lane&-536870913;if(vt!==J.lane?(le&vt)===vt:(Lr&vt)===vt){var ct=J.revertLane;if(ct===0)V!==null&&(V=V.next={lane:0,revertLane:0,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null}),vt===sl&&(pt=!0);else if((Lr&ct)===ct){J=J.next,ct===sl&&(pt=!0);continue}else vt={lane:0,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(z=V=vt,E=N):V=V.next=vt,Yt.lanes|=ct,qr|=ct;vt=J.action,Wi&&d(N,vt),N=J.hasEagerState?J.eagerState:d(N,vt)}else ct={lane:vt,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(z=V=ct,E=N):V=V.next=ct,Yt.lanes|=vt,qr|=vt;J=J.next}while(J!==null&&J!==c);if(V===null?E=N:V.next=z,!Ns(N,o.memoizedState)&&(bn=!0,pt&&(d=al,d!==null)))throw d;o.memoizedState=N,o.baseState=E,o.baseQueue=V,g.lastRenderedState=N}return x===null&&(g.lanes=0),[o.memoizedState,g.dispatch]}function ny(o){var c=Qe(),d=c.queue;if(d===null)throw Error(s(311));d.lastRenderedReducer=o;var g=d.dispatch,x=d.pending,N=c.memoizedState;if(x!==null){d.pending=null;var E=x=x.next;do N=o(N,E.action),E=E.next;while(E!==x);Ns(N,c.memoizedState)||(bn=!0),c.memoizedState=N,c.baseQueue===null&&(c.baseState=N),d.lastRenderedState=N}return[N,g]}function xS(o,c,d){var g=Yt,x=Qe(),N=he;if(N){if(d===void 0)throw Error(s(407));d=d()}else d=c();var E=!Ns((xe||x).memoizedState,d);if(E&&(x.memoizedState=d,bn=!0),x=x.queue,ry(SS.bind(null,g,x,o),[o]),x.getSnapshot!==c||E||Ze!==null&&Ze.memoizedState.tag&1){if(g.flags|=2048,ol(9,wS.bind(null,g,x,d,c),{destroy:void 0},null),$e===null)throw Error(s(349));N||(Lr&60)!==0||vS(g,c,d)}return d}function vS(o,c,d){o.flags|=16384,o={getSnapshot:c,value:d},c=Yt.updateQueue,c===null?(c=Dd(),Yt.updateQueue=c,c.stores=[o]):(d=c.stores,d===null?c.stores=[o]:d.push(o))}function wS(o,c,d,g){c.value=d,c.getSnapshot=g,NS(c)&&CS(o)}function SS(o,c,d){return d(function(){NS(c)&&CS(o)})}function NS(o){var c=o.getSnapshot;o=o.value;try{var d=c();return!Ns(o,d)}catch{return!0}}function CS(o){var c=Or(o,2);c!==null&&Yn(c,o,2)}function sy(o){var c=as();if(typeof o=="function"){var d=o;if(o=d(),Wi){Ar(!0);try{d()}finally{Ar(!1)}}}return c.memoizedState=c.baseState=o,c.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:er,lastRenderedState:o},c}function TS(o,c,d,g){return o.baseState=d,ey(o,xe,typeof g=="function"?g:er)}function c_(o,c,d,g,x){if(zd(o))throw Error(s(485));if(o=c.action,o!==null){var N={payload:x,action:o,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(E){N.listeners.push(E)}};D.T!==null?d(!0):N.isTransition=!1,g(N),d=c.pending,d===null?(N.next=c.pending=N,$S(c,N)):(N.next=d.next,c.pending=d.next=N)}}function $S(o,c){var d=c.action,g=c.payload,x=o.state;if(c.isTransition){var N=D.T,E={};D.T=E;try{var z=d(x,g),V=D.S;V!==null&&V(E,z),kS(o,c,z)}catch(J){ay(o,c,J)}finally{D.T=N}}else try{N=d(x,g),kS(o,c,N)}catch(J){ay(o,c,J)}}function kS(o,c,d){d!==null&&typeof d=="object"&&typeof d.then=="function"?d.then(function(g){IS(o,c,g)},function(g){return ay(o,c,g)}):IS(o,c,d)}function IS(o,c,d){c.status="fulfilled",c.value=d,ES(c),o.state=d,c=o.pending,c!==null&&(d=c.next,d===c?o.pending=null:(d=d.next,c.next=d,$S(o,d)))}function ay(o,c,d){var g=o.pending;if(o.pending=null,g!==null){g=g.next;do c.status="rejected",c.reason=d,ES(c),c=c.next;while(c!==g)}o.action=null}function ES(o){o=o.listeners;for(var c=0;c<o.length;c++)(0,o[c])()}function AS(o,c){return c}function RS(o,c){if(he){var d=$e.formState;if(d!==null){t:{var g=Yt;if(he){if(An){e:{for(var x=An,N=Aa;x.nodeType!==8;){if(!N){x=null;break e}if(x=ma(x.nextSibling),x===null){x=null;break e}}N=x.data,x=N==="F!"||N==="F"?x:null}if(x){An=ma(x.nextSibling),g=x.data==="F!";break t}}Vi(g)}g=!1}g&&(c=d[0])}}return d=as(),d.memoizedState=d.baseState=c,g={pending:null,lanes:0,dispatch:null,lastRenderedReducer:AS,lastRenderedState:c},d.queue=g,d=KS.bind(null,Yt,g),g.dispatch=d,g=sy(!1),N=cy.bind(null,Yt,!1,g.queue),g=as(),x={state:c,dispatch:null,action:o,pending:null},g.queue=x,d=c_.bind(null,Yt,x,N,d),x.dispatch=d,g.memoizedState=o,[c,d,!1]}function DS(o){var c=Qe();return OS(c,xe,o)}function OS(o,c,d){c=ey(o,c,AS)[0],o=_d(er)[0],c=typeof c=="object"&&c!==null&&typeof c.then=="function"?zu(c):c;var g=Qe(),x=g.queue,N=x.dispatch;return d!==g.memoizedState&&(Yt.flags|=2048,ol(9,h_.bind(null,x,d),{destroy:void 0},null)),[c,N,o]}function h_(o,c){o.action=c}function _S(o){var c=Qe(),d=xe;if(d!==null)return OS(c,d,o);Qe(),c=c.memoizedState,d=Qe();var g=d.queue.dispatch;return d.memoizedState=o,[c,g,!1]}function ol(o,c,d,g){return o={tag:o,create:c,inst:d,deps:g,next:null},c=Yt.updateQueue,c===null&&(c=Dd(),Yt.updateQueue=c),d=c.lastEffect,d===null?c.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,c.lastEffect=o),o}function FS(){return Qe().memoizedState}function Fd(o,c,d,g){var x=as();Yt.flags|=o,x.memoizedState=ol(1|c,d,{destroy:void 0},g===void 0?null:g)}function Ld(o,c,d,g){var x=Qe();g=g===void 0?null:g;var N=x.memoizedState.inst;xe!==null&&g!==null&&Kg(g,xe.memoizedState.deps)?x.memoizedState=ol(c,d,N,g):(Yt.flags|=o,x.memoizedState=ol(1|c,d,N,g))}function LS(o,c){Fd(8390656,8,o,c)}function ry(o,c){Ld(2048,8,o,c)}function zS(o,c){return Ld(4,2,o,c)}function MS(o,c){return Ld(4,4,o,c)}function BS(o,c){if(typeof c=="function"){o=o();var d=c(o);return function(){typeof d=="function"?d():c(null)}}if(c!=null)return o=o(),c.current=o,function(){c.current=null}}function VS(o,c,d){d=d!=null?d.concat([o]):null,Ld(4,4,BS.bind(null,c,o),d)}function iy(){}function PS(o,c){var d=Qe();c=c===void 0?null:c;var g=d.memoizedState;return c!==null&&Kg(c,g[1])?g[0]:(d.memoizedState=[o,c],o)}function US(o,c){var d=Qe();c=c===void 0?null:c;var g=d.memoizedState;if(c!==null&&Kg(c,g[1]))return g[0];if(g=o(),Wi){Ar(!0);try{o()}finally{Ar(!1)}}return d.memoizedState=[g,c],g}function oy(o,c,d){return d===void 0||(Lr&1073741824)!==0?o.memoizedState=c:(o.memoizedState=d,o=GN(),Yt.lanes|=o,qr|=o,d)}function WS(o,c,d,g){return Ns(d,c)?d:nl.current!==null?(o=oy(o,d,g),Ns(o,c)||(bn=!0),o):(Lr&42)===0?(bn=!0,o.memoizedState=d):(o=GN(),Yt.lanes|=o,qr|=o,c)}function GS(o,c,d,g,x){var N=ut.p;ut.p=N!==0&&8>N?N:8;var E=D.T,z={};D.T=z,cy(o,!1,c,d);try{var V=x(),J=D.S;if(J!==null&&J(z,V),V!==null&&typeof V=="object"&&typeof V.then=="function"){var pt=o_(V,g);Mu(o,c,pt,ks(o))}else Mu(o,c,g,ks(o))}catch(vt){Mu(o,c,{then:function(){},status:"rejected",reason:vt},ks())}finally{ut.p=N,D.T=E}}function d_(){}function ly(o,c,d,g){if(o.tag!==5)throw Error(s(476));var x=HS(o).queue;GS(o,x,c,mt,d===null?d_:function(){return qS(o),d(g)})}function HS(o){var c=o.memoizedState;if(c!==null)return c;c={memoizedState:mt,baseState:mt,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:er,lastRenderedState:mt},next:null};var d={};return c.next={memoizedState:d,baseState:d,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:er,lastRenderedState:d},next:null},o.memoizedState=c,o=o.alternate,o!==null&&(o.memoizedState=c),c}function qS(o){var c=HS(o).next.queue;Mu(o,c,{},ks())}function uy(){return Bn(ac)}function jS(){return Qe().memoizedState}function XS(){return Qe().memoizedState}function f_(o){for(var c=o.return;c!==null;){switch(c.tag){case 24:case 3:var d=ks();o=Vr(d);var g=Pr(c,o,d);g!==null&&(Yn(g,c,d),Pu(g,c,d)),c={cache:qg()},o.payload=c;return}c=c.return}}function p_(o,c,d){var g=ks();d={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null},zd(o)?YS(c,d):(d=Bg(o,c,d,g),d!==null&&(Yn(d,o,g),ZS(d,c,g)))}function KS(o,c,d){var g=ks();Mu(o,c,d,g)}function Mu(o,c,d,g){var x={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null};if(zd(o))YS(c,x);else{var N=o.alternate;if(o.lanes===0&&(N===null||N.lanes===0)&&(N=c.lastRenderedReducer,N!==null))try{var E=c.lastRenderedState,z=N(E,d);if(x.hasEagerState=!0,x.eagerState=z,Ns(z,E))return vd(o,c,x,0),$e===null&&xd(),!1}catch{}finally{}if(d=Bg(o,c,x,g),d!==null)return Yn(d,o,g),ZS(d,c,g),!0}return!1}function cy(o,c,d,g){if(g={lane:2,revertLane:Jy(),action:g,hasEagerState:!1,eagerState:null,next:null},zd(o)){if(c)throw Error(s(479))}else c=Bg(o,d,g,2),c!==null&&Yn(c,o,2)}function zd(o){var c=o.alternate;return o===Yt||c!==null&&c===Yt}function YS(o,c){rl=Ad=!0;var d=o.pending;d===null?c.next=c:(c.next=d.next,d.next=c),o.pending=c}function ZS(o,c,d){if((d&4194176)!==0){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,lw(o,d)}}var Da={readContext:Bn,use:Od,useCallback:Ke,useContext:Ke,useEffect:Ke,useImperativeHandle:Ke,useLayoutEffect:Ke,useInsertionEffect:Ke,useMemo:Ke,useReducer:Ke,useRef:Ke,useState:Ke,useDebugValue:Ke,useDeferredValue:Ke,useTransition:Ke,useSyncExternalStore:Ke,useId:Ke};Da.useCacheRefresh=Ke,Da.useMemoCache=Ke,Da.useHostTransitionStatus=Ke,Da.useFormState=Ke,Da.useActionState=Ke,Da.useOptimistic=Ke;var Gi={readContext:Bn,use:Od,useCallback:function(o,c){return as().memoizedState=[o,c===void 0?null:c],o},useContext:Bn,useEffect:LS,useImperativeHandle:function(o,c,d){d=d!=null?d.concat([o]):null,Fd(4194308,4,BS.bind(null,c,o),d)},useLayoutEffect:function(o,c){return Fd(4194308,4,o,c)},useInsertionEffect:function(o,c){Fd(4,2,o,c)},useMemo:function(o,c){var d=as();c=c===void 0?null:c;var g=o();if(Wi){Ar(!0);try{o()}finally{Ar(!1)}}return d.memoizedState=[g,c],g},useReducer:function(o,c,d){var g=as();if(d!==void 0){var x=d(c);if(Wi){Ar(!0);try{d(c)}finally{Ar(!1)}}}else x=c;return g.memoizedState=g.baseState=x,o={pending:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:x},g.queue=o,o=o.dispatch=p_.bind(null,Yt,o),[g.memoizedState,o]},useRef:function(o){var c=as();return o={current:o},c.memoizedState=o},useState:function(o){o=sy(o);var c=o.queue,d=KS.bind(null,Yt,c);return c.dispatch=d,[o.memoizedState,d]},useDebugValue:iy,useDeferredValue:function(o,c){var d=as();return oy(d,o,c)},useTransition:function(){var o=sy(!1);return o=GS.bind(null,Yt,o.queue,!0,!1),as().memoizedState=o,[!1,o]},useSyncExternalStore:function(o,c,d){var g=Yt,x=as();if(he){if(d===void 0)throw Error(s(407));d=d()}else{if(d=c(),$e===null)throw Error(s(349));(le&60)!==0||vS(g,c,d)}x.memoizedState=d;var N={value:d,getSnapshot:c};return x.queue=N,LS(SS.bind(null,g,N,o),[o]),g.flags|=2048,ol(9,wS.bind(null,g,N,d,c),{destroy:void 0},null),d},useId:function(){var o=as(),c=$e.identifierPrefix;if(he){var d=Ja,g=Qa;d=(g&~(1<<32-Ss(g)-1)).toString(32)+d,c=":"+c+"R"+d,d=Rd++,0<d&&(c+="H"+d.toString(32)),c+=":"}else d=l_++,c=":"+c+"r"+d.toString(32)+":";return o.memoizedState=c},useCacheRefresh:function(){return as().memoizedState=f_.bind(null,Yt)}};Gi.useMemoCache=ty,Gi.useHostTransitionStatus=uy,Gi.useFormState=RS,Gi.useActionState=RS,Gi.useOptimistic=function(o){var c=as();c.memoizedState=c.baseState=o;var d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return c.queue=d,c=cy.bind(null,Yt,!0,d),d.dispatch=c,[o,c]};var zr={readContext:Bn,use:Od,useCallback:PS,useContext:Bn,useEffect:ry,useImperativeHandle:VS,useInsertionEffect:zS,useLayoutEffect:MS,useMemo:US,useReducer:_d,useRef:FS,useState:function(){return _d(er)},useDebugValue:iy,useDeferredValue:function(o,c){var d=Qe();return WS(d,xe.memoizedState,o,c)},useTransition:function(){var o=_d(er)[0],c=Qe().memoizedState;return[typeof o=="boolean"?o:zu(o),c]},useSyncExternalStore:xS,useId:jS};zr.useCacheRefresh=XS,zr.useMemoCache=ty,zr.useHostTransitionStatus=uy,zr.useFormState=DS,zr.useActionState=DS,zr.useOptimistic=function(o,c){var d=Qe();return TS(d,xe,o,c)};var Hi={readContext:Bn,use:Od,useCallback:PS,useContext:Bn,useEffect:ry,useImperativeHandle:VS,useInsertionEffect:zS,useLayoutEffect:MS,useMemo:US,useReducer:ny,useRef:FS,useState:function(){return ny(er)},useDebugValue:iy,useDeferredValue:function(o,c){var d=Qe();return xe===null?oy(d,o,c):WS(d,xe.memoizedState,o,c)},useTransition:function(){var o=ny(er)[0],c=Qe().memoizedState;return[typeof o=="boolean"?o:zu(o),c]},useSyncExternalStore:xS,useId:jS};Hi.useCacheRefresh=XS,Hi.useMemoCache=ty,Hi.useHostTransitionStatus=uy,Hi.useFormState=_S,Hi.useActionState=_S,Hi.useOptimistic=function(o,c){var d=Qe();return xe!==null?TS(d,xe,o,c):(d.baseState=o,[o,d.queue.dispatch])};function hy(o,c,d,g){c=o.memoizedState,d=d(g,c),d=d==null?c:O({},c,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var dy={isMounted:function(o){return(o=o._reactInternals)?Y(o)===o:!1},enqueueSetState:function(o,c,d){o=o._reactInternals;var g=ks(),x=Vr(g);x.payload=c,d!=null&&(x.callback=d),c=Pr(o,x,g),c!==null&&(Yn(c,o,g),Pu(c,o,g))},enqueueReplaceState:function(o,c,d){o=o._reactInternals;var g=ks(),x=Vr(g);x.tag=1,x.payload=c,d!=null&&(x.callback=d),c=Pr(o,x,g),c!==null&&(Yn(c,o,g),Pu(c,o,g))},enqueueForceUpdate:function(o,c){o=o._reactInternals;var d=ks(),g=Vr(d);g.tag=2,c!=null&&(g.callback=c),c=Pr(o,g,d),c!==null&&(Yn(c,o,d),Pu(c,o,d))}};function QS(o,c,d,g,x,N,E){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,N,E):c.prototype&&c.prototype.isPureReactComponent?!Tu(d,g)||!Tu(x,N):!0}function JS(o,c,d,g){o=c.state,typeof c.componentWillReceiveProps=="function"&&c.componentWillReceiveProps(d,g),typeof c.UNSAFE_componentWillReceiveProps=="function"&&c.UNSAFE_componentWillReceiveProps(d,g),c.state!==o&&dy.enqueueReplaceState(c,c.state,null)}function qi(o,c){var d=c;if("ref"in c){d={};for(var g in c)g!=="ref"&&(d[g]=c[g])}if(o=o.defaultProps){d===c&&(d=O({},d));for(var x in o)d[x]===void 0&&(d[x]=o[x])}return d}var Md=typeof reportError=="function"?reportError:function(o){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var c=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof o=="object"&&o!==null&&typeof o.message=="string"?String(o.message):String(o),error:o});if(!window.dispatchEvent(c))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",o);return}console.error(o)};function tN(o){Md(o)}function eN(o){console.error(o)}function nN(o){Md(o)}function Bd(o,c){try{var d=o.onUncaughtError;d(c.value,{componentStack:c.stack})}catch(g){setTimeout(function(){throw g})}}function sN(o,c,d){try{var g=o.onCaughtError;g(d.value,{componentStack:d.stack,errorBoundary:c.tag===1?c.stateNode:null})}catch(x){setTimeout(function(){throw x})}}function fy(o,c,d){return d=Vr(d),d.tag=3,d.payload={element:null},d.callback=function(){Bd(o,c)},d}function aN(o){return o=Vr(o),o.tag=3,o}function rN(o,c,d,g){var x=d.type.getDerivedStateFromError;if(typeof x=="function"){var N=g.value;o.payload=function(){return x(N)},o.callback=function(){sN(c,d,g)}}var E=d.stateNode;E!==null&&typeof E.componentDidCatch=="function"&&(o.callback=function(){sN(c,d,g),typeof x!="function"&&(jr===null?jr=new Set([this]):jr.add(this));var z=g.stack;this.componentDidCatch(g.value,{componentStack:z!==null?z:""})})}function m_(o,c,d,g,x){if(d.flags|=32768,g!==null&&typeof g=="object"&&typeof g.then=="function"){if(c=d.alternate,c!==null&&Vu(c,d,x,!0),d=Ps.current,d!==null){switch(d.tag){case 13:return Ra===null?Xy():d.alternate===null&&Ue===0&&(Ue=3),d.flags&=-257,d.flags|=65536,d.lanes=x,g===Wg?d.flags|=16384:(c=d.updateQueue,c===null?d.updateQueue=new Set([g]):c.add(g),Yy(o,g,x)),!1;case 22:return d.flags|=65536,g===Wg?d.flags|=16384:(c=d.updateQueue,c===null?(c={transitions:null,markerInstances:null,retryQueue:new Set([g])},d.updateQueue=c):(d=c.retryQueue,d===null?c.retryQueue=new Set([g]):d.add(g)),Yy(o,g,x)),!1}throw Error(s(435,d.tag))}return Yy(o,g,x),Xy(),!1}if(he)return c=Ps.current,c!==null?((c.flags&65536)===0&&(c.flags|=256),c.flags|=65536,c.lanes=x,g!==Ug&&(o=Error(s(422),{cause:g}),Eu(Ms(o,d)))):(g!==Ug&&(c=Error(s(423),{cause:g}),Eu(Ms(c,d))),o=o.current.alternate,o.flags|=65536,x&=-x,o.lanes|=x,g=Ms(g,d),x=fy(o.stateNode,g,x),Iy(o,x),Ue!==4&&(Ue=2)),!1;var N=Error(s(520),{cause:g});if(N=Ms(N,d),Ku===null?Ku=[N]:Ku.push(N),Ue!==4&&(Ue=2),c===null)return!0;g=Ms(g,d),d=c;do{switch(d.tag){case 3:return d.flags|=65536,o=x&-x,d.lanes|=o,o=fy(d.stateNode,g,o),Iy(d,o),!1;case 1:if(c=d.type,N=d.stateNode,(d.flags&128)===0&&(typeof c.getDerivedStateFromError=="function"||N!==null&&typeof N.componentDidCatch=="function"&&(jr===null||!jr.has(N))))return d.flags|=65536,x&=-x,d.lanes|=x,x=aN(x),rN(x,o,d,g),Iy(d,x),!1}d=d.return}while(d!==null);return!1}var iN=Error(s(461)),bn=!1;function Rn(o,c,d,g){c.child=o===null?hS(c,null,d,g):Pi(c,o.child,d,g)}function oN(o,c,d,g,x){d=d.render;var N=c.ref;if("ref"in g){var E={};for(var z in g)z!=="ref"&&(E[z]=g[z])}else E=g;return Xi(c),g=Yg(o,c,d,E,N,x),z=Zg(),o!==null&&!bn?(Qg(o,c,x),nr(o,c,x)):(he&&z&&Vg(c),c.flags|=1,Rn(o,c,g,x),c.child)}function lN(o,c,d,g,x){if(o===null){var N=d.type;return typeof N=="function"&&!Ly(N)&&N.defaultProps===void 0&&d.compare===null?(c.tag=15,c.type=N,uN(o,c,N,g,x)):(o=Gd(d.type,null,g,c,c.mode,x),o.ref=c.ref,o.return=c,c.child=o)}if(N=o.child,!Sy(o,x)){var E=N.memoizedProps;if(d=d.compare,d=d!==null?d:Tu,d(E,g)&&o.ref===c.ref)return nr(o,c,x)}return c.flags|=1,o=Hr(N,g),o.ref=c.ref,o.return=c,c.child=o}function uN(o,c,d,g,x){if(o!==null){var N=o.memoizedProps;if(Tu(N,g)&&o.ref===c.ref)if(bn=!1,c.pendingProps=g=N,Sy(o,x))(o.flags&131072)!==0&&(bn=!0);else return c.lanes=o.lanes,nr(o,c,x)}return py(o,c,d,g,x)}function cN(o,c,d){var g=c.pendingProps,x=g.children,N=(c.stateNode._pendingVisibility&2)!==0,E=o!==null?o.memoizedState:null;if(Bu(o,c),g.mode==="hidden"||N){if((c.flags&128)!==0){if(g=E!==null?E.baseLanes|d:d,o!==null){for(x=c.child=o.child,N=0;x!==null;)N=N|x.lanes|x.childLanes,x=x.sibling;c.childLanes=N&~g}else c.childLanes=0,c.child=null;return hN(o,c,g,d)}if((d&536870912)!==0)c.memoizedState={baseLanes:0,cachePool:null},o!==null&&Ed(c,E!==null?E.cachePool:null),E!==null?dS(c,E):Gg(),fS(c);else return c.lanes=c.childLanes=536870912,hN(o,c,E!==null?E.baseLanes|d:d,d)}else E!==null?(Ed(c,E.cachePool),dS(c,E),Fr(),c.memoizedState=null):(o!==null&&Ed(c,null),Gg(),Fr());return Rn(o,c,x,d),c.child}function hN(o,c,d,g){var x=Xg();return x=x===null?null:{parent:hn._currentValue,pool:x},c.memoizedState={baseLanes:d,cachePool:x},o!==null&&Ed(c,null),Gg(),fS(c),o!==null&&Vu(o,c,g,!0),null}function Bu(o,c){var d=c.ref;if(d===null)o!==null&&o.ref!==null&&(c.flags|=2097664);else{if(typeof d!="function"&&typeof d!="object")throw Error(s(284));(o===null||o.ref!==d)&&(c.flags|=2097664)}}function py(o,c,d,g,x){return Xi(c),d=Yg(o,c,d,g,void 0,x),g=Zg(),o!==null&&!bn?(Qg(o,c,x),nr(o,c,x)):(he&&g&&Vg(c),c.flags|=1,Rn(o,c,d,x),c.child)}function dN(o,c,d,g,x,N){return Xi(c),c.updateQueue=null,d=bS(c,g,d,x),yS(o),g=Zg(),o!==null&&!bn?(Qg(o,c,N),nr(o,c,N)):(he&&g&&Vg(c),c.flags|=1,Rn(o,c,d,N),c.child)}function fN(o,c,d,g,x){if(Xi(c),c.stateNode===null){var N=Qo,E=d.contextType;typeof E=="object"&&E!==null&&(N=Bn(E)),N=new d(g,N),c.memoizedState=N.state!==null&&N.state!==void 0?N.state:null,N.updater=dy,c.stateNode=N,N._reactInternals=c,N=c.stateNode,N.props=g,N.state=c.memoizedState,N.refs={},$y(c),E=d.contextType,N.context=typeof E=="object"&&E!==null?Bn(E):Qo,N.state=c.memoizedState,E=d.getDerivedStateFromProps,typeof E=="function"&&(hy(c,d,E,g),N.state=c.memoizedState),typeof d.getDerivedStateFromProps=="function"||typeof N.getSnapshotBeforeUpdate=="function"||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(E=N.state,typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount(),E!==N.state&&dy.enqueueReplaceState(N,N.state,null),Wu(c,g,N,x),Uu(),N.state=c.memoizedState),typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!0}else if(o===null){N=c.stateNode;var z=c.memoizedProps,V=qi(d,z);N.props=V;var J=N.context,pt=d.contextType;E=Qo,typeof pt=="object"&&pt!==null&&(E=Bn(pt));var vt=d.getDerivedStateFromProps;pt=typeof vt=="function"||typeof N.getSnapshotBeforeUpdate=="function",z=c.pendingProps!==z,pt||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(z||J!==E)&&JS(c,N,g,E),Br=!1;var ct=c.memoizedState;N.state=ct,Wu(c,g,N,x),Uu(),J=c.memoizedState,z||ct!==J||Br?(typeof vt=="function"&&(hy(c,d,vt,g),J=c.memoizedState),(V=Br||QS(c,d,V,g,ct,J,E))?(pt||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(c.flags|=4194308)):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),c.memoizedProps=g,c.memoizedState=J),N.props=g,N.state=J,N.context=E,g=V):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!1)}else{N=c.stateNode,ky(o,c),E=c.memoizedProps,pt=qi(d,E),N.props=pt,vt=c.pendingProps,ct=N.context,J=d.contextType,V=Qo,typeof J=="object"&&J!==null&&(V=Bn(J)),z=d.getDerivedStateFromProps,(J=typeof z=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(E!==vt||ct!==V)&&JS(c,N,g,V),Br=!1,ct=c.memoizedState,N.state=ct,Wu(c,g,N,x),Uu();var ft=c.memoizedState;E!==vt||ct!==ft||Br||o!==null&&o.dependencies!==null&&Vd(o.dependencies)?(typeof z=="function"&&(hy(c,d,z,g),ft=c.memoizedState),(pt=Br||QS(c,d,pt,g,ct,ft,V)||o!==null&&o.dependencies!==null&&Vd(o.dependencies))?(J||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,ft,V),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,ft,V)),typeof N.componentDidUpdate=="function"&&(c.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(c.flags|=1024)):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),c.memoizedProps=g,c.memoizedState=ft),N.props=g,N.state=ft,N.context=V,g=pt):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),g=!1)}return N=g,Bu(o,c),g=(c.flags&128)!==0,N||g?(N=c.stateNode,d=g&&typeof d.getDerivedStateFromError!="function"?null:N.render(),c.flags|=1,o!==null&&g?(c.child=Pi(c,o.child,null,x),c.child=Pi(c,null,d,x)):Rn(o,c,d,x),c.memoizedState=N.state,o=c.child):o=nr(o,c,x),o}function pN(o,c,d,g){return Iu(),c.flags|=256,Rn(o,c,d,g),c.child}var my={dehydrated:null,treeContext:null,retryLane:0};function gy(o){return{baseLanes:o,cachePool:gS()}}function yy(o,c,d){return o=o!==null?o.childLanes&~d:0,c&&(o|=Hs),o}function mN(o,c,d){var g=c.pendingProps,x=!1,N=(c.flags&128)!==0,E;if((E=N)||(E=o!==null&&o.memoizedState===null?!1:(cn.current&2)!==0),E&&(x=!0,c.flags&=-129),E=(c.flags&32)!==0,c.flags&=-33,o===null){if(he){if(x?_r(c):Fr(),he){var z=An,V;if(V=z){t:{for(V=z,z=Aa;V.nodeType!==8;){if(!z){z=null;break t}if(V=ma(V.nextSibling),V===null){z=null;break t}}z=V}z!==null?(c.memoizedState={dehydrated:z,treeContext:Mi!==null?{id:Qa,overflow:Ja}:null,retryLane:536870912},V=Gs(18,null,null,0),V.stateNode=z,V.return=c,c.child=V,Kn=c,An=null,V=!0):V=!1}V||Vi(c)}if(z=c.memoizedState,z!==null&&(z=z.dehydrated,z!==null))return z.data==="$!"?c.lanes=16:c.lanes=536870912,null;tr(c)}return z=g.children,g=g.fallback,x?(Fr(),x=c.mode,z=xy({mode:"hidden",children:z},x),g=Yi(g,x,d,null),z.return=c,g.return=c,z.sibling=g,c.child=z,x=c.child,x.memoizedState=gy(d),x.childLanes=yy(o,E,d),c.memoizedState=my,g):(_r(c),by(c,z))}if(V=o.memoizedState,V!==null&&(z=V.dehydrated,z!==null)){if(N)c.flags&256?(_r(c),c.flags&=-257,c=vy(o,c,d)):c.memoizedState!==null?(Fr(),c.child=o.child,c.flags|=128,c=null):(Fr(),x=g.fallback,z=c.mode,g=xy({mode:"visible",children:g.children},z),x=Yi(x,z,d,null),x.flags|=2,g.return=c,x.return=c,g.sibling=x,c.child=g,Pi(c,o.child,null,d),g=c.child,g.memoizedState=gy(d),g.childLanes=yy(o,E,d),c.memoizedState=my,c=x);else if(_r(c),z.data==="$!"){if(E=z.nextSibling&&z.nextSibling.dataset,E)var J=E.dgst;E=J,g=Error(s(419)),g.stack="",g.digest=E,Eu({value:g,source:null,stack:null}),c=vy(o,c,d)}else if(bn||Vu(o,c,d,!1),E=(d&o.childLanes)!==0,bn||E){if(E=$e,E!==null){if(g=d&-d,(g&42)!==0)g=1;else switch(g){case 2:g=1;break;case 8:g=4;break;case 32:g=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:g=64;break;case 268435456:g=134217728;break;default:g=0}if(g=(g&(E.suspendedLanes|d))!==0?0:g,g!==0&&g!==V.retryLane)throw V.retryLane=g,Or(o,g),Yn(E,o,g),iN}z.data==="$?"||Xy(),c=vy(o,c,d)}else z.data==="$?"?(c.flags|=128,c.child=o.child,c=A_.bind(null,o),z._reactRetry=c,c=null):(o=V.treeContext,An=ma(z.nextSibling),Kn=c,he=!0,fa=null,Aa=!1,o!==null&&(Bs[Vs++]=Qa,Bs[Vs++]=Ja,Bs[Vs++]=Mi,Qa=o.id,Ja=o.overflow,Mi=c),c=by(c,g.children),c.flags|=4096);return c}return x?(Fr(),x=g.fallback,z=c.mode,V=o.child,J=V.sibling,g=Hr(V,{mode:"hidden",children:g.children}),g.subtreeFlags=V.subtreeFlags&31457280,J!==null?x=Hr(J,x):(x=Yi(x,z,d,null),x.flags|=2),x.return=c,g.return=c,g.sibling=x,c.child=g,g=x,x=c.child,z=o.child.memoizedState,z===null?z=gy(d):(V=z.cachePool,V!==null?(J=hn._currentValue,V=V.parent!==J?{parent:J,pool:J}:V):V=gS(),z={baseLanes:z.baseLanes|d,cachePool:V}),x.memoizedState=z,x.childLanes=yy(o,E,d),c.memoizedState=my,g):(_r(c),d=o.child,o=d.sibling,d=Hr(d,{mode:"visible",children:g.children}),d.return=c,d.sibling=null,o!==null&&(E=c.deletions,E===null?(c.deletions=[o],c.flags|=16):E.push(o)),c.child=d,c.memoizedState=null,d)}function by(o,c){return c=xy({mode:"visible",children:c},o.mode),c.return=o,o.child=c}function xy(o,c){return PN(o,c,0,null)}function vy(o,c,d){return Pi(c,o.child,null,d),o=by(c,c.pendingProps.children),o.flags|=2,c.memoizedState=null,o}function gN(o,c,d){o.lanes|=c;var g=o.alternate;g!==null&&(g.lanes|=c),Cy(o.return,c,d)}function wy(o,c,d,g,x){var N=o.memoizedState;N===null?o.memoizedState={isBackwards:c,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:x}:(N.isBackwards=c,N.rendering=null,N.renderingStartTime=0,N.last=g,N.tail=d,N.tailMode=x)}function yN(o,c,d){var g=c.pendingProps,x=g.revealOrder,N=g.tail;if(Rn(o,c,g.children,d),g=cn.current,(g&2)!==0)g=g&1|2,c.flags|=128;else{if(o!==null&&(o.flags&128)!==0)t:for(o=c.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&gN(o,d,c);else if(o.tag===19)gN(o,d,c);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===c)break t;for(;o.sibling===null;){if(o.return===null||o.return===c)break t;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}switch(It(cn,g),x){case"forwards":for(d=c.child,x=null;d!==null;)o=d.alternate,o!==null&&Id(o)===null&&(x=d),d=d.sibling;d=x,d===null?(x=c.child,c.child=null):(x=d.sibling,d.sibling=null),wy(c,!1,x,d,N);break;case"backwards":for(d=null,x=c.child,c.child=null;x!==null;){if(o=x.alternate,o!==null&&Id(o)===null){c.child=x;break}o=x.sibling,x.sibling=d,d=x,x=o}wy(c,!0,d,null,N);break;case"together":wy(c,!1,null,null,void 0);break;default:c.memoizedState=null}return c.child}function nr(o,c,d){if(o!==null&&(c.dependencies=o.dependencies),qr|=c.lanes,(d&c.childLanes)===0)if(o!==null){if(Vu(o,c,d,!1),(d&c.childLanes)===0)return null}else return null;if(o!==null&&c.child!==o.child)throw Error(s(153));if(c.child!==null){for(o=c.child,d=Hr(o,o.pendingProps),c.child=d,d.return=c;o.sibling!==null;)o=o.sibling,d=d.sibling=Hr(o,o.pendingProps),d.return=c;d.sibling=null}return c.child}function Sy(o,c){return(o.lanes&c)!==0?!0:(o=o.dependencies,!!(o!==null&&Vd(o)))}function g_(o,c,d){switch(c.tag){case 3:ce(c,c.stateNode.containerInfo),Mr(c,hn,o.memoizedState.cache),Iu();break;case 27:case 5:be(c);break;case 4:ce(c,c.stateNode.containerInfo);break;case 10:Mr(c,c.type,c.memoizedProps.value);break;case 13:var g=c.memoizedState;if(g!==null)return g.dehydrated!==null?(_r(c),c.flags|=128,null):(d&c.child.childLanes)!==0?mN(o,c,d):(_r(c),o=nr(o,c,d),o!==null?o.sibling:null);_r(c);break;case 19:var x=(o.flags&128)!==0;if(g=(d&c.childLanes)!==0,g||(Vu(o,c,d,!1),g=(d&c.childLanes)!==0),x){if(g)return yN(o,c,d);c.flags|=128}if(x=c.memoizedState,x!==null&&(x.rendering=null,x.tail=null,x.lastEffect=null),It(cn,cn.current),g)break;return null;case 22:case 23:return c.lanes=0,cN(o,c,d);case 24:Mr(c,hn,o.memoizedState.cache)}return nr(o,c,d)}function bN(o,c,d){if(o!==null)if(o.memoizedProps!==c.pendingProps)bn=!0;else{if(!Sy(o,d)&&(c.flags&128)===0)return bn=!1,g_(o,c,d);bn=(o.flags&131072)!==0}else bn=!1,he&&(c.flags&1048576)!==0&&nS(c,Nd,c.index);switch(c.lanes=0,c.tag){case 16:t:{o=c.pendingProps;var g=c.elementType,x=g._init;if(g=x(g._payload),c.type=g,typeof g=="function")Ly(g)?(o=qi(g,o),c.tag=1,c=fN(null,c,g,o,d)):(c.tag=0,c=py(null,c,g,o,d));else{if(g!=null){if(x=g.$$typeof,x===b){c.tag=11,c=oN(null,c,g,o,d);break t}else if(x===S){c.tag=14,c=lN(null,c,g,o,d);break t}}throw c=M(g)||g,Error(s(306,c,""))}}return c;case 0:return py(o,c,c.type,c.pendingProps,d);case 1:return g=c.type,x=qi(g,c.pendingProps),fN(o,c,g,x,d);case 3:t:{if(ce(c,c.stateNode.containerInfo),o===null)throw Error(s(387));var N=c.pendingProps;x=c.memoizedState,g=x.element,ky(o,c),Wu(c,N,null,d);var E=c.memoizedState;if(N=E.cache,Mr(c,hn,N),N!==x.cache&&Ty(c,[hn],d,!0),Uu(),N=E.element,x.isDehydrated)if(x={element:N,isDehydrated:!1,cache:E.cache},c.updateQueue.baseState=x,c.memoizedState=x,c.flags&256){c=pN(o,c,N,d);break t}else if(N!==g){g=Ms(Error(s(424)),c),Eu(g),c=pN(o,c,N,d);break t}else for(An=ma(c.stateNode.containerInfo.firstChild),Kn=c,he=!0,fa=null,Aa=!0,d=hS(c,null,N,d),c.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Iu(),N===g){c=nr(o,c,d);break t}Rn(o,c,N,d)}c=c.child}return c;case 26:return Bu(o,c),o===null?(d=wC(c.type,null,c.pendingProps,null))?c.memoizedState=d:he||(d=c.type,o=c.pendingProps,g=nf(ne.current).createElement(d),g[Mn]=c,g[ns]=o,Dn(g,d,o),yn(g),c.stateNode=g):c.memoizedState=wC(c.type,o.memoizedProps,c.pendingProps,o.memoizedState),null;case 27:return be(c),o===null&&he&&(g=c.stateNode=bC(c.type,c.pendingProps,ne.current),Kn=c,Aa=!0,An=ma(g.firstChild)),g=c.pendingProps.children,o!==null||he?Rn(o,c,g,d):c.child=Pi(c,null,g,d),Bu(o,c),c.child;case 5:return o===null&&he&&((x=g=An)&&(g=q_(g,c.type,c.pendingProps,Aa),g!==null?(c.stateNode=g,Kn=c,An=ma(g.firstChild),Aa=!1,x=!0):x=!1),x||Vi(c)),be(c),x=c.type,N=c.pendingProps,E=o!==null?o.memoizedProps:null,g=N.children,lb(x,N)?g=null:E!==null&&lb(x,E)&&(c.flags|=32),c.memoizedState!==null&&(x=Yg(o,c,u_,null,null,d),ac._currentValue=x),Bu(o,c),Rn(o,c,g,d),c.child;case 6:return o===null&&he&&((o=d=An)&&(d=j_(d,c.pendingProps,Aa),d!==null?(c.stateNode=d,Kn=c,An=null,o=!0):o=!1),o||Vi(c)),null;case 13:return mN(o,c,d);case 4:return ce(c,c.stateNode.containerInfo),g=c.pendingProps,o===null?c.child=Pi(c,null,g,d):Rn(o,c,g,d),c.child;case 11:return oN(o,c,c.type,c.pendingProps,d);case 7:return Rn(o,c,c.pendingProps,d),c.child;case 8:return Rn(o,c,c.pendingProps.children,d),c.child;case 12:return Rn(o,c,c.pendingProps.children,d),c.child;case 10:return g=c.pendingProps,Mr(c,c.type,g.value),Rn(o,c,g.children,d),c.child;case 9:return x=c.type._context,g=c.pendingProps.children,Xi(c),x=Bn(x),g=g(x),c.flags|=1,Rn(o,c,g,d),c.child;case 14:return lN(o,c,c.type,c.pendingProps,d);case 15:return uN(o,c,c.type,c.pendingProps,d);case 19:return yN(o,c,d);case 22:return cN(o,c,d);case 24:return Xi(c),g=Bn(hn),o===null?(x=Xg(),x===null&&(x=$e,N=qg(),x.pooledCache=N,N.refCount++,N!==null&&(x.pooledCacheLanes|=d),x=N),c.memoizedState={parent:g,cache:x},$y(c),Mr(c,hn,x)):((o.lanes&d)!==0&&(ky(o,c),Wu(c,null,null,d),Uu()),x=o.memoizedState,N=c.memoizedState,x.parent!==g?(x={parent:g,cache:g},c.memoizedState=x,c.lanes===0&&(c.memoizedState=c.updateQueue.baseState=x),Mr(c,hn,g)):(g=N.cache,Mr(c,hn,g),g!==x.cache&&Ty(c,[hn],d,!0))),Rn(o,c,c.pendingProps.children,d),c.child;case 29:throw c.pendingProps}throw Error(s(156,c.tag))}var Ny=wt(null),ji=null,sr=null;function Mr(o,c,d){It(Ny,c._currentValue),c._currentValue=d}function ar(o){o._currentValue=Ny.current,Tt(Ny)}function Cy(o,c,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&c)!==c?(o.childLanes|=c,g!==null&&(g.childLanes|=c)):g!==null&&(g.childLanes&c)!==c&&(g.childLanes|=c),o===d)break;o=o.return}}function Ty(o,c,d,g){var x=o.child;for(x!==null&&(x.return=o);x!==null;){var N=x.dependencies;if(N!==null){var E=x.child;N=N.firstContext;t:for(;N!==null;){var z=N;N=x;for(var V=0;V<c.length;V++)if(z.context===c[V]){N.lanes|=d,z=N.alternate,z!==null&&(z.lanes|=d),Cy(N.return,d,o),g||(E=null);break t}N=z.next}}else if(x.tag===18){if(E=x.return,E===null)throw Error(s(341));E.lanes|=d,N=E.alternate,N!==null&&(N.lanes|=d),Cy(E,d,o),E=null}else E=x.child;if(E!==null)E.return=x;else for(E=x;E!==null;){if(E===o){E=null;break}if(x=E.sibling,x!==null){x.return=E.return,E=x;break}E=E.return}x=E}}function Vu(o,c,d,g){o=null;for(var x=c,N=!1;x!==null;){if(!N){if((x.flags&524288)!==0)N=!0;else if((x.flags&262144)!==0)break}if(x.tag===10){var E=x.alternate;if(E===null)throw Error(s(387));if(E=E.memoizedProps,E!==null){var z=x.type;Ns(x.pendingProps.value,E.value)||(o!==null?o.push(z):o=[z])}}else if(x===ye.current){if(E=x.alternate,E===null)throw Error(s(387));E.memoizedState.memoizedState!==x.memoizedState.memoizedState&&(o!==null?o.push(ac):o=[ac])}x=x.return}o!==null&&Ty(c,o,d,g),c.flags|=262144}function Vd(o){for(o=o.firstContext;o!==null;){if(!Ns(o.context._currentValue,o.memoizedValue))return!0;o=o.next}return!1}function Xi(o){ji=o,sr=null,o=o.dependencies,o!==null&&(o.firstContext=null)}function Bn(o){return xN(ji,o)}function Pd(o,c){return ji===null&&Xi(o),xN(o,c)}function xN(o,c){var d=c._currentValue;if(c={context:c,memoizedValue:d,next:null},sr===null){if(o===null)throw Error(s(308));sr=c,o.dependencies={lanes:0,firstContext:c},o.flags|=524288}else sr=sr.next=c;return d}var Br=!1;function $y(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function ky(o,c){o=o.updateQueue,c.updateQueue===o&&(c.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,callbacks:null})}function Vr(o){return{lane:o,tag:0,payload:null,callback:null,next:null}}function Pr(o,c,d){var g=o.updateQueue;if(g===null)return null;if(g=g.shared,(Le&2)!==0){var x=g.pending;return x===null?c.next=c:(c.next=x.next,x.next=c),g.pending=c,c=wd(o),tS(o,null,d),c}return vd(o,g,c,d),wd(o)}function Pu(o,c,d){if(c=c.updateQueue,c!==null&&(c=c.shared,(d&4194176)!==0)){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,lw(o,d)}}function Iy(o,c){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var x=null,N=null;if(d=d.firstBaseUpdate,d!==null){do{var E={lane:d.lane,tag:d.tag,payload:d.payload,callback:null,next:null};N===null?x=N=E:N=N.next=E,d=d.next}while(d!==null);N===null?x=N=c:N=N.next=c}else x=N=c;d={baseState:g.baseState,firstBaseUpdate:x,lastBaseUpdate:N,shared:g.shared,callbacks:g.callbacks},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=c:o.next=c,d.lastBaseUpdate=c}var Ey=!1;function Uu(){if(Ey){var o=al;if(o!==null)throw o}}function Wu(o,c,d,g){Ey=!1;var x=o.updateQueue;Br=!1;var N=x.firstBaseUpdate,E=x.lastBaseUpdate,z=x.shared.pending;if(z!==null){x.shared.pending=null;var V=z,J=V.next;V.next=null,E===null?N=J:E.next=J,E=V;var pt=o.alternate;pt!==null&&(pt=pt.updateQueue,z=pt.lastBaseUpdate,z!==E&&(z===null?pt.firstBaseUpdate=J:z.next=J,pt.lastBaseUpdate=V))}if(N!==null){var vt=x.baseState;E=0,pt=J=V=null,z=N;do{var ct=z.lane&-536870913,ft=ct!==z.lane;if(ft?(le&ct)===ct:(g&ct)===ct){ct!==0&&ct===sl&&(Ey=!0),pt!==null&&(pt=pt.next={lane:0,tag:z.tag,payload:z.payload,callback:null,next:null});t:{var _t=o,Ut=z;ct=c;var We=d;switch(Ut.tag){case 1:if(_t=Ut.payload,typeof _t=="function"){vt=_t.call(We,vt,ct);break t}vt=_t;break t;case 3:_t.flags=_t.flags&-65537|128;case 0:if(_t=Ut.payload,ct=typeof _t=="function"?_t.call(We,vt,ct):_t,ct==null)break t;vt=O({},vt,ct);break t;case 2:Br=!0}}ct=z.callback,ct!==null&&(o.flags|=64,ft&&(o.flags|=8192),ft=x.callbacks,ft===null?x.callbacks=[ct]:ft.push(ct))}else ft={lane:ct,tag:z.tag,payload:z.payload,callback:z.callback,next:null},pt===null?(J=pt=ft,V=vt):pt=pt.next=ft,E|=ct;if(z=z.next,z===null){if(z=x.shared.pending,z===null)break;ft=z,z=ft.next,ft.next=null,x.lastBaseUpdate=ft,x.shared.pending=null}}while(!0);pt===null&&(V=vt),x.baseState=V,x.firstBaseUpdate=J,x.lastBaseUpdate=pt,N===null&&(x.shared.lanes=0),qr|=E,o.lanes=E,o.memoizedState=vt}}function vN(o,c){if(typeof o!="function")throw Error(s(191,o));o.call(c)}function wN(o,c){var d=o.callbacks;if(d!==null)for(o.callbacks=null,o=0;o<d.length;o++)vN(d[o],c)}function Gu(o,c){try{var d=c.updateQueue,g=d!==null?d.lastEffect:null;if(g!==null){var x=g.next;d=x;do{if((d.tag&o)===o){g=void 0;var N=d.create,E=d.inst;g=N(),E.destroy=g}d=d.next}while(d!==x)}}catch(z){Ne(c,c.return,z)}}function Ur(o,c,d){try{var g=c.updateQueue,x=g!==null?g.lastEffect:null;if(x!==null){var N=x.next;g=N;do{if((g.tag&o)===o){var E=g.inst,z=E.destroy;if(z!==void 0){E.destroy=void 0,x=c;var V=d;try{z()}catch(J){Ne(x,V,J)}}}g=g.next}while(g!==N)}}catch(J){Ne(c,c.return,J)}}function SN(o){var c=o.updateQueue;if(c!==null){var d=o.stateNode;try{wN(c,d)}catch(g){Ne(o,o.return,g)}}}function NN(o,c,d){d.props=qi(o.type,o.memoizedProps),d.state=o.memoizedState;try{d.componentWillUnmount()}catch(g){Ne(o,c,g)}}function Ki(o,c){try{var d=o.ref;if(d!==null){var g=o.stateNode;switch(o.tag){case 26:case 27:case 5:var x=g;break;default:x=g}typeof d=="function"?o.refCleanup=d(x):d.current=x}}catch(N){Ne(o,c,N)}}function Cs(o,c){var d=o.ref,g=o.refCleanup;if(d!==null)if(typeof g=="function")try{g()}catch(x){Ne(o,c,x)}finally{o.refCleanup=null,o=o.alternate,o!=null&&(o.refCleanup=null)}else if(typeof d=="function")try{d(null)}catch(x){Ne(o,c,x)}else d.current=null}function CN(o){var c=o.type,d=o.memoizedProps,g=o.stateNode;try{t:switch(c){case"button":case"input":case"select":case"textarea":d.autoFocus&&g.focus();break t;case"img":d.src?g.src=d.src:d.srcSet&&(g.srcset=d.srcSet)}}catch(x){Ne(o,o.return,x)}}function TN(o,c,d){try{var g=o.stateNode;P_(g,o.type,d,c),g[ns]=c}catch(x){Ne(o,o.return,x)}}function $N(o){return o.tag===5||o.tag===3||o.tag===26||o.tag===27||o.tag===4}function Ay(o){t:for(;;){for(;o.sibling===null;){if(o.return===null||$N(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==27&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue t;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Ry(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?d.nodeType===8?d.parentNode.insertBefore(o,c):d.insertBefore(o,c):(d.nodeType===8?(c=d.parentNode,c.insertBefore(o,d)):(c=d,c.appendChild(o)),d=d._reactRootContainer,d!=null||c.onclick!==null||(c.onclick=ef));else if(g!==4&&g!==27&&(o=o.child,o!==null))for(Ry(o,c,d),o=o.sibling;o!==null;)Ry(o,c,d),o=o.sibling}function Ud(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?d.insertBefore(o,c):d.appendChild(o);else if(g!==4&&g!==27&&(o=o.child,o!==null))for(Ud(o,c,d),o=o.sibling;o!==null;)Ud(o,c,d),o=o.sibling}var rr=!1,Pe=!1,Dy=!1,kN=typeof WeakSet=="function"?WeakSet:Set,xn=null,IN=!1;function y_(o,c){if(o=o.containerInfo,ib=uf,o=Hw(o),_g(o)){if("selectionStart"in o)var d={start:o.selectionStart,end:o.selectionEnd};else t:{d=(d=o.ownerDocument)&&d.defaultView||window;var g=d.getSelection&&d.getSelection();if(g&&g.rangeCount!==0){d=g.anchorNode;var x=g.anchorOffset,N=g.focusNode;g=g.focusOffset;try{d.nodeType,N.nodeType}catch{d=null;break t}var E=0,z=-1,V=-1,J=0,pt=0,vt=o,ct=null;e:for(;;){for(var ft;vt!==d||x!==0&&vt.nodeType!==3||(z=E+x),vt!==N||g!==0&&vt.nodeType!==3||(V=E+g),vt.nodeType===3&&(E+=vt.nodeValue.length),(ft=vt.firstChild)!==null;)ct=vt,vt=ft;for(;;){if(vt===o)break e;if(ct===d&&++J===x&&(z=E),ct===N&&++pt===g&&(V=E),(ft=vt.nextSibling)!==null)break;vt=ct,ct=vt.parentNode}vt=ft}d=z===-1||V===-1?null:{start:z,end:V}}else d=null}d=d||{start:0,end:0}}else d=null;for(ob={focusedElem:o,selectionRange:d},uf=!1,xn=c;xn!==null;)if(c=xn,o=c.child,(c.subtreeFlags&1028)!==0&&o!==null)o.return=c,xn=o;else for(;xn!==null;){switch(c=xn,N=c.alternate,o=c.flags,c.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&N!==null){o=void 0,d=c,x=N.memoizedProps,N=N.memoizedState,g=d.stateNode;try{var _t=qi(d.type,x,d.elementType===d.type);o=g.getSnapshotBeforeUpdate(_t,N),g.__reactInternalSnapshotBeforeUpdate=o}catch(Ut){Ne(d,d.return,Ut)}}break;case 3:if((o&1024)!==0){if(o=c.stateNode.containerInfo,d=o.nodeType,d===9)hb(o);else if(d===1)switch(o.nodeName){case"HEAD":case"HTML":case"BODY":hb(o);break;default:o.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(s(163))}if(o=c.sibling,o!==null){o.return=c.return,xn=o;break}xn=c.return}return _t=IN,IN=!1,_t}function EN(o,c,d){var g=d.flags;switch(d.tag){case 0:case 11:case 15:or(o,d),g&4&&Gu(5,d);break;case 1:if(or(o,d),g&4)if(o=d.stateNode,c===null)try{o.componentDidMount()}catch(z){Ne(d,d.return,z)}else{var x=qi(d.type,c.memoizedProps);c=c.memoizedState;try{o.componentDidUpdate(x,c,o.__reactInternalSnapshotBeforeUpdate)}catch(z){Ne(d,d.return,z)}}g&64&&SN(d),g&512&&Ki(d,d.return);break;case 3:if(or(o,d),g&64&&(g=d.updateQueue,g!==null)){if(o=null,d.child!==null)switch(d.child.tag){case 27:case 5:o=d.child.stateNode;break;case 1:o=d.child.stateNode}try{wN(g,o)}catch(z){Ne(d,d.return,z)}}break;case 26:or(o,d),g&512&&Ki(d,d.return);break;case 27:case 5:or(o,d),c===null&&g&4&&CN(d),g&512&&Ki(d,d.return);break;case 12:or(o,d);break;case 13:or(o,d),g&4&&DN(o,d);break;case 22:if(x=d.memoizedState!==null||rr,!x){c=c!==null&&c.memoizedState!==null||Pe;var N=rr,E=Pe;rr=x,(Pe=c)&&!E?Wr(o,d,(d.subtreeFlags&8772)!==0):or(o,d),rr=N,Pe=E}g&512&&(d.memoizedProps.mode==="manual"?Ki(d,d.return):Cs(d,d.return));break;default:or(o,d)}}function AN(o){var c=o.alternate;c!==null&&(o.alternate=null,AN(c)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(c=o.stateNode,c!==null&&bg(c)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}var Je=null,Ts=!1;function ir(o,c,d){for(d=d.child;d!==null;)RN(o,c,d),d=d.sibling}function RN(o,c,d){if(Xn&&typeof Xn.onCommitFiberUnmount=="function")try{Xn.onCommitFiberUnmount(Ea,d)}catch{}switch(d.tag){case 26:Pe||Cs(d,c),ir(o,c,d),d.memoizedState?d.memoizedState.count--:d.stateNode&&(d=d.stateNode,d.parentNode.removeChild(d));break;case 27:Pe||Cs(d,c);var g=Je,x=Ts;for(Je=d.stateNode,ir(o,c,d),d=d.stateNode,c=d.attributes;c.length;)d.removeAttributeNode(c[0]);bg(d),Je=g,Ts=x;break;case 5:Pe||Cs(d,c);case 6:x=Je;var N=Ts;if(Je=null,ir(o,c,d),Je=x,Ts=N,Je!==null)if(Ts)try{o=Je,g=d.stateNode,o.nodeType===8?o.parentNode.removeChild(g):o.removeChild(g)}catch(E){Ne(d,c,E)}else try{Je.removeChild(d.stateNode)}catch(E){Ne(d,c,E)}break;case 18:Je!==null&&(Ts?(c=Je,d=d.stateNode,c.nodeType===8?cb(c.parentNode,d):c.nodeType===1&&cb(c,d),lc(c)):cb(Je,d.stateNode));break;case 4:g=Je,x=Ts,Je=d.stateNode.containerInfo,Ts=!0,ir(o,c,d),Je=g,Ts=x;break;case 0:case 11:case 14:case 15:Pe||Ur(2,d,c),Pe||Ur(4,d,c),ir(o,c,d);break;case 1:Pe||(Cs(d,c),g=d.stateNode,typeof g.componentWillUnmount=="function"&&NN(d,c,g)),ir(o,c,d);break;case 21:ir(o,c,d);break;case 22:Pe||Cs(d,c),Pe=(g=Pe)||d.memoizedState!==null,ir(o,c,d),Pe=g;break;default:ir(o,c,d)}}function DN(o,c){if(c.memoizedState===null&&(o=c.alternate,o!==null&&(o=o.memoizedState,o!==null&&(o=o.dehydrated,o!==null))))try{lc(o)}catch(d){Ne(c,c.return,d)}}function b_(o){switch(o.tag){case 13:case 19:var c=o.stateNode;return c===null&&(c=o.stateNode=new kN),c;case 22:return o=o.stateNode,c=o._retryCache,c===null&&(c=o._retryCache=new kN),c;default:throw Error(s(435,o.tag))}}function Oy(o,c){var d=b_(o);c.forEach(function(g){var x=R_.bind(null,o,g);d.has(g)||(d.add(g),g.then(x,x))})}function Us(o,c){var d=c.deletions;if(d!==null)for(var g=0;g<d.length;g++){var x=d[g],N=o,E=c,z=E;t:for(;z!==null;){switch(z.tag){case 27:case 5:Je=z.stateNode,Ts=!1;break t;case 3:Je=z.stateNode.containerInfo,Ts=!0;break t;case 4:Je=z.stateNode.containerInfo,Ts=!0;break t}z=z.return}if(Je===null)throw Error(s(160));RN(N,E,x),Je=null,Ts=!1,N=x.alternate,N!==null&&(N.return=null),x.return=null}if(c.subtreeFlags&13878)for(c=c.child;c!==null;)ON(c,o),c=c.sibling}var pa=null;function ON(o,c){var d=o.alternate,g=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:Us(c,o),Ws(o),g&4&&(Ur(3,o,o.return),Gu(3,o),Ur(5,o,o.return));break;case 1:Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),g&64&&rr&&(o=o.updateQueue,o!==null&&(g=o.callbacks,g!==null&&(d=o.shared.hiddenCallbacks,o.shared.hiddenCallbacks=d===null?g:d.concat(g))));break;case 26:var x=pa;if(Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),g&4){var N=d!==null?d.memoizedState:null;if(g=o.memoizedState,d===null)if(g===null)if(o.stateNode===null){t:{g=o.type,d=o.memoizedProps,x=x.ownerDocument||x;e:switch(g){case"title":N=x.getElementsByTagName("title")[0],(!N||N[gu]||N[Mn]||N.namespaceURI==="http://www.w3.org/2000/svg"||N.hasAttribute("itemprop"))&&(N=x.createElement(g),x.head.insertBefore(N,x.querySelector("head > title"))),Dn(N,g,d),N[Mn]=o,yn(N),g=N;break t;case"link":var E=CC("link","href",x).get(g+(d.href||""));if(E){for(var z=0;z<E.length;z++)if(N=E[z],N.getAttribute("href")===(d.href==null?null:d.href)&&N.getAttribute("rel")===(d.rel==null?null:d.rel)&&N.getAttribute("title")===(d.title==null?null:d.title)&&N.getAttribute("crossorigin")===(d.crossOrigin==null?null:d.crossOrigin)){E.splice(z,1);break e}}N=x.createElement(g),Dn(N,g,d),x.head.appendChild(N);break;case"meta":if(E=CC("meta","content",x).get(g+(d.content||""))){for(z=0;z<E.length;z++)if(N=E[z],N.getAttribute("content")===(d.content==null?null:""+d.content)&&N.getAttribute("name")===(d.name==null?null:d.name)&&N.getAttribute("property")===(d.property==null?null:d.property)&&N.getAttribute("http-equiv")===(d.httpEquiv==null?null:d.httpEquiv)&&N.getAttribute("charset")===(d.charSet==null?null:d.charSet)){E.splice(z,1);break e}}N=x.createElement(g),Dn(N,g,d),x.head.appendChild(N);break;default:throw Error(s(468,g))}N[Mn]=o,yn(N),g=N}o.stateNode=g}else TC(x,o.type,o.stateNode);else o.stateNode=NC(x,g,o.memoizedProps);else N!==g?(N===null?d.stateNode!==null&&(d=d.stateNode,d.parentNode.removeChild(d)):N.count--,g===null?TC(x,o.type,o.stateNode):NC(x,g,o.memoizedProps)):g===null&&o.stateNode!==null&&TN(o,o.memoizedProps,d.memoizedProps)}break;case 27:if(g&4&&o.alternate===null){x=o.stateNode,N=o.memoizedProps;try{for(var V=x.firstChild;V;){var J=V.nextSibling,pt=V.nodeName;V[gu]||pt==="HEAD"||pt==="BODY"||pt==="SCRIPT"||pt==="STYLE"||pt==="LINK"&&V.rel.toLowerCase()==="stylesheet"||x.removeChild(V),V=J}for(var vt=o.type,ct=x.attributes;ct.length;)x.removeAttributeNode(ct[0]);Dn(x,vt,N),x[Mn]=o,x[ns]=N}catch(_t){Ne(o,o.return,_t)}}case 5:if(Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),o.flags&32){x=o.stateNode;try{Ho(x,"")}catch(_t){Ne(o,o.return,_t)}}g&4&&o.stateNode!=null&&(x=o.memoizedProps,TN(o,x,d!==null?d.memoizedProps:x)),g&1024&&(Dy=!0);break;case 6:if(Us(c,o),Ws(o),g&4){if(o.stateNode===null)throw Error(s(162));g=o.memoizedProps,d=o.stateNode;try{d.nodeValue=g}catch(_t){Ne(o,o.return,_t)}}break;case 3:if(rf=null,x=pa,pa=sf(c.containerInfo),Us(c,o),pa=x,Ws(o),g&4&&d!==null&&d.memoizedState.isDehydrated)try{lc(c.containerInfo)}catch(_t){Ne(o,o.return,_t)}Dy&&(Dy=!1,_N(o));break;case 4:g=pa,pa=sf(o.stateNode.containerInfo),Us(c,o),Ws(o),pa=g;break;case 12:Us(c,o),Ws(o);break;case 13:Us(c,o),Ws(o),o.child.flags&8192&&o.memoizedState!==null!=(d!==null&&d.memoizedState!==null)&&(Uy=Ve()),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,Oy(o,g)));break;case 22:if(g&512&&(Pe||d===null||Cs(d,d.return)),V=o.memoizedState!==null,J=d!==null&&d.memoizedState!==null,pt=rr,vt=Pe,rr=pt||V,Pe=vt||J,Us(c,o),Pe=vt,rr=pt,Ws(o),c=o.stateNode,c._current=o,c._visibility&=-3,c._visibility|=c._pendingVisibility&2,g&8192&&(c._visibility=V?c._visibility&-2:c._visibility|1,V&&(c=rr||Pe,d===null||J||c||ll(o)),o.memoizedProps===null||o.memoizedProps.mode!=="manual"))t:for(d=null,c=o;;){if(c.tag===5||c.tag===26||c.tag===27){if(d===null){J=d=c;try{if(x=J.stateNode,V)N=x.style,typeof N.setProperty=="function"?N.setProperty("display","none","important"):N.display="none";else{E=J.stateNode,z=J.memoizedProps.style;var ft=z!=null&&z.hasOwnProperty("display")?z.display:null;E.style.display=ft==null||typeof ft=="boolean"?"":(""+ft).trim()}}catch(_t){Ne(J,J.return,_t)}}}else if(c.tag===6){if(d===null){J=c;try{J.stateNode.nodeValue=V?"":J.memoizedProps}catch(_t){Ne(J,J.return,_t)}}}else if((c.tag!==22&&c.tag!==23||c.memoizedState===null||c===o)&&c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break t;for(;c.sibling===null;){if(c.return===null||c.return===o)break t;d===c&&(d=null),c=c.return}d===c&&(d=null),c.sibling.return=c.return,c=c.sibling}g&4&&(g=o.updateQueue,g!==null&&(d=g.retryQueue,d!==null&&(g.retryQueue=null,Oy(o,d))));break;case 19:Us(c,o),Ws(o),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,Oy(o,g)));break;case 21:break;default:Us(c,o),Ws(o)}}function Ws(o){var c=o.flags;if(c&2){try{if(o.tag!==27){t:{for(var d=o.return;d!==null;){if($N(d)){var g=d;break t}d=d.return}throw Error(s(160))}switch(g.tag){case 27:var x=g.stateNode,N=Ay(o);Ud(o,N,x);break;case 5:var E=g.stateNode;g.flags&32&&(Ho(E,""),g.flags&=-33);var z=Ay(o);Ud(o,z,E);break;case 3:case 4:var V=g.stateNode.containerInfo,J=Ay(o);Ry(o,J,V);break;default:throw Error(s(161))}}}catch(pt){Ne(o,o.return,pt)}o.flags&=-3}c&4096&&(o.flags&=-4097)}function _N(o){if(o.subtreeFlags&1024)for(o=o.child;o!==null;){var c=o;_N(c),c.tag===5&&c.flags&1024&&c.stateNode.reset(),o=o.sibling}}function or(o,c){if(c.subtreeFlags&8772)for(c=c.child;c!==null;)EN(o,c.alternate,c),c=c.sibling}function ll(o){for(o=o.child;o!==null;){var c=o;switch(c.tag){case 0:case 11:case 14:case 15:Ur(4,c,c.return),ll(c);break;case 1:Cs(c,c.return);var d=c.stateNode;typeof d.componentWillUnmount=="function"&&NN(c,c.return,d),ll(c);break;case 26:case 27:case 5:Cs(c,c.return),ll(c);break;case 22:Cs(c,c.return),c.memoizedState===null&&ll(c);break;default:ll(c)}o=o.sibling}}function Wr(o,c,d){for(d=d&&(c.subtreeFlags&8772)!==0,c=c.child;c!==null;){var g=c.alternate,x=o,N=c,E=N.flags;switch(N.tag){case 0:case 11:case 15:Wr(x,N,d),Gu(4,N);break;case 1:if(Wr(x,N,d),g=N,x=g.stateNode,typeof x.componentDidMount=="function")try{x.componentDidMount()}catch(J){Ne(g,g.return,J)}if(g=N,x=g.updateQueue,x!==null){var z=g.stateNode;try{var V=x.shared.hiddenCallbacks;if(V!==null)for(x.shared.hiddenCallbacks=null,x=0;x<V.length;x++)vN(V[x],z)}catch(J){Ne(g,g.return,J)}}d&&E&64&&SN(N),Ki(N,N.return);break;case 26:case 27:case 5:Wr(x,N,d),d&&g===null&&E&4&&CN(N),Ki(N,N.return);break;case 12:Wr(x,N,d);break;case 13:Wr(x,N,d),d&&E&4&&DN(x,N);break;case 22:N.memoizedState===null&&Wr(x,N,d),Ki(N,N.return);break;default:Wr(x,N,d)}c=c.sibling}}function _y(o,c){var d=null;o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),o=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(o=c.memoizedState.cachePool.pool),o!==d&&(o!=null&&o.refCount++,d!=null&&_u(d))}function Fy(o,c){o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&_u(o))}function Gr(o,c,d,g){if(c.subtreeFlags&10256)for(c=c.child;c!==null;)FN(o,c,d,g),c=c.sibling}function FN(o,c,d,g){var x=c.flags;switch(c.tag){case 0:case 11:case 15:Gr(o,c,d,g),x&2048&&Gu(9,c);break;case 3:Gr(o,c,d,g),x&2048&&(o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&_u(o)));break;case 12:if(x&2048){Gr(o,c,d,g),o=c.stateNode;try{var N=c.memoizedProps,E=N.id,z=N.onPostCommit;typeof z=="function"&&z(E,c.alternate===null?"mount":"update",o.passiveEffectDuration,-0)}catch(V){Ne(c,c.return,V)}}else Gr(o,c,d,g);break;case 23:break;case 22:N=c.stateNode,c.memoizedState!==null?N._visibility&4?Gr(o,c,d,g):Hu(o,c):N._visibility&4?Gr(o,c,d,g):(N._visibility|=4,ul(o,c,d,g,(c.subtreeFlags&10256)!==0)),x&2048&&_y(c.alternate,c);break;case 24:Gr(o,c,d,g),x&2048&&Fy(c.alternate,c);break;default:Gr(o,c,d,g)}}function ul(o,c,d,g,x){for(x=x&&(c.subtreeFlags&10256)!==0,c=c.child;c!==null;){var N=o,E=c,z=d,V=g,J=E.flags;switch(E.tag){case 0:case 11:case 15:ul(N,E,z,V,x),Gu(8,E);break;case 23:break;case 22:var pt=E.stateNode;E.memoizedState!==null?pt._visibility&4?ul(N,E,z,V,x):Hu(N,E):(pt._visibility|=4,ul(N,E,z,V,x)),x&&J&2048&&_y(E.alternate,E);break;case 24:ul(N,E,z,V,x),x&&J&2048&&Fy(E.alternate,E);break;default:ul(N,E,z,V,x)}c=c.sibling}}function Hu(o,c){if(c.subtreeFlags&10256)for(c=c.child;c!==null;){var d=o,g=c,x=g.flags;switch(g.tag){case 22:Hu(d,g),x&2048&&_y(g.alternate,g);break;case 24:Hu(d,g),x&2048&&Fy(g.alternate,g);break;default:Hu(d,g)}c=c.sibling}}var qu=8192;function cl(o){if(o.subtreeFlags&qu)for(o=o.child;o!==null;)LN(o),o=o.sibling}function LN(o){switch(o.tag){case 26:cl(o),o.flags&qu&&o.memoizedState!==null&&iF(pa,o.memoizedState,o.memoizedProps);break;case 5:cl(o);break;case 3:case 4:var c=pa;pa=sf(o.stateNode.containerInfo),cl(o),pa=c;break;case 22:o.memoizedState===null&&(c=o.alternate,c!==null&&c.memoizedState!==null?(c=qu,qu=16777216,cl(o),qu=c):cl(o));break;default:cl(o)}}function zN(o){var c=o.alternate;if(c!==null&&(o=c.child,o!==null)){c.child=null;do c=o.sibling,o.sibling=null,o=c;while(o!==null)}}function ju(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];xn=g,BN(g,o)}zN(o)}if(o.subtreeFlags&10256)for(o=o.child;o!==null;)MN(o),o=o.sibling}function MN(o){switch(o.tag){case 0:case 11:case 15:ju(o),o.flags&2048&&Ur(9,o,o.return);break;case 3:ju(o);break;case 12:ju(o);break;case 22:var c=o.stateNode;o.memoizedState!==null&&c._visibility&4&&(o.return===null||o.return.tag!==13)?(c._visibility&=-5,Wd(o)):ju(o);break;default:ju(o)}}function Wd(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];xn=g,BN(g,o)}zN(o)}for(o=o.child;o!==null;){switch(c=o,c.tag){case 0:case 11:case 15:Ur(8,c,c.return),Wd(c);break;case 22:d=c.stateNode,d._visibility&4&&(d._visibility&=-5,Wd(c));break;default:Wd(c)}o=o.sibling}}function BN(o,c){for(;xn!==null;){var d=xn;switch(d.tag){case 0:case 11:case 15:Ur(8,d,c);break;case 23:case 22:if(d.memoizedState!==null&&d.memoizedState.cachePool!==null){var g=d.memoizedState.cachePool.pool;g!=null&&g.refCount++}break;case 24:_u(d.memoizedState.cache)}if(g=d.child,g!==null)g.return=d,xn=g;else t:for(d=o;xn!==null;){g=xn;var x=g.sibling,N=g.return;if(AN(g),g===d){xn=null;break t}if(x!==null){x.return=N,xn=x;break t}xn=N}}}function x_(o,c,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=c,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Gs(o,c,d,g){return new x_(o,c,d,g)}function Ly(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Hr(o,c){var d=o.alternate;return d===null?(d=Gs(o.tag,c,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=c,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&31457280,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,c=o.dependencies,d.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d.refCleanup=o.refCleanup,d}function VN(o,c){o.flags&=31457282;var d=o.alternate;return d===null?(o.childLanes=0,o.lanes=c,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=d.childLanes,o.lanes=d.lanes,o.child=d.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=d.memoizedProps,o.memoizedState=d.memoizedState,o.updateQueue=d.updateQueue,o.type=d.type,c=d.dependencies,o.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),o}function Gd(o,c,d,g,x,N){var E=0;if(g=o,typeof o=="function")Ly(o)&&(E=1);else if(typeof o=="string")E=aF(o,d,Mt.current)?26:o==="html"||o==="head"||o==="body"?27:5;else t:switch(o){case u:return Yi(d.children,x,N,c);case h:E=8,x|=24;break;case f:return o=Gs(12,d,c,x|2),o.elementType=f,o.lanes=N,o;case v:return o=Gs(13,d,c,x),o.elementType=v,o.lanes=N,o;case w:return o=Gs(19,d,c,x),o.elementType=w,o.lanes=N,o;case $:return PN(d,x,N,c);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case p:case y:E=10;break t;case m:E=9;break t;case b:E=11;break t;case S:E=14;break t;case C:E=16,g=null;break t}E=29,d=Error(s(130,o===null?"null":typeof o,"")),g=null}return c=Gs(E,d,c,x),c.elementType=o,c.type=g,c.lanes=N,c}function Yi(o,c,d,g){return o=Gs(7,o,g,c),o.lanes=d,o}function PN(o,c,d,g){o=Gs(22,o,g,c),o.elementType=$,o.lanes=d;var x={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)===0){var E=Or(N,2);E!==null&&(x._pendingVisibility|=2,Yn(E,N,2))}},attach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)!==0){var E=Or(N,2);E!==null&&(x._pendingVisibility&=-3,Yn(E,N,2))}}};return o.stateNode=x,o}function zy(o,c,d){return o=Gs(6,o,null,c),o.lanes=d,o}function My(o,c,d){return c=Gs(4,o.children!==null?o.children:[],o.key,c),c.lanes=d,c.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},c}function lr(o){o.flags|=4}function UN(o,c){if(c.type!=="stylesheet"||(c.state.loading&4)!==0)o.flags&=-16777217;else if(o.flags|=16777216,!$C(c)){if(c=Ps.current,c!==null&&((le&4194176)===le?Ra!==null:(le&62914560)!==le&&(le&536870912)===0||c!==Ra))throw Ru=Wg,rS;o.flags|=8192}}function Hd(o,c){c!==null&&(o.flags|=4),o.flags&16384&&(c=o.tag!==22?iw():536870912,o.lanes|=c,dl|=c)}function Xu(o,c){if(!he)switch(o.tailMode){case"hidden":c=o.tail;for(var d=null;c!==null;)c.alternate!==null&&(d=c),c=c.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?c||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Fe(o){var c=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(c)for(var x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags&31457280,g|=x.flags&31457280,x.return=o,x=x.sibling;else for(x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags,g|=x.flags,x.return=o,x=x.sibling;return o.subtreeFlags|=g,o.childLanes=d,c}function v_(o,c,d){var g=c.pendingProps;switch(Pg(c),c.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Fe(c),null;case 1:return Fe(c),null;case 3:return d=c.stateNode,g=null,o!==null&&(g=o.memoizedState.cache),c.memoizedState.cache!==g&&(c.flags|=2048),ar(hn),se(),d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null),(o===null||o.child===null)&&(ku(c)?lr(c):o===null||o.memoizedState.isDehydrated&&(c.flags&256)===0||(c.flags|=1024,fa!==null&&(qy(fa),fa=null))),Fe(c),null;case 26:return d=c.memoizedState,o===null?(lr(c),d!==null?(Fe(c),UN(c,d)):(Fe(c),c.flags&=-16777217)):d?d!==o.memoizedState?(lr(c),Fe(c),UN(c,d)):(Fe(c),c.flags&=-16777217):(o.memoizedProps!==g&&lr(c),Fe(c),c.flags&=-16777217),null;case 27:fe(c),d=ne.current;var x=c.type;if(o!==null&&c.stateNode!=null)o.memoizedProps!==g&&lr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Fe(c),null}o=Mt.current,ku(c)?sS(c):(o=bC(x,g,d),c.stateNode=o,lr(c))}return Fe(c),null;case 5:if(fe(c),d=c.type,o!==null&&c.stateNode!=null)o.memoizedProps!==g&&lr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Fe(c),null}if(o=Mt.current,ku(c))sS(c);else{switch(x=nf(ne.current),o){case 1:o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case 2:o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;default:switch(d){case"svg":o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case"math":o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;case"script":o=x.createElement("div"),o.innerHTML="<script><\/script>",o=o.removeChild(o.firstChild);break;case"select":o=typeof g.is=="string"?x.createElement("select",{is:g.is}):x.createElement("select"),g.multiple?o.multiple=!0:g.size&&(o.size=g.size);break;default:o=typeof g.is=="string"?x.createElement(d,{is:g.is}):x.createElement(d)}}o[Mn]=c,o[ns]=g;t:for(x=c.child;x!==null;){if(x.tag===5||x.tag===6)o.appendChild(x.stateNode);else if(x.tag!==4&&x.tag!==27&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===c)break t;for(;x.sibling===null;){if(x.return===null||x.return===c)break t;x=x.return}x.sibling.return=x.return,x=x.sibling}c.stateNode=o;t:switch(Dn(o,d,g),d){case"button":case"input":case"select":case"textarea":o=!!g.autoFocus;break t;case"img":o=!0;break t;default:o=!1}o&&lr(c)}}return Fe(c),c.flags&=-16777217,null;case 6:if(o&&c.stateNode!=null)o.memoizedProps!==g&&lr(c);else{if(typeof g!="string"&&c.stateNode===null)throw Error(s(166));if(o=ne.current,ku(c)){if(o=c.stateNode,d=c.memoizedProps,g=null,x=Kn,x!==null)switch(x.tag){case 27:case 5:g=x.memoizedProps}o[Mn]=c,o=!!(o.nodeValue===d||g!==null&&g.suppressHydrationWarning===!0||dC(o.nodeValue,d)),o||Vi(c)}else o=nf(o).createTextNode(g),o[Mn]=c,c.stateNode=o}return Fe(c),null;case 13:if(g=c.memoizedState,o===null||o.memoizedState!==null&&o.memoizedState.dehydrated!==null){if(x=ku(c),g!==null&&g.dehydrated!==null){if(o===null){if(!x)throw Error(s(318));if(x=c.memoizedState,x=x!==null?x.dehydrated:null,!x)throw Error(s(317));x[Mn]=c}else Iu(),(c.flags&128)===0&&(c.memoizedState=null),c.flags|=4;Fe(c),x=!1}else fa!==null&&(qy(fa),fa=null),x=!0;if(!x)return c.flags&256?(tr(c),c):(tr(c),null)}if(tr(c),(c.flags&128)!==0)return c.lanes=d,c;if(d=g!==null,o=o!==null&&o.memoizedState!==null,d){g=c.child,x=null,g.alternate!==null&&g.alternate.memoizedState!==null&&g.alternate.memoizedState.cachePool!==null&&(x=g.alternate.memoizedState.cachePool.pool);var N=null;g.memoizedState!==null&&g.memoizedState.cachePool!==null&&(N=g.memoizedState.cachePool.pool),N!==x&&(g.flags|=2048)}return d!==o&&d&&(c.child.flags|=8192),Hd(c,c.updateQueue),Fe(c),null;case 4:return se(),o===null&&sb(c.stateNode.containerInfo),Fe(c),null;case 10:return ar(c.type),Fe(c),null;case 19:if(Tt(cn),x=c.memoizedState,x===null)return Fe(c),null;if(g=(c.flags&128)!==0,N=x.rendering,N===null)if(g)Xu(x,!1);else{if(Ue!==0||o!==null&&(o.flags&128)!==0)for(o=c.child;o!==null;){if(N=Id(o),N!==null){for(c.flags|=128,Xu(x,!1),o=N.updateQueue,c.updateQueue=o,Hd(c,o),c.subtreeFlags=0,o=d,d=c.child;d!==null;)VN(d,o),d=d.sibling;return It(cn,cn.current&1|2),c.child}o=o.sibling}x.tail!==null&&Ve()>qd&&(c.flags|=128,g=!0,Xu(x,!1),c.lanes=4194304)}else{if(!g)if(o=Id(N),o!==null){if(c.flags|=128,g=!0,o=o.updateQueue,c.updateQueue=o,Hd(c,o),Xu(x,!0),x.tail===null&&x.tailMode==="hidden"&&!N.alternate&&!he)return Fe(c),null}else 2*Ve()-x.renderingStartTime>qd&&d!==536870912&&(c.flags|=128,g=!0,Xu(x,!1),c.lanes=4194304);x.isBackwards?(N.sibling=c.child,c.child=N):(o=x.last,o!==null?o.sibling=N:c.child=N,x.last=N)}return x.tail!==null?(c=x.tail,x.rendering=c,x.tail=c.sibling,x.renderingStartTime=Ve(),c.sibling=null,o=cn.current,It(cn,g?o&1|2:o&1),c):(Fe(c),null);case 22:case 23:return tr(c),Hg(),g=c.memoizedState!==null,o!==null?o.memoizedState!==null!==g&&(c.flags|=8192):g&&(c.flags|=8192),g?(d&536870912)!==0&&(c.flags&128)===0&&(Fe(c),c.subtreeFlags&6&&(c.flags|=8192)):Fe(c),d=c.updateQueue,d!==null&&Hd(c,d.retryQueue),d=null,o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),g=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(g=c.memoizedState.cachePool.pool),g!==d&&(c.flags|=2048),o!==null&&Tt(Ui),null;case 24:return d=null,o!==null&&(d=o.memoizedState.cache),c.memoizedState.cache!==d&&(c.flags|=2048),ar(hn),Fe(c),null;case 25:return null}throw Error(s(156,c.tag))}function w_(o,c){switch(Pg(c),c.tag){case 1:return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 3:return ar(hn),se(),o=c.flags,(o&65536)!==0&&(o&128)===0?(c.flags=o&-65537|128,c):null;case 26:case 27:case 5:return fe(c),null;case 13:if(tr(c),o=c.memoizedState,o!==null&&o.dehydrated!==null){if(c.alternate===null)throw Error(s(340));Iu()}return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 19:return Tt(cn),null;case 4:return se(),null;case 10:return ar(c.type),null;case 22:case 23:return tr(c),Hg(),o!==null&&Tt(Ui),o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 24:return ar(hn),null;case 25:return null;default:return null}}function WN(o,c){switch(Pg(c),c.tag){case 3:ar(hn),se();break;case 26:case 27:case 5:fe(c);break;case 4:se();break;case 13:tr(c);break;case 19:Tt(cn);break;case 10:ar(c.type);break;case 22:case 23:tr(c),Hg(),o!==null&&Tt(Ui);break;case 24:ar(hn)}}var S_={getCacheForType:function(o){var c=Bn(hn),d=c.data.get(o);return d===void 0&&(d=o(),c.data.set(o,d)),d}},N_=typeof WeakMap=="function"?WeakMap:Map,Le=0,$e=null,Jt=null,le=0,ke=0,$s=null,ur=!1,hl=!1,By=!1,cr=0,Ue=0,qr=0,Zi=0,Vy=0,Hs=0,dl=0,Ku=null,Oa=null,Py=!1,Uy=0,qd=1/0,jd=null,jr=null,Xd=!1,Qi=null,Yu=0,Wy=0,Gy=null,Zu=0,Hy=null;function ks(){if((Le&2)!==0&&le!==0)return le&-le;if(D.T!==null){var o=sl;return o!==0?o:Jy()}return cw()}function GN(){Hs===0&&(Hs=(le&536870912)===0||he?rw():536870912);var o=Ps.current;return o!==null&&(o.flags|=32),Hs}function Yn(o,c,d){(o===$e&&ke===2||o.cancelPendingCommit!==null)&&(fl(o,0),hr(o,le,Hs,!1)),mu(o,d),((Le&2)===0||o!==$e)&&(o===$e&&((Le&2)===0&&(Zi|=d),Ue===4&&hr(o,le,Hs,!1)),_a(o))}function HN(o,c,d){if((Le&6)!==0)throw Error(s(327));var g=!d&&(c&60)===0&&(c&o.expiredLanes)===0||pu(o,c),x=g?$_(o,c):Ky(o,c,!0),N=g;do{if(x===0){hl&&!g&&hr(o,c,0,!1);break}else if(x===6)hr(o,c,0,!ur);else{if(d=o.current.alternate,N&&!C_(d)){x=Ky(o,c,!1),N=!1;continue}if(x===2){if(N=c,o.errorRecoveryDisabledLanes&N)var E=0;else E=o.pendingLanes&-536870913,E=E!==0?E:E&536870912?536870912:0;if(E!==0){c=E;t:{var z=o;x=Ku;var V=z.current.memoizedState.isDehydrated;if(V&&(fl(z,E).flags|=256),E=Ky(z,E,!1),E!==2){if(By&&!V){z.errorRecoveryDisabledLanes|=N,Zi|=N,x=4;break t}N=Oa,Oa=x,N!==null&&qy(N)}x=E}if(N=!1,x!==2)continue}}if(x===1){fl(o,0),hr(o,c,0,!0);break}t:{switch(g=o,x){case 0:case 1:throw Error(s(345));case 4:if((c&4194176)===c){hr(g,c,Hs,!ur);break t}break;case 2:Oa=null;break;case 3:case 5:break;default:throw Error(s(329))}if(g.finishedWork=d,g.finishedLanes=c,(c&62914560)===c&&(N=Uy+300-Ve(),10<N)){if(hr(g,c,Hs,!ur),od(g,0)!==0)break t;g.timeoutHandle=mC(qN.bind(null,g,d,Oa,jd,Py,c,Hs,Zi,dl,ur,2,-0,0),N);break t}qN(g,d,Oa,jd,Py,c,Hs,Zi,dl,ur,0,-0,0)}}break}while(!0);_a(o)}function qy(o){Oa===null?Oa=o:Oa.push.apply(Oa,o)}function qN(o,c,d,g,x,N,E,z,V,J,pt,vt,ct){var ft=c.subtreeFlags;if((ft&8192||(ft&16785408)===16785408)&&(sc={stylesheets:null,count:0,unsuspend:rF},LN(c),c=oF(),c!==null)){o.cancelPendingCommit=c(JN.bind(null,o,d,g,x,E,z,V,1,vt,ct)),hr(o,N,E,!J);return}JN(o,d,g,x,E,z,V,pt,vt,ct)}function C_(o){for(var c=o;;){var d=c.tag;if((d===0||d===11||d===15)&&c.flags&16384&&(d=c.updateQueue,d!==null&&(d=d.stores,d!==null)))for(var g=0;g<d.length;g++){var x=d[g],N=x.getSnapshot;x=x.value;try{if(!Ns(N(),x))return!1}catch{return!1}}if(d=c.child,c.subtreeFlags&16384&&d!==null)d.return=c,c=d;else{if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return!0;c=c.return}c.sibling.return=c.return,c=c.sibling}}return!0}function hr(o,c,d,g){c&=~Vy,c&=~Zi,o.suspendedLanes|=c,o.pingedLanes&=~c,g&&(o.warmLanes|=c),g=o.expirationTimes;for(var x=c;0<x;){var N=31-Ss(x),E=1<<N;g[N]=-1,x&=~E}d!==0&&ow(o,d,c)}function Kd(){return(Le&6)===0?(Qu(0),!1):!0}function jy(){if(Jt!==null){if(ke===0)var o=Jt.return;else o=Jt,sr=ji=null,Jg(o),el=null,Du=0,o=Jt;for(;o!==null;)WN(o.alternate,o),o=o.return;Jt=null}}function fl(o,c){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;d!==-1&&(o.timeoutHandle=-1,W_(d)),d=o.cancelPendingCommit,d!==null&&(o.cancelPendingCommit=null,d()),jy(),$e=o,Jt=d=Hr(o.current,null),le=c,ke=0,$s=null,ur=!1,hl=pu(o,c),By=!1,dl=Hs=Vy=Zi=qr=Ue=0,Oa=Ku=null,Py=!1,(c&8)!==0&&(c|=c&32);var g=o.entangledLanes;if(g!==0)for(o=o.entanglements,g&=c;0<g;){var x=31-Ss(g),N=1<<x;c|=o[x],g&=~N}return cr=c,xd(),d}function jN(o,c){Yt=null,D.H=Da,c===Au?(c=lS(),ke=3):c===rS?(c=lS(),ke=4):ke=c===iN?8:c!==null&&typeof c=="object"&&typeof c.then=="function"?6:1,$s=c,Jt===null&&(Ue=1,Bd(o,Ms(c,o.current)))}function XN(){var o=D.H;return D.H=Da,o===null?Da:o}function KN(){var o=D.A;return D.A=S_,o}function Xy(){Ue=4,ur||(le&4194176)!==le&&Ps.current!==null||(hl=!0),(qr&134217727)===0&&(Zi&134217727)===0||$e===null||hr($e,le,Hs,!1)}function Ky(o,c,d){var g=Le;Le|=2;var x=XN(),N=KN();($e!==o||le!==c)&&(jd=null,fl(o,c)),c=!1;var E=Ue;t:do try{if(ke!==0&&Jt!==null){var z=Jt,V=$s;switch(ke){case 8:jy(),E=6;break t;case 3:case 2:case 6:Ps.current===null&&(c=!0);var J=ke;if(ke=0,$s=null,pl(o,z,V,J),d&&hl){E=0;break t}break;default:J=ke,ke=0,$s=null,pl(o,z,V,J)}}T_(),E=Ue;break}catch(pt){jN(o,pt)}while(!0);return c&&o.shellSuspendCounter++,sr=ji=null,Le=g,D.H=x,D.A=N,Jt===null&&($e=null,le=0,xd()),E}function T_(){for(;Jt!==null;)YN(Jt)}function $_(o,c){var d=Le;Le|=2;var g=XN(),x=KN();$e!==o||le!==c?(jd=null,qd=Ve()+500,fl(o,c)):hl=pu(o,c);t:do try{if(ke!==0&&Jt!==null){c=Jt;var N=$s;e:switch(ke){case 1:ke=0,$s=null,pl(o,c,N,1);break;case 2:if(iS(N)){ke=0,$s=null,ZN(c);break}c=function(){ke===2&&$e===o&&(ke=7),_a(o)},N.then(c,c);break t;case 3:ke=7;break t;case 4:ke=5;break t;case 7:iS(N)?(ke=0,$s=null,ZN(c)):(ke=0,$s=null,pl(o,c,N,7));break;case 5:var E=null;switch(Jt.tag){case 26:E=Jt.memoizedState;case 5:case 27:var z=Jt;if(!E||$C(E)){ke=0,$s=null;var V=z.sibling;if(V!==null)Jt=V;else{var J=z.return;J!==null?(Jt=J,Yd(J)):Jt=null}break e}}ke=0,$s=null,pl(o,c,N,5);break;case 6:ke=0,$s=null,pl(o,c,N,6);break;case 8:jy(),Ue=6;break t;default:throw Error(s(462))}}k_();break}catch(pt){jN(o,pt)}while(!0);return sr=ji=null,D.H=g,D.A=x,Le=d,Jt!==null?0:($e=null,le=0,xd(),Ue)}function k_(){for(;Jt!==null&&!jn();)YN(Jt)}function YN(o){var c=bN(o.alternate,o,cr);o.memoizedProps=o.pendingProps,c===null?Yd(o):Jt=c}function ZN(o){var c=o,d=c.alternate;switch(c.tag){case 15:case 0:c=dN(d,c,c.pendingProps,c.type,void 0,le);break;case 11:c=dN(d,c,c.pendingProps,c.type.render,c.ref,le);break;case 5:Jg(c);default:WN(d,c),c=Jt=VN(c,cr),c=bN(d,c,cr)}o.memoizedProps=o.pendingProps,c===null?Yd(o):Jt=c}function pl(o,c,d,g){sr=ji=null,Jg(c),el=null,Du=0;var x=c.return;try{if(m_(o,x,c,d,le)){Ue=1,Bd(o,Ms(d,o.current)),Jt=null;return}}catch(N){if(x!==null)throw Jt=x,N;Ue=1,Bd(o,Ms(d,o.current)),Jt=null;return}c.flags&32768?(he||g===1?o=!0:hl||(le&536870912)!==0?o=!1:(ur=o=!0,(g===2||g===3||g===6)&&(g=Ps.current,g!==null&&g.tag===13&&(g.flags|=16384))),QN(c,o)):Yd(c)}function Yd(o){var c=o;do{if((c.flags&32768)!==0){QN(c,ur);return}o=c.return;var d=v_(c.alternate,c,cr);if(d!==null){Jt=d;return}if(c=c.sibling,c!==null){Jt=c;return}Jt=c=o}while(c!==null);Ue===0&&(Ue=5)}function QN(o,c){do{var d=w_(o.alternate,o);if(d!==null){d.flags&=32767,Jt=d;return}if(d=o.return,d!==null&&(d.flags|=32768,d.subtreeFlags=0,d.deletions=null),!c&&(o=o.sibling,o!==null)){Jt=o;return}Jt=o=d}while(o!==null);Ue=6,Jt=null}function JN(o,c,d,g,x,N,E,z,V,J){var pt=D.T,vt=ut.p;try{ut.p=2,D.T=null,I_(o,c,d,g,vt,x,N,E,z,V,J)}finally{D.T=pt,ut.p=vt}}function I_(o,c,d,g,x,N,E,z){do ml();while(Qi!==null);if((Le&6)!==0)throw Error(s(327));var V=o.finishedWork;if(g=o.finishedLanes,V===null)return null;if(o.finishedWork=null,o.finishedLanes=0,V===o.current)throw Error(s(177));o.callbackNode=null,o.callbackPriority=0,o.cancelPendingCommit=null;var J=V.lanes|V.childLanes;if(J|=Mg,iO(o,g,J,N,E,z),o===$e&&(Jt=$e=null,le=0),(V.subtreeFlags&10256)===0&&(V.flags&10256)===0||Xd||(Xd=!0,Wy=J,Gy=d,D_(ws,function(){return ml(),null})),d=(V.flags&15990)!==0,(V.subtreeFlags&15990)!==0||d?(d=D.T,D.T=null,N=ut.p,ut.p=2,E=Le,Le|=4,y_(o,V),ON(V,o),QO(ob,o.containerInfo),uf=!!ib,ob=ib=null,o.current=V,EN(o,V.alternate,V),Ka(),Le=E,ut.p=N,D.T=d):o.current=V,Xd?(Xd=!1,Qi=o,Yu=g):tC(o,J),J=o.pendingLanes,J===0&&(jr=null),mg(V.stateNode),_a(o),c!==null)for(x=o.onRecoverableError,V=0;V<c.length;V++)J=c[V],x(J.value,{componentStack:J.stack});return(Yu&3)!==0&&ml(),J=o.pendingLanes,(g&4194218)!==0&&(J&42)!==0?o===Hy?Zu++:(Zu=0,Hy=o):Zu=0,Qu(0),null}function tC(o,c){(o.pooledCacheLanes&=c)===0&&(c=o.pooledCache,c!=null&&(o.pooledCache=null,_u(c)))}function ml(){if(Qi!==null){var o=Qi,c=Wy;Wy=0;var d=uw(Yu),g=D.T,x=ut.p;try{if(ut.p=32>d?32:d,D.T=null,Qi===null)var N=!1;else{d=Gy,Gy=null;var E=Qi,z=Yu;if(Qi=null,Yu=0,(Le&6)!==0)throw Error(s(331));var V=Le;if(Le|=4,MN(E.current),FN(E,E.current,z,d),Le=V,Qu(0,!1),Xn&&typeof Xn.onPostCommitFiberRoot=="function")try{Xn.onPostCommitFiberRoot(Ea,E)}catch{}N=!0}return N}finally{ut.p=x,D.T=g,tC(o,c)}}return!1}function eC(o,c,d){c=Ms(d,c),c=fy(o.stateNode,c,2),o=Pr(o,c,2),o!==null&&(mu(o,2),_a(o))}function Ne(o,c,d){if(o.tag===3)eC(o,o,d);else for(;c!==null;){if(c.tag===3){eC(c,o,d);break}else if(c.tag===1){var g=c.stateNode;if(typeof c.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(jr===null||!jr.has(g))){o=Ms(d,o),d=aN(2),g=Pr(c,d,2),g!==null&&(rN(d,g,c,o),mu(g,2),_a(g));break}}c=c.return}}function Yy(o,c,d){var g=o.pingCache;if(g===null){g=o.pingCache=new N_;var x=new Set;g.set(c,x)}else x=g.get(c),x===void 0&&(x=new Set,g.set(c,x));x.has(d)||(By=!0,x.add(d),o=E_.bind(null,o,c,d),c.then(o,o))}function E_(o,c,d){var g=o.pingCache;g!==null&&g.delete(c),o.pingedLanes|=o.suspendedLanes&d,o.warmLanes&=~d,$e===o&&(le&d)===d&&(Ue===4||Ue===3&&(le&62914560)===le&&300>Ve()-Uy?(Le&2)===0&&fl(o,0):Vy|=d,dl===le&&(dl=0)),_a(o)}function nC(o,c){c===0&&(c=iw()),o=Or(o,c),o!==null&&(mu(o,c),_a(o))}function A_(o){var c=o.memoizedState,d=0;c!==null&&(d=c.retryLane),nC(o,d)}function R_(o,c){var d=0;switch(o.tag){case 13:var g=o.stateNode,x=o.memoizedState;x!==null&&(d=x.retryLane);break;case 19:g=o.stateNode;break;case 22:g=o.stateNode._retryCache;break;default:throw Error(s(314))}g!==null&&g.delete(c),nC(o,d)}function D_(o,c){return Be(o,c)}var Zd=null,gl=null,Zy=!1,Qd=!1,Qy=!1,Ji=0;function _a(o){o!==gl&&o.next===null&&(gl===null?Zd=gl=o:gl=gl.next=o),Qd=!0,Zy||(Zy=!0,__(O_))}function Qu(o,c){if(!Qy&&Qd){Qy=!0;do for(var d=!1,g=Zd;g!==null;){if(o!==0){var x=g.pendingLanes;if(x===0)var N=0;else{var E=g.suspendedLanes,z=g.pingedLanes;N=(1<<31-Ss(42|o)+1)-1,N&=x&~(E&~z),N=N&201326677?N&201326677|1:N?N|2:0}N!==0&&(d=!0,rC(g,N))}else N=le,N=od(g,g===$e?N:0),(N&3)===0||pu(g,N)||(d=!0,rC(g,N));g=g.next}while(d);Qy=!1}}function O_(){Qd=Zy=!1;var o=0;Ji!==0&&(U_()&&(o=Ji),Ji=0);for(var c=Ve(),d=null,g=Zd;g!==null;){var x=g.next,N=sC(g,c);N===0?(g.next=null,d===null?Zd=x:d.next=x,x===null&&(gl=d)):(d=g,(o!==0||(N&3)!==0)&&(Qd=!0)),g=x}Qu(o)}function sC(o,c){for(var d=o.suspendedLanes,g=o.pingedLanes,x=o.expirationTimes,N=o.pendingLanes&-62914561;0<N;){var E=31-Ss(N),z=1<<E,V=x[E];V===-1?((z&d)===0||(z&g)!==0)&&(x[E]=rO(z,c)):V<=c&&(o.expiredLanes|=z),N&=~z}if(c=$e,d=le,d=od(o,o===c?d:0),g=o.callbackNode,d===0||o===c&&ke===2||o.cancelPendingCommit!==null)return g!==null&&g!==null&&_s(g),o.callbackNode=null,o.callbackPriority=0;if((d&3)===0||pu(o,d)){if(c=d&-d,c===o.callbackPriority)return c;switch(g!==null&&_s(g),uw(d)){case 2:case 8:d=ha;break;case 32:d=ws;break;case 268435456:d=Bo;break;default:d=ws}return g=aC.bind(null,o),d=Be(d,g),o.callbackPriority=c,o.callbackNode=d,c}return g!==null&&g!==null&&_s(g),o.callbackPriority=2,o.callbackNode=null,2}function aC(o,c){var d=o.callbackNode;if(ml()&&o.callbackNode!==d)return null;var g=le;return g=od(o,o===$e?g:0),g===0?null:(HN(o,g,c),sC(o,Ve()),o.callbackNode!=null&&o.callbackNode===d?aC.bind(null,o):null)}function rC(o,c){if(ml())return null;HN(o,c,!0)}function __(o){G_(function(){(Le&6)!==0?Be(ca,o):o()})}function Jy(){return Ji===0&&(Ji=rw()),Ji}function iC(o){return o==null||typeof o=="symbol"||typeof o=="boolean"?null:typeof o=="function"?o:dd(""+o)}function oC(o,c){var d=c.ownerDocument.createElement("input");return d.name=c.name,d.value=c.value,o.id&&d.setAttribute("form",o.id),c.parentNode.insertBefore(d,c),o=new FormData(o),d.parentNode.removeChild(d),o}function F_(o,c,d,g,x){if(c==="submit"&&d&&d.stateNode===x){var N=iC((x[ns]||null).action),E=g.submitter;E&&(c=(c=E[ns]||null)?iC(c.formAction):E.getAttribute("formAction"),c!==null&&(N=c,E=null));var z=new gd("action","action",null,g,x);o.push({event:z,listeners:[{instance:null,listener:function(){if(g.defaultPrevented){if(Ji!==0){var V=E?oC(x,E):new FormData(x);ly(d,{pending:!0,data:V,method:x.method,action:N},null,V)}}else typeof N=="function"&&(z.preventDefault(),V=E?oC(x,E):new FormData(x),ly(d,{pending:!0,data:V,method:x.method,action:N},N,V))},currentTarget:x}]})}}for(var tb=0;tb<Jw.length;tb++){var eb=Jw[tb],L_=eb.toLowerCase(),z_=eb[0].toUpperCase()+eb.slice(1);da(L_,"on"+z_)}da(Xw,"onAnimationEnd"),da(Kw,"onAnimationIteration"),da(Yw,"onAnimationStart"),da("dblclick","onDoubleClick"),da("focusin","onFocus"),da("focusout","onBlur"),da(t_,"onTransitionRun"),da(e_,"onTransitionStart"),da(n_,"onTransitionCancel"),da(Zw,"onTransitionEnd"),Wo("onMouseEnter",["mouseout","mouseover"]),Wo("onMouseLeave",["mouseout","mouseover"]),Wo("onPointerEnter",["pointerout","pointerover"]),Wo("onPointerLeave",["pointerout","pointerover"]),_i("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),_i("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),_i("onBeforeInput",["compositionend","keypress","textInput","paste"]),_i("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),_i("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),_i("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ju="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),M_=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Ju));function lC(o,c){c=(c&4)!==0;for(var d=0;d<o.length;d++){var g=o[d],x=g.event;g=g.listeners;t:{var N=void 0;if(c)for(var E=g.length-1;0<=E;E--){var z=g[E],V=z.instance,J=z.currentTarget;if(z=z.listener,V!==N&&x.isPropagationStopped())break t;N=z,x.currentTarget=J;try{N(x)}catch(pt){Md(pt)}x.currentTarget=null,N=V}else for(E=0;E<g.length;E++){if(z=g[E],V=z.instance,J=z.currentTarget,z=z.listener,V!==N&&x.isPropagationStopped())break t;N=z,x.currentTarget=J;try{N(x)}catch(pt){Md(pt)}x.currentTarget=null,N=V}}}}function ie(o,c){var d=c[yg];d===void 0&&(d=c[yg]=new Set);var g=o+"__bubble";d.has(g)||(uC(c,o,2,!1),d.add(g))}function nb(o,c,d){var g=0;c&&(g|=4),uC(d,o,g,c)}var Jd="_reactListening"+Math.random().toString(36).slice(2);function sb(o){if(!o[Jd]){o[Jd]=!0,dw.forEach(function(d){d!=="selectionchange"&&(M_.has(d)||nb(d,!1,o),nb(d,!0,o))});var c=o.nodeType===9?o:o.ownerDocument;c===null||c[Jd]||(c[Jd]=!0,nb("selectionchange",!1,c))}}function uC(o,c,d,g){switch(DC(c)){case 2:var x=cF;break;case 8:x=hF;break;default:x=gb}d=x.bind(null,c,d,o),x=void 0,!Tg||c!=="touchstart"&&c!=="touchmove"&&c!=="wheel"||(x=!0),g?x!==void 0?o.addEventListener(c,d,{capture:!0,passive:x}):o.addEventListener(c,d,!0):x!==void 0?o.addEventListener(c,d,{passive:x}):o.addEventListener(c,d,!1)}function ab(o,c,d,g,x){var N=g;if((c&1)===0&&(c&2)===0&&g!==null)t:for(;;){if(g===null)return;var E=g.tag;if(E===3||E===4){var z=g.stateNode.containerInfo;if(z===x||z.nodeType===8&&z.parentNode===x)break;if(E===4)for(E=g.return;E!==null;){var V=E.tag;if((V===3||V===4)&&(V=E.stateNode.containerInfo,V===x||V.nodeType===8&&V.parentNode===x))return;E=E.return}for(;z!==null;){if(E=Oi(z),E===null)return;if(V=E.tag,V===5||V===6||V===26||V===27){g=N=E;continue t}z=z.parentNode}}g=g.return}Cw(function(){var J=N,pt=Ng(d),vt=[];t:{var ct=Qw.get(o);if(ct!==void 0){var ft=gd,_t=o;switch(o){case"keypress":if(pd(d)===0)break t;case"keydown":case"keyup":ft=RO;break;case"focusin":_t="focus",ft=Eg;break;case"focusout":_t="blur",ft=Eg;break;case"beforeblur":case"afterblur":ft=Eg;break;case"click":if(d.button===2)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ft=kw;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ft=xO;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ft=_O;break;case Xw:case Kw:case Yw:ft=SO;break;case Zw:ft=LO;break;case"scroll":case"scrollend":ft=yO;break;case"wheel":ft=MO;break;case"copy":case"cut":case"paste":ft=CO;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ft=Ew;break;case"toggle":case"beforetoggle":ft=VO}var Ut=(c&4)!==0,We=!Ut&&(o==="scroll"||o==="scrollend"),st=Ut?ct!==null?ct+"Capture":null:ct;Ut=[];for(var Z=J,it;Z!==null;){var gt=Z;if(it=gt.stateNode,gt=gt.tag,gt!==5&&gt!==26&&gt!==27||it===null||st===null||(gt=bu(Z,st),gt!=null&&Ut.push(tc(Z,gt,it))),We)break;Z=Z.return}0<Ut.length&&(ct=new ft(ct,_t,null,d,pt),vt.push({event:ct,listeners:Ut}))}}if((c&7)===0){t:{if(ct=o==="mouseover"||o==="pointerover",ft=o==="mouseout"||o==="pointerout",ct&&d!==Sg&&(_t=d.relatedTarget||d.fromElement)&&(Oi(_t)||_t[Vo]))break t;if((ft||ct)&&(ct=pt.window===pt?pt:(ct=pt.ownerDocument)?ct.defaultView||ct.parentWindow:window,ft?(_t=d.relatedTarget||d.toElement,ft=J,_t=_t?Oi(_t):null,_t!==null&&(We=Y(_t),Ut=_t.tag,_t!==We||Ut!==5&&Ut!==27&&Ut!==6)&&(_t=null)):(ft=null,_t=J),ft!==_t)){if(Ut=kw,gt="onMouseLeave",st="onMouseEnter",Z="mouse",(o==="pointerout"||o==="pointerover")&&(Ut=Ew,gt="onPointerLeave",st="onPointerEnter",Z="pointer"),We=ft==null?ct:yu(ft),it=_t==null?ct:yu(_t),ct=new Ut(gt,Z+"leave",ft,d,pt),ct.target=We,ct.relatedTarget=it,gt=null,Oi(pt)===J&&(Ut=new Ut(st,Z+"enter",_t,d,pt),Ut.target=it,Ut.relatedTarget=We,gt=Ut),We=gt,ft&&_t)e:{for(Ut=ft,st=_t,Z=0,it=Ut;it;it=yl(it))Z++;for(it=0,gt=st;gt;gt=yl(gt))it++;for(;0<Z-it;)Ut=yl(Ut),Z--;for(;0<it-Z;)st=yl(st),it--;for(;Z--;){if(Ut===st||st!==null&&Ut===st.alternate)break e;Ut=yl(Ut),st=yl(st)}Ut=null}else Ut=null;ft!==null&&cC(vt,ct,ft,Ut,!1),_t!==null&&We!==null&&cC(vt,We,_t,Ut,!0)}}t:{if(ct=J?yu(J):window,ft=ct.nodeName&&ct.nodeName.toLowerCase(),ft==="select"||ft==="input"&&ct.type==="file")var Dt=zw;else if(Fw(ct))if(Mw)Dt=YO;else{Dt=XO;var Qt=jO}else ft=ct.nodeName,!ft||ft.toLowerCase()!=="input"||ct.type!=="checkbox"&&ct.type!=="radio"?J&&wg(J.elementType)&&(Dt=zw):Dt=KO;if(Dt&&(Dt=Dt(o,J))){Lw(vt,Dt,d,pt);break t}Qt&&Qt(o,ct,J),o==="focusout"&&J&&ct.type==="number"&&J.memoizedProps.value!=null&&vg(ct,"number",ct.value)}switch(Qt=J?yu(J):window,o){case"focusin":(Fw(Qt)||Qt.contentEditable==="true")&&(Ko=Qt,Fg=J,$u=null);break;case"focusout":$u=Fg=Ko=null;break;case"mousedown":Lg=!0;break;case"contextmenu":case"mouseup":case"dragend":Lg=!1,qw(vt,d,pt);break;case"selectionchange":if(JO)break;case"keydown":case"keyup":qw(vt,d,pt)}var zt;if(Rg)t:{switch(o){case"compositionstart":var Bt="onCompositionStart";break t;case"compositionend":Bt="onCompositionEnd";break t;case"compositionupdate":Bt="onCompositionUpdate";break t}Bt=void 0}else Xo?Ow(o,d)&&(Bt="onCompositionEnd"):o==="keydown"&&d.keyCode===229&&(Bt="onCompositionStart");Bt&&(Aw&&d.locale!=="ko"&&(Xo||Bt!=="onCompositionStart"?Bt==="onCompositionEnd"&&Xo&&(zt=Tw()):(Dr=pt,$g="value"in Dr?Dr.value:Dr.textContent,Xo=!0)),Qt=tf(J,Bt),0<Qt.length&&(Bt=new Iw(Bt,o,null,d,pt),vt.push({event:Bt,listeners:Qt}),zt?Bt.data=zt:(zt=_w(d),zt!==null&&(Bt.data=zt)))),(zt=UO?WO(o,d):GO(o,d))&&(Bt=tf(J,"onBeforeInput"),0<Bt.length&&(Qt=new Iw("onBeforeInput","beforeinput",null,d,pt),vt.push({event:Qt,listeners:Bt}),Qt.data=zt)),F_(vt,o,J,d,pt)}lC(vt,c)})}function tc(o,c,d){return{instance:o,listener:c,currentTarget:d}}function tf(o,c){for(var d=c+"Capture",g=[];o!==null;){var x=o,N=x.stateNode;x=x.tag,x!==5&&x!==26&&x!==27||N===null||(x=bu(o,d),x!=null&&g.unshift(tc(o,x,N)),x=bu(o,c),x!=null&&g.push(tc(o,x,N))),o=o.return}return g}function yl(o){if(o===null)return null;do o=o.return;while(o&&o.tag!==5&&o.tag!==27);return o||null}function cC(o,c,d,g,x){for(var N=c._reactName,E=[];d!==null&&d!==g;){var z=d,V=z.alternate,J=z.stateNode;if(z=z.tag,V!==null&&V===g)break;z!==5&&z!==26&&z!==27||J===null||(V=J,x?(J=bu(d,N),J!=null&&E.unshift(tc(d,J,V))):x||(J=bu(d,N),J!=null&&E.push(tc(d,J,V)))),d=d.return}E.length!==0&&o.push({event:c,listeners:E})}var B_=/\r\n?/g,V_=/\u0000|\uFFFD/g;function hC(o){return(typeof o=="string"?o:""+o).replace(B_,`
`).replace(V_,"")}function dC(o,c){return c=hC(c),hC(o)===c}function ef(){}function ve(o,c,d,g,x,N){switch(d){case"children":typeof g=="string"?c==="body"||c==="textarea"&&g===""||Ho(o,g):(typeof g=="number"||typeof g=="bigint")&&c!=="body"&&Ho(o,""+g);break;case"className":ud(o,"class",g);break;case"tabIndex":ud(o,"tabindex",g);break;case"dir":case"role":case"viewBox":case"width":case"height":ud(o,d,g);break;case"style":Sw(o,g,N);break;case"data":if(c!=="object"){ud(o,"data",g);break}case"src":case"href":if(g===""&&(c!=="a"||d!=="href")){o.removeAttribute(d);break}if(g==null||typeof g=="function"||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=dd(""+g),o.setAttribute(d,g);break;case"action":case"formAction":if(typeof g=="function"){o.setAttribute(d,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof N=="function"&&(d==="formAction"?(c!=="input"&&ve(o,c,"name",x.name,x,null),ve(o,c,"formEncType",x.formEncType,x,null),ve(o,c,"formMethod",x.formMethod,x,null),ve(o,c,"formTarget",x.formTarget,x,null)):(ve(o,c,"encType",x.encType,x,null),ve(o,c,"method",x.method,x,null),ve(o,c,"target",x.target,x,null)));if(g==null||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=dd(""+g),o.setAttribute(d,g);break;case"onClick":g!=null&&(o.onclick=ef);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"multiple":o.multiple=g&&typeof g!="function"&&typeof g!="symbol";break;case"muted":o.muted=g&&typeof g!="function"&&typeof g!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(g==null||typeof g=="function"||typeof g=="boolean"||typeof g=="symbol"){o.removeAttribute("xlink:href");break}d=dd(""+g),o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",d);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""+g):o.removeAttribute(d);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":g&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""):o.removeAttribute(d);break;case"capture":case"download":g===!0?o.setAttribute(d,""):g!==!1&&g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,g):o.removeAttribute(d);break;case"cols":case"rows":case"size":case"span":g!=null&&typeof g!="function"&&typeof g!="symbol"&&!isNaN(g)&&1<=g?o.setAttribute(d,g):o.removeAttribute(d);break;case"rowSpan":case"start":g==null||typeof g=="function"||typeof g=="symbol"||isNaN(g)?o.removeAttribute(d):o.setAttribute(d,g);break;case"popover":ie("beforetoggle",o),ie("toggle",o),ld(o,"popover",g);break;case"xlinkActuate":Za(o,"http://www.w3.org/1999/xlink","xlink:actuate",g);break;case"xlinkArcrole":Za(o,"http://www.w3.org/1999/xlink","xlink:arcrole",g);break;case"xlinkRole":Za(o,"http://www.w3.org/1999/xlink","xlink:role",g);break;case"xlinkShow":Za(o,"http://www.w3.org/1999/xlink","xlink:show",g);break;case"xlinkTitle":Za(o,"http://www.w3.org/1999/xlink","xlink:title",g);break;case"xlinkType":Za(o,"http://www.w3.org/1999/xlink","xlink:type",g);break;case"xmlBase":Za(o,"http://www.w3.org/XML/1998/namespace","xml:base",g);break;case"xmlLang":Za(o,"http://www.w3.org/XML/1998/namespace","xml:lang",g);break;case"xmlSpace":Za(o,"http://www.w3.org/XML/1998/namespace","xml:space",g);break;case"is":ld(o,"is",g);break;case"innerText":case"textContent":break;default:(!(2<d.length)||d[0]!=="o"&&d[0]!=="O"||d[1]!=="n"&&d[1]!=="N")&&(d=mO.get(d)||d,ld(o,d,g))}}function rb(o,c,d,g,x,N){switch(d){case"style":Sw(o,g,N);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"children":typeof g=="string"?Ho(o,g):(typeof g=="number"||typeof g=="bigint")&&Ho(o,""+g);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"onClick":g!=null&&(o.onclick=ef);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!fw.hasOwnProperty(d))t:{if(d[0]==="o"&&d[1]==="n"&&(x=d.endsWith("Capture"),c=d.slice(2,x?d.length-7:void 0),N=o[ns]||null,N=N!=null?N[d]:null,typeof N=="function"&&o.removeEventListener(c,N,x),typeof g=="function")){typeof N!="function"&&N!==null&&(d in o?o[d]=null:o.hasAttribute(d)&&o.removeAttribute(d)),o.addEventListener(c,g,x);break t}d in o?o[d]=g:g===!0?o.setAttribute(d,""):ld(o,d,g)}}}function Dn(o,c,d){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ie("error",o),ie("load",o);var g=!1,x=!1,N;for(N in d)if(d.hasOwnProperty(N)){var E=d[N];if(E!=null)switch(N){case"src":g=!0;break;case"srcSet":x=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:ve(o,c,N,E,d,null)}}x&&ve(o,c,"srcSet",d.srcSet,d,null),g&&ve(o,c,"src",d.src,d,null);return;case"input":ie("invalid",o);var z=N=E=x=null,V=null,J=null;for(g in d)if(d.hasOwnProperty(g)){var pt=d[g];if(pt!=null)switch(g){case"name":x=pt;break;case"type":E=pt;break;case"checked":V=pt;break;case"defaultChecked":J=pt;break;case"value":N=pt;break;case"defaultValue":z=pt;break;case"children":case"dangerouslySetInnerHTML":if(pt!=null)throw Error(s(137,c));break;default:ve(o,c,g,pt,d,null)}}bw(o,N,z,V,J,E,x,!1),cd(o);return;case"select":ie("invalid",o),g=E=N=null;for(x in d)if(d.hasOwnProperty(x)&&(z=d[x],z!=null))switch(x){case"value":N=z;break;case"defaultValue":E=z;break;case"multiple":g=z;default:ve(o,c,x,z,d,null)}c=N,d=E,o.multiple=!!g,c!=null?Go(o,!!g,c,!1):d!=null&&Go(o,!!g,d,!0);return;case"textarea":ie("invalid",o),N=x=g=null;for(E in d)if(d.hasOwnProperty(E)&&(z=d[E],z!=null))switch(E){case"value":g=z;break;case"defaultValue":x=z;break;case"children":N=z;break;case"dangerouslySetInnerHTML":if(z!=null)throw Error(s(91));break;default:ve(o,c,E,z,d,null)}vw(o,g,x,N),cd(o);return;case"option":for(V in d)if(d.hasOwnProperty(V)&&(g=d[V],g!=null))switch(V){case"selected":o.selected=g&&typeof g!="function"&&typeof g!="symbol";break;default:ve(o,c,V,g,d,null)}return;case"dialog":ie("cancel",o),ie("close",o);break;case"iframe":case"object":ie("load",o);break;case"video":case"audio":for(g=0;g<Ju.length;g++)ie(Ju[g],o);break;case"image":ie("error",o),ie("load",o);break;case"details":ie("toggle",o);break;case"embed":case"source":case"link":ie("error",o),ie("load",o);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(J in d)if(d.hasOwnProperty(J)&&(g=d[J],g!=null))switch(J){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:ve(o,c,J,g,d,null)}return;default:if(wg(c)){for(pt in d)d.hasOwnProperty(pt)&&(g=d[pt],g!==void 0&&rb(o,c,pt,g,d,void 0));return}}for(z in d)d.hasOwnProperty(z)&&(g=d[z],g!=null&&ve(o,c,z,g,d,null))}function P_(o,c,d,g){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var x=null,N=null,E=null,z=null,V=null,J=null,pt=null;for(ft in d){var vt=d[ft];if(d.hasOwnProperty(ft)&&vt!=null)switch(ft){case"checked":break;case"value":break;case"defaultValue":V=vt;default:g.hasOwnProperty(ft)||ve(o,c,ft,null,g,vt)}}for(var ct in g){var ft=g[ct];if(vt=d[ct],g.hasOwnProperty(ct)&&(ft!=null||vt!=null))switch(ct){case"type":N=ft;break;case"name":x=ft;break;case"checked":J=ft;break;case"defaultChecked":pt=ft;break;case"value":E=ft;break;case"defaultValue":z=ft;break;case"children":case"dangerouslySetInnerHTML":if(ft!=null)throw Error(s(137,c));break;default:ft!==vt&&ve(o,c,ct,ft,g,vt)}}xg(o,E,z,V,J,pt,N,x);return;case"select":ft=E=z=ct=null;for(N in d)if(V=d[N],d.hasOwnProperty(N)&&V!=null)switch(N){case"value":break;case"multiple":ft=V;default:g.hasOwnProperty(N)||ve(o,c,N,null,g,V)}for(x in g)if(N=g[x],V=d[x],g.hasOwnProperty(x)&&(N!=null||V!=null))switch(x){case"value":ct=N;break;case"defaultValue":z=N;break;case"multiple":E=N;default:N!==V&&ve(o,c,x,N,g,V)}c=z,d=E,g=ft,ct!=null?Go(o,!!d,ct,!1):!!g!=!!d&&(c!=null?Go(o,!!d,c,!0):Go(o,!!d,d?[]:"",!1));return;case"textarea":ft=ct=null;for(z in d)if(x=d[z],d.hasOwnProperty(z)&&x!=null&&!g.hasOwnProperty(z))switch(z){case"value":break;case"children":break;default:ve(o,c,z,null,g,x)}for(E in g)if(x=g[E],N=d[E],g.hasOwnProperty(E)&&(x!=null||N!=null))switch(E){case"value":ct=x;break;case"defaultValue":ft=x;break;case"children":break;case"dangerouslySetInnerHTML":if(x!=null)throw Error(s(91));break;default:x!==N&&ve(o,c,E,x,g,N)}xw(o,ct,ft);return;case"option":for(var _t in d)if(ct=d[_t],d.hasOwnProperty(_t)&&ct!=null&&!g.hasOwnProperty(_t))switch(_t){case"selected":o.selected=!1;break;default:ve(o,c,_t,null,g,ct)}for(V in g)if(ct=g[V],ft=d[V],g.hasOwnProperty(V)&&ct!==ft&&(ct!=null||ft!=null))switch(V){case"selected":o.selected=ct&&typeof ct!="function"&&typeof ct!="symbol";break;default:ve(o,c,V,ct,g,ft)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var Ut in d)ct=d[Ut],d.hasOwnProperty(Ut)&&ct!=null&&!g.hasOwnProperty(Ut)&&ve(o,c,Ut,null,g,ct);for(J in g)if(ct=g[J],ft=d[J],g.hasOwnProperty(J)&&ct!==ft&&(ct!=null||ft!=null))switch(J){case"children":case"dangerouslySetInnerHTML":if(ct!=null)throw Error(s(137,c));break;default:ve(o,c,J,ct,g,ft)}return;default:if(wg(c)){for(var We in d)ct=d[We],d.hasOwnProperty(We)&&ct!==void 0&&!g.hasOwnProperty(We)&&rb(o,c,We,void 0,g,ct);for(pt in g)ct=g[pt],ft=d[pt],!g.hasOwnProperty(pt)||ct===ft||ct===void 0&&ft===void 0||rb(o,c,pt,ct,g,ft);return}}for(var st in d)ct=d[st],d.hasOwnProperty(st)&&ct!=null&&!g.hasOwnProperty(st)&&ve(o,c,st,null,g,ct);for(vt in g)ct=g[vt],ft=d[vt],!g.hasOwnProperty(vt)||ct===ft||ct==null&&ft==null||ve(o,c,vt,ct,g,ft)}var ib=null,ob=null;function nf(o){return o.nodeType===9?o:o.ownerDocument}function fC(o){switch(o){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function pC(o,c){if(o===0)switch(c){case"svg":return 1;case"math":return 2;default:return 0}return o===1&&c==="foreignObject"?0:o}function lb(o,c){return o==="textarea"||o==="noscript"||typeof c.children=="string"||typeof c.children=="number"||typeof c.children=="bigint"||typeof c.dangerouslySetInnerHTML=="object"&&c.dangerouslySetInnerHTML!==null&&c.dangerouslySetInnerHTML.__html!=null}var ub=null;function U_(){var o=window.event;return o&&o.type==="popstate"?o===ub?!1:(ub=o,!0):(ub=null,!1)}var mC=typeof setTimeout=="function"?setTimeout:void 0,W_=typeof clearTimeout=="function"?clearTimeout:void 0,gC=typeof Promise=="function"?Promise:void 0,G_=typeof queueMicrotask=="function"?queueMicrotask:typeof gC<"u"?function(o){return gC.resolve(null).then(o).catch(H_)}:mC;function H_(o){setTimeout(function(){throw o})}function cb(o,c){var d=c,g=0;do{var x=d.nextSibling;if(o.removeChild(d),x&&x.nodeType===8)if(d=x.data,d==="/$"){if(g===0){o.removeChild(x),lc(c);return}g--}else d!=="$"&&d!=="$?"&&d!=="$!"||g++;d=x}while(d);lc(c)}function hb(o){var c=o.firstChild;for(c&&c.nodeType===10&&(c=c.nextSibling);c;){var d=c;switch(c=c.nextSibling,d.nodeName){case"HTML":case"HEAD":case"BODY":hb(d),bg(d);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(d.rel.toLowerCase()==="stylesheet")continue}o.removeChild(d)}}function q_(o,c,d,g){for(;o.nodeType===1;){var x=d;if(o.nodeName.toLowerCase()!==c.toLowerCase()){if(!g&&(o.nodeName!=="INPUT"||o.type!=="hidden"))break}else if(g){if(!o[gu])switch(c){case"meta":if(!o.hasAttribute("itemprop"))break;return o;case"link":if(N=o.getAttribute("rel"),N==="stylesheet"&&o.hasAttribute("data-precedence"))break;if(N!==x.rel||o.getAttribute("href")!==(x.href==null?null:x.href)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin)||o.getAttribute("title")!==(x.title==null?null:x.title))break;return o;case"style":if(o.hasAttribute("data-precedence"))break;return o;case"script":if(N=o.getAttribute("src"),(N!==(x.src==null?null:x.src)||o.getAttribute("type")!==(x.type==null?null:x.type)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin))&&N&&o.hasAttribute("async")&&!o.hasAttribute("itemprop"))break;return o;default:return o}}else if(c==="input"&&o.type==="hidden"){var N=x.name==null?null:""+x.name;if(x.type==="hidden"&&o.getAttribute("name")===N)return o}else return o;if(o=ma(o.nextSibling),o===null)break}return null}function j_(o,c,d){if(c==="")return null;for(;o.nodeType!==3;)if((o.nodeType!==1||o.nodeName!=="INPUT"||o.type!=="hidden")&&!d||(o=ma(o.nextSibling),o===null))return null;return o}function ma(o){for(;o!=null;o=o.nextSibling){var c=o.nodeType;if(c===1||c===3)break;if(c===8){if(c=o.data,c==="$"||c==="$!"||c==="$?"||c==="F!"||c==="F")break;if(c==="/$")return null}}return o}function yC(o){o=o.previousSibling;for(var c=0;o;){if(o.nodeType===8){var d=o.data;if(d==="$"||d==="$!"||d==="$?"){if(c===0)return o;c--}else d==="/$"&&c++}o=o.previousSibling}return null}function bC(o,c,d){switch(c=nf(d),o){case"html":if(o=c.documentElement,!o)throw Error(s(452));return o;case"head":if(o=c.head,!o)throw Error(s(453));return o;case"body":if(o=c.body,!o)throw Error(s(454));return o;default:throw Error(s(451))}}var qs=new Map,xC=new Set;function sf(o){return typeof o.getRootNode=="function"?o.getRootNode():o.ownerDocument}var dr=ut.d;ut.d={f:X_,r:K_,D:Y_,C:Z_,L:Q_,m:J_,X:eF,S:tF,M:nF};function X_(){var o=dr.f(),c=Kd();return o||c}function K_(o){var c=Po(o);c!==null&&c.tag===5&&c.type==="form"?qS(c):dr.r(o)}var bl=typeof document>"u"?null:document;function vC(o,c,d){var g=bl;if(g&&typeof c=="string"&&c){var x=Ls(c);x='link[rel="'+o+'"][href="'+x+'"]',typeof d=="string"&&(x+='[crossorigin="'+d+'"]'),xC.has(x)||(xC.add(x),o={rel:o,crossOrigin:d,href:c},g.querySelector(x)===null&&(c=g.createElement("link"),Dn(c,"link",o),yn(c),g.head.appendChild(c)))}}function Y_(o){dr.D(o),vC("dns-prefetch",o,null)}function Z_(o,c){dr.C(o,c),vC("preconnect",o,c)}function Q_(o,c,d){dr.L(o,c,d);var g=bl;if(g&&o&&c){var x='link[rel="preload"][as="'+Ls(c)+'"]';c==="image"&&d&&d.imageSrcSet?(x+='[imagesrcset="'+Ls(d.imageSrcSet)+'"]',typeof d.imageSizes=="string"&&(x+='[imagesizes="'+Ls(d.imageSizes)+'"]')):x+='[href="'+Ls(o)+'"]';var N=x;switch(c){case"style":N=xl(o);break;case"script":N=vl(o)}qs.has(N)||(o=O({rel:"preload",href:c==="image"&&d&&d.imageSrcSet?void 0:o,as:c},d),qs.set(N,o),g.querySelector(x)!==null||c==="style"&&g.querySelector(ec(N))||c==="script"&&g.querySelector(nc(N))||(c=g.createElement("link"),Dn(c,"link",o),yn(c),g.head.appendChild(c)))}}function J_(o,c){dr.m(o,c);var d=bl;if(d&&o){var g=c&&typeof c.as=="string"?c.as:"script",x='link[rel="modulepreload"][as="'+Ls(g)+'"][href="'+Ls(o)+'"]',N=x;switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":N=vl(o)}if(!qs.has(N)&&(o=O({rel:"modulepreload",href:o},c),qs.set(N,o),d.querySelector(x)===null)){switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(d.querySelector(nc(N)))return}g=d.createElement("link"),Dn(g,"link",o),yn(g),d.head.appendChild(g)}}}function tF(o,c,d){dr.S(o,c,d);var g=bl;if(g&&o){var x=Uo(g).hoistableStyles,N=xl(o);c=c||"default";var E=x.get(N);if(!E){var z={loading:0,preload:null};if(E=g.querySelector(ec(N)))z.loading=5;else{o=O({rel:"stylesheet",href:o,"data-precedence":c},d),(d=qs.get(N))&&db(o,d);var V=E=g.createElement("link");yn(V),Dn(V,"link",o),V._p=new Promise(function(J,pt){V.onload=J,V.onerror=pt}),V.addEventListener("load",function(){z.loading|=1}),V.addEventListener("error",function(){z.loading|=2}),z.loading|=4,af(E,c,g)}E={type:"stylesheet",instance:E,count:1,state:z},x.set(N,E)}}}function eF(o,c){dr.X(o,c);var d=bl;if(d&&o){var g=Uo(d).hoistableScripts,x=vl(o),N=g.get(x);N||(N=d.querySelector(nc(x)),N||(o=O({src:o,async:!0},c),(c=qs.get(x))&&fb(o,c),N=d.createElement("script"),yn(N),Dn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function nF(o,c){dr.M(o,c);var d=bl;if(d&&o){var g=Uo(d).hoistableScripts,x=vl(o),N=g.get(x);N||(N=d.querySelector(nc(x)),N||(o=O({src:o,async:!0,type:"module"},c),(c=qs.get(x))&&fb(o,c),N=d.createElement("script"),yn(N),Dn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function wC(o,c,d,g){var x=(x=ne.current)?sf(x):null;if(!x)throw Error(s(446));switch(o){case"meta":case"title":return null;case"style":return typeof d.precedence=="string"&&typeof d.href=="string"?(c=xl(d.href),d=Uo(x).hoistableStyles,g=d.get(c),g||(g={type:"style",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};case"link":if(d.rel==="stylesheet"&&typeof d.href=="string"&&typeof d.precedence=="string"){o=xl(d.href);var N=Uo(x).hoistableStyles,E=N.get(o);if(E||(x=x.ownerDocument||x,E={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},N.set(o,E),(N=x.querySelector(ec(o)))&&!N._p&&(E.instance=N,E.state.loading=5),qs.has(o)||(d={rel:"preload",as:"style",href:d.href,crossOrigin:d.crossOrigin,integrity:d.integrity,media:d.media,hrefLang:d.hrefLang,referrerPolicy:d.referrerPolicy},qs.set(o,d),N||sF(x,o,d,E.state))),c&&g===null)throw Error(s(528,""));return E}if(c&&g!==null)throw Error(s(529,""));return null;case"script":return c=d.async,d=d.src,typeof d=="string"&&c&&typeof c!="function"&&typeof c!="symbol"?(c=vl(d),d=Uo(x).hoistableScripts,g=d.get(c),g||(g={type:"script",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,o))}}function xl(o){return'href="'+Ls(o)+'"'}function ec(o){return'link[rel="stylesheet"]['+o+"]"}function SC(o){return O({},o,{"data-precedence":o.precedence,precedence:null})}function sF(o,c,d,g){o.querySelector('link[rel="preload"][as="style"]['+c+"]")?g.loading=1:(c=o.createElement("link"),g.preload=c,c.addEventListener("load",function(){return g.loading|=1}),c.addEventListener("error",function(){return g.loading|=2}),Dn(c,"link",d),yn(c),o.head.appendChild(c))}function vl(o){return'[src="'+Ls(o)+'"]'}function nc(o){return"script[async]"+o}function NC(o,c,d){if(c.count++,c.instance===null)switch(c.type){case"style":var g=o.querySelector('style[data-href~="'+Ls(d.href)+'"]');if(g)return c.instance=g,yn(g),g;var x=O({},d,{"data-href":d.href,"data-precedence":d.precedence,href:null,precedence:null});return g=(o.ownerDocument||o).createElement("style"),yn(g),Dn(g,"style",x),af(g,d.precedence,o),c.instance=g;case"stylesheet":x=xl(d.href);var N=o.querySelector(ec(x));if(N)return c.state.loading|=4,c.instance=N,yn(N),N;g=SC(d),(x=qs.get(x))&&db(g,x),N=(o.ownerDocument||o).createElement("link"),yn(N);var E=N;return E._p=new Promise(function(z,V){E.onload=z,E.onerror=V}),Dn(N,"link",g),c.state.loading|=4,af(N,d.precedence,o),c.instance=N;case"script":return N=vl(d.src),(x=o.querySelector(nc(N)))?(c.instance=x,yn(x),x):(g=d,(x=qs.get(N))&&(g=O({},d),fb(g,x)),o=o.ownerDocument||o,x=o.createElement("script"),yn(x),Dn(x,"link",g),o.head.appendChild(x),c.instance=x);case"void":return null;default:throw Error(s(443,c.type))}else c.type==="stylesheet"&&(c.state.loading&4)===0&&(g=c.instance,c.state.loading|=4,af(g,d.precedence,o));return c.instance}function af(o,c,d){for(var g=d.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),x=g.length?g[g.length-1]:null,N=x,E=0;E<g.length;E++){var z=g[E];if(z.dataset.precedence===c)N=z;else if(N!==x)break}N?N.parentNode.insertBefore(o,N.nextSibling):(c=d.nodeType===9?d.head:d,c.insertBefore(o,c.firstChild))}function db(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.title==null&&(o.title=c.title)}function fb(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.integrity==null&&(o.integrity=c.integrity)}var rf=null;function CC(o,c,d){if(rf===null){var g=new Map,x=rf=new Map;x.set(d,g)}else x=rf,g=x.get(d),g||(g=new Map,x.set(d,g));if(g.has(o))return g;for(g.set(o,null),d=d.getElementsByTagName(o),x=0;x<d.length;x++){var N=d[x];if(!(N[gu]||N[Mn]||o==="link"&&N.getAttribute("rel")==="stylesheet")&&N.namespaceURI!=="http://www.w3.org/2000/svg"){var E=N.getAttribute(c)||"";E=o+E;var z=g.get(E);z?z.push(N):g.set(E,[N])}}return g}function TC(o,c,d){o=o.ownerDocument||o,o.head.insertBefore(d,c==="title"?o.querySelector("head > title"):null)}function aF(o,c,d){if(d===1||c.itemProp!=null)return!1;switch(o){case"meta":case"title":return!0;case"style":if(typeof c.precedence!="string"||typeof c.href!="string"||c.href==="")break;return!0;case"link":if(typeof c.rel!="string"||typeof c.href!="string"||c.href===""||c.onLoad||c.onError)break;switch(c.rel){case"stylesheet":return o=c.disabled,typeof c.precedence=="string"&&o==null;default:return!0}case"script":if(c.async&&typeof c.async!="function"&&typeof c.async!="symbol"&&!c.onLoad&&!c.onError&&c.src&&typeof c.src=="string")return!0}return!1}function $C(o){return!(o.type==="stylesheet"&&(o.state.loading&3)===0)}var sc=null;function rF(){}function iF(o,c,d){if(sc===null)throw Error(s(475));var g=sc;if(c.type==="stylesheet"&&(typeof d.media!="string"||matchMedia(d.media).matches!==!1)&&(c.state.loading&4)===0){if(c.instance===null){var x=xl(d.href),N=o.querySelector(ec(x));if(N){o=N._p,o!==null&&typeof o=="object"&&typeof o.then=="function"&&(g.count++,g=of.bind(g),o.then(g,g)),c.state.loading|=4,c.instance=N,yn(N);return}N=o.ownerDocument||o,d=SC(d),(x=qs.get(x))&&db(d,x),N=N.createElement("link"),yn(N);var E=N;E._p=new Promise(function(z,V){E.onload=z,E.onerror=V}),Dn(N,"link",d),c.instance=N}g.stylesheets===null&&(g.stylesheets=new Map),g.stylesheets.set(c,o),(o=c.state.preload)&&(c.state.loading&3)===0&&(g.count++,c=of.bind(g),o.addEventListener("load",c),o.addEventListener("error",c))}}function oF(){if(sc===null)throw Error(s(475));var o=sc;return o.stylesheets&&o.count===0&&pb(o,o.stylesheets),0<o.count?function(c){var d=setTimeout(function(){if(o.stylesheets&&pb(o,o.stylesheets),o.unsuspend){var g=o.unsuspend;o.unsuspend=null,g()}},6e4);return o.unsuspend=c,function(){o.unsuspend=null,clearTimeout(d)}}:null}function of(){if(this.count--,this.count===0){if(this.stylesheets)pb(this,this.stylesheets);else if(this.unsuspend){var o=this.unsuspend;this.unsuspend=null,o()}}}var lf=null;function pb(o,c){o.stylesheets=null,o.unsuspend!==null&&(o.count++,lf=new Map,c.forEach(lF,o),lf=null,of.call(o))}function lF(o,c){if(!(c.state.loading&4)){var d=lf.get(o);if(d)var g=d.get(null);else{d=new Map,lf.set(o,d);for(var x=o.querySelectorAll("link[data-precedence],style[data-precedence]"),N=0;N<x.length;N++){var E=x[N];(E.nodeName==="LINK"||E.getAttribute("media")!=="not all")&&(d.set(E.dataset.precedence,E),g=E)}g&&d.set(null,g)}x=c.instance,E=x.getAttribute("data-precedence"),N=d.get(E)||g,N===g&&d.set(null,x),d.set(E,x),this.count++,g=of.bind(this),x.addEventListener("load",g),x.addEventListener("error",g),N?N.parentNode.insertBefore(x,N.nextSibling):(o=o.nodeType===9?o.head:o,o.insertBefore(x,o.firstChild)),c.state.loading|=4}}var ac={$$typeof:y,Provider:null,Consumer:null,_currentValue:mt,_currentValue2:mt,_threadCount:0};function uF(o,c,d,g,x,N,E,z){this.tag=1,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=gg(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gg(0),this.hiddenUpdates=gg(null),this.identifierPrefix=g,this.onUncaughtError=x,this.onCaughtError=N,this.onRecoverableError=E,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=z,this.incompleteTransitions=new Map}function kC(o,c,d,g,x,N,E,z,V,J,pt,vt){return o=new uF(o,c,d,E,z,V,J,vt),c=1,N===!0&&(c|=24),N=Gs(3,null,null,c),o.current=N,N.stateNode=o,c=qg(),c.refCount++,o.pooledCache=c,c.refCount++,N.memoizedState={element:g,isDehydrated:d,cache:c},$y(N),o}function IC(o){return o?(o=Qo,o):Qo}function EC(o,c,d,g,x,N){x=IC(x),g.context===null?g.context=x:g.pendingContext=x,g=Vr(c),g.payload={element:d},N=N===void 0?null:N,N!==null&&(g.callback=N),d=Pr(o,g,c),d!==null&&(Yn(d,o,c),Pu(d,o,c))}function AC(o,c){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<c?d:c}}function mb(o,c){AC(o,c),(o=o.alternate)&&AC(o,c)}function RC(o){if(o.tag===13){var c=Or(o,67108864);c!==null&&Yn(c,o,67108864),mb(o,67108864)}}var uf=!0;function cF(o,c,d,g){var x=D.T;D.T=null;var N=ut.p;try{ut.p=2,gb(o,c,d,g)}finally{ut.p=N,D.T=x}}function hF(o,c,d,g){var x=D.T;D.T=null;var N=ut.p;try{ut.p=8,gb(o,c,d,g)}finally{ut.p=N,D.T=x}}function gb(o,c,d,g){if(uf){var x=yb(g);if(x===null)ab(o,c,g,cf,d),OC(o,g);else if(fF(x,o,c,d,g))g.stopPropagation();else if(OC(o,g),c&4&&-1<dF.indexOf(o)){for(;x!==null;){var N=Po(x);if(N!==null)switch(N.tag){case 3:if(N=N.stateNode,N.current.memoizedState.isDehydrated){var E=Di(N.pendingLanes);if(E!==0){var z=N;for(z.pendingLanes|=2,z.entangledLanes|=2;E;){var V=1<<31-Ss(E);z.entanglements[1]|=V,E&=~V}_a(N),(Le&6)===0&&(qd=Ve()+500,Qu(0))}}break;case 13:z=Or(N,2),z!==null&&Yn(z,N,2),Kd(),mb(N,2)}if(N=yb(g),N===null&&ab(o,c,g,cf,d),N===x)break;x=N}x!==null&&g.stopPropagation()}else ab(o,c,g,null,d)}}function yb(o){return o=Ng(o),bb(o)}var cf=null;function bb(o){if(cf=null,o=Oi(o),o!==null){var c=Y(o);if(c===null)o=null;else{var d=c.tag;if(d===13){if(o=rt(c),o!==null)return o;o=null}else if(d===3){if(c.stateNode.current.memoizedState.isDehydrated)return c.tag===3?c.stateNode.containerInfo:null;o=null}else c!==o&&(o=null)}}return cf=o,null}function DC(o){switch(o){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ua()){case ca:return 2;case ha:return 8;case ws:case Ri:return 32;case Bo:return 268435456;default:return 32}default:return 32}}var xb=!1,Xr=null,Kr=null,Yr=null,rc=new Map,ic=new Map,Zr=[],dF="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function OC(o,c){switch(o){case"focusin":case"focusout":Xr=null;break;case"dragenter":case"dragleave":Kr=null;break;case"mouseover":case"mouseout":Yr=null;break;case"pointerover":case"pointerout":rc.delete(c.pointerId);break;case"gotpointercapture":case"lostpointercapture":ic.delete(c.pointerId)}}function oc(o,c,d,g,x,N){return o===null||o.nativeEvent!==N?(o={blockedOn:c,domEventName:d,eventSystemFlags:g,nativeEvent:N,targetContainers:[x]},c!==null&&(c=Po(c),c!==null&&RC(c)),o):(o.eventSystemFlags|=g,c=o.targetContainers,x!==null&&c.indexOf(x)===-1&&c.push(x),o)}function fF(o,c,d,g,x){switch(c){case"focusin":return Xr=oc(Xr,o,c,d,g,x),!0;case"dragenter":return Kr=oc(Kr,o,c,d,g,x),!0;case"mouseover":return Yr=oc(Yr,o,c,d,g,x),!0;case"pointerover":var N=x.pointerId;return rc.set(N,oc(rc.get(N)||null,o,c,d,g,x)),!0;case"gotpointercapture":return N=x.pointerId,ic.set(N,oc(ic.get(N)||null,o,c,d,g,x)),!0}return!1}function _C(o){var c=Oi(o.target);if(c!==null){var d=Y(c);if(d!==null){if(c=d.tag,c===13){if(c=rt(d),c!==null){o.blockedOn=c,oO(o.priority,function(){if(d.tag===13){var g=ks(),x=Or(d,g);x!==null&&Yn(x,d,g),mb(d,g)}});return}}else if(c===3&&d.stateNode.current.memoizedState.isDehydrated){o.blockedOn=d.tag===3?d.stateNode.containerInfo:null;return}}}o.blockedOn=null}function hf(o){if(o.blockedOn!==null)return!1;for(var c=o.targetContainers;0<c.length;){var d=yb(o.nativeEvent);if(d===null){d=o.nativeEvent;var g=new d.constructor(d.type,d);Sg=g,d.target.dispatchEvent(g),Sg=null}else return c=Po(d),c!==null&&RC(c),o.blockedOn=d,!1;c.shift()}return!0}function FC(o,c,d){hf(o)&&d.delete(c)}function pF(){xb=!1,Xr!==null&&hf(Xr)&&(Xr=null),Kr!==null&&hf(Kr)&&(Kr=null),Yr!==null&&hf(Yr)&&(Yr=null),rc.forEach(FC),ic.forEach(FC)}function df(o,c){o.blockedOn===c&&(o.blockedOn=null,xb||(xb=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,pF)))}var ff=null;function LC(o){ff!==o&&(ff=o,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){ff===o&&(ff=null);for(var c=0;c<o.length;c+=3){var d=o[c],g=o[c+1],x=o[c+2];if(typeof g!="function"){if(bb(g||d)===null)continue;break}var N=Po(d);N!==null&&(o.splice(c,3),c-=3,ly(N,{pending:!0,data:x,method:d.method,action:g},g,x))}}))}function lc(o){function c(V){return df(V,o)}Xr!==null&&df(Xr,o),Kr!==null&&df(Kr,o),Yr!==null&&df(Yr,o),rc.forEach(c),ic.forEach(c);for(var d=0;d<Zr.length;d++){var g=Zr[d];g.blockedOn===o&&(g.blockedOn=null)}for(;0<Zr.length&&(d=Zr[0],d.blockedOn===null);)_C(d),d.blockedOn===null&&Zr.shift();if(d=(o.ownerDocument||o).$$reactFormReplay,d!=null)for(g=0;g<d.length;g+=3){var x=d[g],N=d[g+1],E=x[ns]||null;if(typeof N=="function")E||LC(d);else if(E){var z=null;if(N&&N.hasAttribute("formAction")){if(x=N,E=N[ns]||null)z=E.formAction;else if(bb(x)!==null)continue}else z=E.action;typeof z=="function"?d[g+1]=z:(d.splice(g,3),g-=3),LC(d)}}}function vb(o){this._internalRoot=o}pf.prototype.render=vb.prototype.render=function(o){var c=this._internalRoot;if(c===null)throw Error(s(409));var d=c.current,g=ks();EC(d,g,o,c,null,null)},pf.prototype.unmount=vb.prototype.unmount=function(){var o=this._internalRoot;if(o!==null){this._internalRoot=null;var c=o.containerInfo;o.tag===0&&ml(),EC(o.current,2,null,o,null,null),Kd(),c[Vo]=null}};function pf(o){this._internalRoot=o}pf.prototype.unstable_scheduleHydration=function(o){if(o){var c=cw();o={blockedOn:null,target:o,priority:c};for(var d=0;d<Zr.length&&c!==0&&c<Zr[d].priority;d++);Zr.splice(d,0,o),d===0&&_C(o)}};var zC=t.version;if(zC!=="19.0.0")throw Error(s(527,zC,"19.0.0"));ut.findDOMNode=function(o){var c=o._reactInternals;if(c===void 0)throw typeof o.render=="function"?Error(s(188)):(o=Object.keys(o).join(","),Error(s(268,o)));return o=j(c),o=o!==null?lt(o):null,o=o===null?null:o.stateNode,o};var mF={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:D,findFiberByHostInstance:Oi,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var mf=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!mf.isDisabled&&mf.supportsFiber)try{Ea=mf.inject(mF),Xn=mf}catch{}}return cc.createRoot=function(o,c){if(!a(o))throw Error(s(299));var d=!1,g="",x=tN,N=eN,E=nN,z=null;return c!=null&&(c.unstable_strictMode===!0&&(d=!0),c.identifierPrefix!==void 0&&(g=c.identifierPrefix),c.onUncaughtError!==void 0&&(x=c.onUncaughtError),c.onCaughtError!==void 0&&(N=c.onCaughtError),c.onRecoverableError!==void 0&&(E=c.onRecoverableError),c.unstable_transitionCallbacks!==void 0&&(z=c.unstable_transitionCallbacks)),c=kC(o,1,!1,null,null,d,g,x,N,E,z,null),o[Vo]=c.current,sb(o.nodeType===8?o.parentNode:o),new vb(c)},cc.hydrateRoot=function(o,c,d){if(!a(o))throw Error(s(299));var g=!1,x="",N=tN,E=eN,z=nN,V=null,J=null;return d!=null&&(d.unstable_strictMode===!0&&(g=!0),d.identifierPrefix!==void 0&&(x=d.identifierPrefix),d.onUncaughtError!==void 0&&(N=d.onUncaughtError),d.onCaughtError!==void 0&&(E=d.onCaughtError),d.onRecoverableError!==void 0&&(z=d.onRecoverableError),d.unstable_transitionCallbacks!==void 0&&(V=d.unstable_transitionCallbacks),d.formState!==void 0&&(J=d.formState)),c=kC(o,1,!0,c,d??null,g,x,N,E,z,V,J),c.context=IC(null),d=c.current,g=ks(),x=Vr(g),x.callback=null,Pr(d,x,g),c.current.lanes=g,mu(c,g),_a(c),o[Vo]=c.current,sb(o),new pf(c)},cc.version="19.0.0",cc}var jC;function kF(){if(jC)return Nb.exports;jC=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),Nb.exports=$F(),Nb.exports}var IF=kF();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF=1e-7,AF=1e-4;class Z2{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class j0{refCount(t){return rs("refCount")}incRef(t){return rs("incRef")}timerAvailable(){return!0}time(t){return rs("time")}read(t){return rs("read")}readSync(t){return rs("readSync")}readToGPU(t,e){return rs("readToGPU")}numDataIds(){return rs("numDataIds")}disposeData(t,e){return rs("disposeData")}write(t,e,s){return rs("write")}move(t,e,s,a,r){return rs("move")}createTensorFromGPUData(t,e,s){return rs("createTensorFromGPUData")}memory(){return rs("memory")}floatPrecision(){return rs("floatPrecision")}epsilon(){return this.floatPrecision()===32?EF:AF}dispose(){return rs("dispose")}}function rs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Tl(n,t,e)}function po(n,t,e){return Math.max(n,Math.min(t,e))}function X0(n){return n%2===0?n:n+1}function Tl(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function DF(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function _(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function bs(n,t,e=""){_(te(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Kl(n){_(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ht(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function OF(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==null&&t[e]!==null&&n[e]!==t[e])return!1;return!0}function te(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function zl(n){return n%1===0}function Kb(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function El(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function XC(n,t=a=>0,e,s){return new Promise((a,r)=>{let i=0;const l=()=>{if(n()){a();return}i++;const u=t(i);if(e!=null&&i>=e){r();return}s!=null?s(l,u):setTimeout(l,u)};l()})}function Q2(n,t){let e=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)e*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const a=n.slice();return a[s]=t/e,a}function Xt(n,t){const e=t.length;return n=n==null?t.map((s,a)=>a):[].concat(n),_(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),_(n.every(s=>zl(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function xi(n,t){const e=[],s=[],a=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||a?null:Xt(t,n).sort();let i=0;for(let l=0;l<n.length;++l){if(r!=null){if(r[i]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(r[i]==null||r[i]>l)&&n[l]===1&&(e.push(n[l]),s.push(l)),r[i]<=l&&i++}n[l]!==1&&(e.push(n[l]),s.push(l))}return{newShape:e,keptDims:s}}function Cn(n,t){return Ge(n,t)}function Ge(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function _F(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function FF(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function J2(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Gf(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function LF(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Mc(n){return typeof n=="string"||n instanceof String}function zF(n){return typeof n=="boolean"}function Yb(n){return typeof n=="number"}function Yl(n){return Array.isArray(n)?Yl(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Yb(n)?"float32":Mc(n)?"string":zF(n)?"bool":"float32"}function Zb(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Qb(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Ft(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function t$(n,t,e,s=!1){const a=new Array;if(t.length===1){const r=t[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=e[n+i]}else{const r=t[0],i=t.slice(1),l=i.reduce((u,h)=>u*h)*(s?2:1);for(let u=0;u<r;u++)a[u]=t$(n+u*l,i,e,s)}return a}function ea(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((a,r)=>a*r)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return t$(0,n,t,e)}function MF(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function K0(n,t){const e=Fn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Fn(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function e$(n,t){const e=n.reduce((s,a)=>s*a,1);if(t==null||t==="float32")return ea(n,new Float32Array(e));if(t==="int32")return ea(n,new Int32Array(e));if(t==="bool")return ea(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ds(n){n.forEach(t=>{_(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Va(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let a=0;a<n.length-1;++a)s+=e[a]*n[a];return s}function Zl(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(n/e[a]),n-=s[a]*e[a];return s[s.length-1]=n,s}function mo(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC="tfjsflags";class BF{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=VF,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const a=this.urlFlags[t];at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${a}.`),this.set(t,a)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(mo(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);KC in t&&t[KC].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=UF(a,r)})}}function VF(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(PF(t,s[0],s[1]),s.join("="))),t}function PF(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function UF(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function at(){return n$}let n$=null;function WF(n){n$=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kb;function s$(){if(kb==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");kb=n}return kb}function GF(){const n=s$();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Y0(n,t){const e=GF();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const wp="Abs",Bc="Acos",Vc="Acosh",Ql="Add",Sp="AddN",Z0="All",Q0="Any",Np="ArgMax",Cp="ArgMin",Pc="Asin",Uc="Asinh",Wc="Atan",Gc="Atanh",Hc="Atan2",Tp="AvgPool",J0="AvgPoolGrad",$p="AvgPool3D",tx="AvgPool3DGrad",kp="BatchMatMul",Ip="BatchToSpaceND",ex="Bincount",Ep="BitwiseAnd",HF="BroadcastTo",nx="BroadcastArgs",qc="Cast",jc="Ceil",Xc="ClipByValue",sx="Complex",Ap="ComplexAbs",Rp="Concat",Dp="Conv2D",ax="Conv2DBackpropFilter",Op="Conv2DBackpropInput",_p="Conv3D",rx="Conv3DBackpropFilterV2",ix="Conv3DBackpropInputV2",Kc="Cos",Yc="Cosh",ox="Cumprod",Fp="Cumsum",lx="CropAndResize",ux="DenseBincount",cx="DepthToSpace",Lp="DepthwiseConv2dNative",hx="DepthwiseConv2dNativeBackpropFilter",dx="DepthwiseConv2dNativeBackpropInput",fx="Diag",zp="Dilation2D",Jb="Dilation2DBackpropInput",t0="Dilation2DBackpropFilter",qF="Draw",Zc="RealDiv",px="Einsum",Qc="Elu",mx="EluGrad",Jc="Erf",Mp="Equal",th="Exp",Bp="ExpandDims",eh="Expm1",gx="FFT",yx="Fill",bx="FlipLeftRight",nh="Floor",sh="FloorDiv",Vp="FusedBatchNorm",Pp="GatherV2",xx="GatherNd",Up="Greater",ah="GreaterEqual",rh="Identity",vx="IFFT",wx="Imag",ih="IsFinite",oh="IsInf",lh="IsNan",Wp="LeakyRelu",Gp="Less",Hp="LessEqual",Sx="LinSpace",uh="Log",ch="Log1p",qp="LogicalAnd",jp="LogicalNot",Xp="LogicalOr",jF="LogSoftmax",Kp="LRN",Nx="LRNGrad",Yp="Max",hh="Maximum",Zp="MaxPool",Cx="MaxPoolGrad",Qp="MaxPool3D",Tx="MaxPool3DGrad",$x="MaxPoolWithArgmax",Jp="Mean",tm="Min",dh="Minimum",em="MirrorPad",fh="Mod",kx="Multinomial",ph="Multiply",nm="Neg",sm="NotEqual",Ix="NonMaxSuppressionV3",Ex="NonMaxSuppressionV4",Ax="NonMaxSuppressionV5",am="OnesLike",rm="OneHot",im="Pack",om="PadV2",mh="Pow",lm="Prelu",um="Prod",Rx="RaggedGather",Dx="RaggedRange",Ox="RaggedTensorToTensor",_x="Range",Fx="Real",gh="Reciprocal",yh="Relu",cm="Reshape",hm="ResizeNearestNeighbor",Lx="ResizeNearestNeighborGrad",dm="ResizeBilinear",zx="ResizeBilinearGrad",bh="Relu6",fm="Reverse",xh="Round",vh="Rsqrt",Mx="ScatterNd",Bx="TensorScatterUpdate",Vx="SearchSorted",pm="Select",wh="Selu",mm="Slice",Sh="Sin",Nh="Sinh",Ch="Sign",Th="Sigmoid",$h="Softplus",kh="Sqrt",gm="Sum",ym="SpaceToBatchND",bm="SplitV",xm="Softmax",Px="SparseFillEmptyRows",Ux="SparseReshape",Wx="SparseSegmentMean",Gx="SparseSegmentSum",Hx="SparseToDense",Ih="SquaredDifference",qx="Square",vm="StaticRegexReplace",jx="StridedSlice",Xx="StringNGrams",Kx="StringSplit",Yx="StringToHashBucketFast",Eh="Sub",Ah="Tan",Rh="Tanh",Dh="Tile",Zx="TopK",Qx="Transform",Al="Transpose",Jx="Unique",wm="Unpack",Sm="UnsortedSegmentSum",Nm="ZerosLike",Oh="Step",e0="FromPixels",t1="RotateWithOffset",Hf="_FusedMatMul",qf="FusedConv2D",jf="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(...n){at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(...n)}function XF(...n){at().getBool("IS_TEST")||at().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xf=Y0("kernelRegistry",()=>new Map),n0=Y0("gradRegistry",()=>new Map);function s0(n,t){const e=r$(n,t);return Xf.get(e)}function YC(n){return n0.get(n)}function ZC(n){const t=Xf.entries(),e=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,i]=a,[l]=r.split("_");l===n&&e.push(i)}return e}function a$(n){const{kernelName:t,backendName:e}=n,s=r$(t,e);Xf.has(s)&&Is(`The kernel '${t}' for backend '${e}' is already registered`),Xf.set(s,n)}function KF(n){const{kernelName:t}=n;n0.has(t)&&at().getBool("DEBUG")&&Is(`Overriding the gradient for '${t}'`),n0.set(t,n)}function r$(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Ib,QC;function YF(){if(QC)return Ib;QC=1,Ib=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(O,A,W){this.low=O|0,this.high=A|0,this.unsigned=!!W}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(O){return(O&&O.__isLong__)===!0}t.isLong=e;var s={},a={};function r(O,A){var W,K,tt;return A?(O>>>=0,(tt=0<=O&&O<256)&&(K=a[O],K)?K:(W=l(O,(O|0)<0?-1:0,!0),tt&&(a[O]=W),W)):(O|=0,(tt=-128<=O&&O<128)&&(K=s[O],K)?K:(W=l(O,O<0?-1:0,!1),tt&&(s[O]=W),W))}t.fromInt=r;function i(O,A){if(isNaN(O))return A?C:S;if(A){if(O<0)return C;if(O>=b)return F}else{if(O<=-9223372036854776e3)return M;if(O+1>=v)return R}return O<0?i(-O,A).neg():l(O%y|0,O/y|0,A)}t.fromNumber=i;function l(O,A,W){return new t(O,A,W)}t.fromBits=l;var u=Math.pow;function h(O,A,W){if(O.length===0)throw Error("empty string");if(O==="NaN"||O==="Infinity"||O==="+Infinity"||O==="-Infinity")return S;if(typeof A=="number"?(W=A,A=!1):A=!!A,W=W||10,W<2||36<W)throw RangeError("radix");var K;if((K=O.indexOf("-"))>0)throw Error("interior hyphen");if(K===0)return h(O.substring(1),A,W).neg();for(var tt=i(u(W,8)),Q=S,P=0;P<O.length;P+=8){var et=Math.min(8,O.length-P),Y=parseInt(O.substring(P,P+et),W);if(et<8){var rt=i(u(W,et));Q=Q.mul(rt).add(i(Y))}else Q=Q.mul(tt),Q=Q.add(i(Y))}return Q.unsigned=A,Q}t.fromString=h;function f(O,A){return typeof O=="number"?i(O,A):typeof O=="string"?h(O,A):l(O.low,O.high,typeof A=="boolean"?A:O.unsigned)}t.fromValue=f;var p=65536,m=1<<24,y=p*p,b=y*y,v=b/2,w=r(m),S=r(0);t.ZERO=S;var C=r(0,!0);t.UZERO=C;var $=r(1);t.ONE=$;var T=r(1,!0);t.UONE=T;var I=r(-1);t.NEG_ONE=I;var R=l(-1,2147483647,!1);t.MAX_VALUE=R;var F=l(-1,-1,!0);t.MAX_UNSIGNED_VALUE=F;var M=l(0,-2147483648,!1);t.MIN_VALUE=M;var D=t.prototype;return D.toInt=function(){return this.unsigned?this.low>>>0:this.low},D.toNumber=function(){return this.unsigned?(this.high>>>0)*y+(this.low>>>0):this.high*y+(this.low>>>0)},D.toString=function(A){if(A=A||10,A<2||36<A)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(M)){var W=i(A),K=this.div(W),tt=K.mul(W).sub(this);return K.toString(A)+tt.toInt().toString(A)}else return"-"+this.neg().toString(A);for(var Q=i(u(A,6),this.unsigned),P=this,et="";;){var Y=P.div(Q),rt=P.sub(Y.mul(Q)).toInt()>>>0,B=rt.toString(A);if(P=Y,P.isZero())return B+et;for(;B.length<6;)B="0"+B;et=""+B+et}},D.getHighBits=function(){return this.high},D.getHighBitsUnsigned=function(){return this.high>>>0},D.getLowBits=function(){return this.low},D.getLowBitsUnsigned=function(){return this.low>>>0},D.getNumBitsAbs=function(){if(this.isNegative())return this.eq(M)?64:this.neg().getNumBitsAbs();for(var A=this.high!=0?this.high:this.low,W=31;W>0&&(A&1<<W)==0;W--);return this.high!=0?W+33:W+1},D.isZero=function(){return this.high===0&&this.low===0},D.eqz=D.isZero,D.isNegative=function(){return!this.unsigned&&this.high<0},D.isPositive=function(){return this.unsigned||this.high>=0},D.isOdd=function(){return(this.low&1)===1},D.isEven=function(){return(this.low&1)===0},D.equals=function(A){return e(A)||(A=f(A)),this.unsigned!==A.unsigned&&this.high>>>31===1&&A.high>>>31===1?!1:this.high===A.high&&this.low===A.low},D.eq=D.equals,D.notEquals=function(A){return!this.eq(A)},D.neq=D.notEquals,D.ne=D.notEquals,D.lessThan=function(A){return this.comp(A)<0},D.lt=D.lessThan,D.lessThanOrEqual=function(A){return this.comp(A)<=0},D.lte=D.lessThanOrEqual,D.le=D.lessThanOrEqual,D.greaterThan=function(A){return this.comp(A)>0},D.gt=D.greaterThan,D.greaterThanOrEqual=function(A){return this.comp(A)>=0},D.gte=D.greaterThanOrEqual,D.ge=D.greaterThanOrEqual,D.compare=function(A){if(e(A)||(A=f(A)),this.eq(A))return 0;var W=this.isNegative(),K=A.isNegative();return W&&!K?-1:!W&&K?1:this.unsigned?A.high>>>0>this.high>>>0||A.high===this.high&&A.low>>>0>this.low>>>0?-1:1:this.sub(A).isNegative()?-1:1},D.comp=D.compare,D.negate=function(){return!this.unsigned&&this.eq(M)?M:this.not().add($)},D.neg=D.negate,D.add=function(A){e(A)||(A=f(A));var W=this.high>>>16,K=this.high&65535,tt=this.low>>>16,Q=this.low&65535,P=A.high>>>16,et=A.high&65535,Y=A.low>>>16,rt=A.low&65535,B=0,j=0,lt=0,ot=0;return ot+=Q+rt,lt+=ot>>>16,ot&=65535,lt+=tt+Y,j+=lt>>>16,lt&=65535,j+=K+et,B+=j>>>16,j&=65535,B+=W+P,B&=65535,l(lt<<16|ot,B<<16|j,this.unsigned)},D.subtract=function(A){return e(A)||(A=f(A)),this.add(A.neg())},D.sub=D.subtract,D.multiply=function(A){if(this.isZero())return S;if(e(A)||(A=f(A)),n){var W=n.mul(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}if(A.isZero())return S;if(this.eq(M))return A.isOdd()?M:S;if(A.eq(M))return this.isOdd()?M:S;if(this.isNegative())return A.isNegative()?this.neg().mul(A.neg()):this.neg().mul(A).neg();if(A.isNegative())return this.mul(A.neg()).neg();if(this.lt(w)&&A.lt(w))return i(this.toNumber()*A.toNumber(),this.unsigned);var K=this.high>>>16,tt=this.high&65535,Q=this.low>>>16,P=this.low&65535,et=A.high>>>16,Y=A.high&65535,rt=A.low>>>16,B=A.low&65535,j=0,lt=0,ot=0,ut=0;return ut+=P*B,ot+=ut>>>16,ut&=65535,ot+=Q*B,lt+=ot>>>16,ot&=65535,ot+=P*rt,lt+=ot>>>16,ot&=65535,lt+=tt*B,j+=lt>>>16,lt&=65535,lt+=Q*rt,j+=lt>>>16,lt&=65535,lt+=P*Y,j+=lt>>>16,lt&=65535,j+=K*B+tt*rt+Q*Y+P*et,j&=65535,l(ot<<16|ut,j<<16|lt,this.unsigned)},D.mul=D.multiply,D.divide=function(A){if(e(A)||(A=f(A)),A.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&A.low===-1&&A.high===-1)return this;var W=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?C:S;var K,tt,Q;if(this.unsigned){if(A.unsigned||(A=A.toUnsigned()),A.gt(this))return C;if(A.gt(this.shru(1)))return T;Q=C}else{if(this.eq(M)){if(A.eq($)||A.eq(I))return M;if(A.eq(M))return $;var P=this.shr(1);return K=P.div(A).shl(1),K.eq(S)?A.isNegative()?$:I:(tt=this.sub(A.mul(K)),Q=K.add(tt.div(A)),Q)}else if(A.eq(M))return this.unsigned?C:S;if(this.isNegative())return A.isNegative()?this.neg().div(A.neg()):this.neg().div(A).neg();if(A.isNegative())return this.div(A.neg()).neg();Q=S}for(tt=this;tt.gte(A);){K=Math.max(1,Math.floor(tt.toNumber()/A.toNumber()));for(var et=Math.ceil(Math.log(K)/Math.LN2),Y=et<=48?1:u(2,et-48),rt=i(K),B=rt.mul(A);B.isNegative()||B.gt(tt);)K-=Y,rt=i(K,this.unsigned),B=rt.mul(A);rt.isZero()&&(rt=$),Q=Q.add(rt),tt=tt.sub(B)}return Q},D.div=D.divide,D.modulo=function(A){if(e(A)||(A=f(A)),n){var W=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}return this.sub(this.div(A).mul(A))},D.mod=D.modulo,D.rem=D.modulo,D.not=function(){return l(~this.low,~this.high,this.unsigned)},D.and=function(A){return e(A)||(A=f(A)),l(this.low&A.low,this.high&A.high,this.unsigned)},D.or=function(A){return e(A)||(A=f(A)),l(this.low|A.low,this.high|A.high,this.unsigned)},D.xor=function(A){return e(A)||(A=f(A)),l(this.low^A.low,this.high^A.high,this.unsigned)},D.shiftLeft=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low<<A,this.high<<A|this.low>>>32-A,this.unsigned):l(0,this.low<<A-32,this.unsigned)},D.shl=D.shiftLeft,D.shiftRight=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low>>>A|this.high<<32-A,this.high>>A,this.unsigned):l(this.high>>A-32,this.high>=0?0:-1,this.unsigned)},D.shr=D.shiftRight,D.shiftRightUnsigned=function(A){if(e(A)&&(A=A.toInt()),A&=63,A===0)return this;var W=this.high;if(A<32){var K=this.low;return l(K>>>A|W<<32-A,W>>>A,this.unsigned)}else return A===32?l(W,0,this.unsigned):l(W>>>A-32,0,this.unsigned)},D.shru=D.shiftRightUnsigned,D.shr_u=D.shiftRightUnsigned,D.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},D.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},D.toBytes=function(A){return A?this.toBytesLE():this.toBytesBE()},D.toBytesLE=function(){var A=this.high,W=this.low;return[W&255,W>>>8&255,W>>>16&255,W>>>24,A&255,A>>>8&255,A>>>16&255,A>>>24]},D.toBytesBE=function(){var A=this.high,W=this.low;return[A>>>24,A>>>16&255,A>>>8&255,A&255,W>>>24,W>>>16&255,W>>>8&255,W&255]},t.fromBytes=function(A,W,K){return K?t.fromBytesLE(A,W):t.fromBytesBE(A,W)},t.fromBytesLE=function(A,W){return new t(A[0]|A[1]<<8|A[2]<<16|A[3]<<24,A[4]|A[5]<<8|A[6]<<16|A[7]<<24,W)},t.fromBytesBE=function(A,W){return new t(A[4]<<24|A[5]<<16|A[6]<<8|A[7],A[0]<<24|A[1]<<16|A[2]<<8|A[3],W)},Ib}var o$=YF();const l$=Y2(o$),ZF=yF({__proto__:null,default:l$},[o$]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=l$||ZF;function Cm(n){return ao.fromString(n,!0,16)}const u$=Cm("c3a5c85c97cb3127"),so=Cm("b492b66fbe98f273"),Un=Cm("9ae16a3b2f90404f");function a0(n){return n.xor(n.shru(47))}function c$(n,t,e){const s=n.slice(t,t+e);return ao.fromBytes(Array.from(s),!0,!0)}function Ce(n,t){return c$(n,t,8)}function JC(n,t){return c$(n,t,4)}function dn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function si(n,t,e=Cm("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let a=t.xor(s).mul(e);return a=a.xor(a.shru(47)),a=a.mul(e),a}function QF(n,t,e,s,a,r){a=a.add(n),r=dn(r.add(a).add(s),21);const i=a;return a=a.add(t),a=a.add(e),r=r.add(dn(a,44)),[a.add(s),r.add(i)]}function gf(n,t,e,s){return QF(Ce(n,t),Ce(n,t+8),Ce(n,t+16),Ce(n,t+24),e,s)}function JF(n,t=n.length){if(t>=8){const e=Un.add(t*2),s=Ce(n,0).add(Un),a=Ce(n,t-8),r=dn(a,37).mul(e).add(s),i=dn(s,25).add(a).mul(e);return si(r,i,e)}if(t>=4){const e=Un.add(t*2),s=JC(n,0);return si(s.shl(3).add(t),JC(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],a=n[t-1],r=e+(s<<8),i=t+(a<<2);return a0(Un.mul(r).xor(u$.mul(i))).mul(Un)}return Un}function t3(n,t=n.length){const e=Un.add(t*2),s=Ce(n,0).mul(so),a=Ce(n,8),r=Ce(n,t-8).mul(e),i=Ce(n,t-16).mul(Un);return si(dn(s.add(a),43).add(dn(r,30)).add(i),s.add(dn(a.add(Un),18)).add(r),e)}function e3(n,t=n.length){const e=Un.add(t*2),s=Ce(n,0).mul(Un),a=Ce(n,8),r=Ce(n,t-8).mul(e),i=Ce(n,t-16).mul(Un),l=dn(s.add(a),43).add(dn(r,30)).add(i),u=si(l,s.add(dn(a.add(Un),18)).add(r),e),h=Ce(n,16).mul(e),f=Ce(n,24),p=l.add(Ce(n,t-32)).mul(e),m=u.add(Ce(n,t-24)).mul(e);return si(dn(h.add(f),43).add(dn(p,30)).add(m),h.add(dn(f.add(s),18)).add(p),e)}function n3(n,t=n.length){const e=ao.fromNumber(81,!0);if(t<=32)return t<=16?JF(n,t):t3(n,t);if(t<=64)return e3(n,t);let s=e,a=e.mul(so).add(113),r=a0(a.mul(Un).add(113)).mul(Un),i=[ao.UZERO,ao.UZERO],l=[ao.UZERO,ao.UZERO];s=s.mul(Un).add(Ce(n,0));let u=0;const h=(t-1>>6)*64,f=h+(t-1&63)-63;do s=dn(s.add(a).add(i[0]).add(Ce(n,u+8)),37).mul(so),a=dn(a.add(i[1]).add(Ce(n,u+48)),42).mul(so),s=s.xor(l[1]),a=a.add(i[0]).add(Ce(n,u+40)),r=dn(r.add(l[0]),33).mul(so),i=gf(n,u,i[1].mul(so),s.add(l[0])),l=gf(n,u+32,r.add(l[1]),a.add(Ce(n,u+16))),[r,s]=[s,r],u+=64;while(u!==h);const p=so.add(r.and(255).shl(1));return u=f,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),s=dn(s.add(a).add(i[0]).add(Ce(n,u+8)),37).mul(p),a=dn(a.add(i[1]).add(Ce(n,u+48)),42).mul(p),s=s.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add(Ce(n,u+40))),r=dn(r.add(l[0]),33).mul(p),i=gf(n,u,i[1].mul(p),s.add(l[0])),l=gf(n,u+32,r.add(l[1]),a.add(Ce(n,u+16))),[r,s]=[s,r],si(si(i[0],l[0],p).add(a0(a).mul(u$)).add(r),si(i[1],l[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(n,t){return t==="string"?ai(n):Eo([n],t)}function s3(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Eo(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=go(n)),at().getBool("DEBUG")&&_F(n,t),s3(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Zn(){return at().platform.now()}function a3(n,t){return at().platform.fetch(n,t)}function ai(n,t="utf-8"){return t=t||"utf-8",at().platform.encode(n,t)}function oi(n,t="utf-8"){return t=t||"utf-8",at().platform.decode(n,t)}function sa(n){return at().platform.isTypedArray!=null?at().platform.isTypedArray(n):i$(n)}function go(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||mo(n)||n==null||sa(n)&&e)t.push(n);else if(Array.isArray(n)||sa(n))for(let s=0;s<n.length;++s)go(n[s],t,e);else{let s=-1;for(const a of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)go(n[a],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r3{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new o3)}profileKernel(t,e,s){let a;const r=()=>{a=s()};let i;const l=Zn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const h of a)h.dataSync();i=Promise.resolve({kernelMs:Zn()-l})}if(at().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let h=0;h<a.length;h++){const f=a[h];f.data().then(p=>{i3(p,f.dtype,t)})}return{kernelName:t,outputs:a,inputs:e,timeMs:i.then(h=>h.kernelMs),extraInfo:i.then(h=>h.getExtraProfileInfo!=null?h.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:a,inputs:r,extraInfo:i}=t;s.forEach(l=>{Promise.all([l.data(),a,i]).then(u=>{this.logger.logKernelProfile(e,l,u[0],u[1],r,u[2])})})}}function i3(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const a=n[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${e}'`),!0}return!1}class o3{logKernelProfile(t,e,s,a,r,i){const l=typeof a=="number"?El(`${a}ms`,9):a.error,u=El(t,25),h=e.rank,f=e.size,p=El(e.shape.toString(),14);let m="";for(const y in r){const b=r[y];if(b!=null){const v=b.shape||e.shape,w=v.length;m+=`${y}: ${w}D ${w>0?v:""} `}}console.log(`%c${u}	%c${l}	%c${h}D ${p}	%c${f}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n,t,e){const s={},a={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const h=n[u],f=h.inputs;for(const p in f){const m=f[p];let y=!1;for(let b=0;b<t.length;b++)if(s[m.id]){h.outputs.forEach(v=>s[v.id]=!0),y=!0,a[h.id]=!0;break}if(y)break}}const r={};r[e.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const h=n[u],f=h.inputs;for(let p=0;p<h.outputs.length;p++)if(r[h.outputs[p].id]){for(const m in f)r[f[m].id]=!0,i[h.id]=!0;break}}const l=[];for(let u=0;u<n.length;u++){const h=n[u];if(a[h.id]&&i[h.id]){const f={};for(const m in h.inputs){const y=h.inputs[m];s[y.id]&&(f[m]=y)}const p=Object.assign({},h);p.inputs=f,p.outputs=h.outputs,l.push(p)}}return l}function u3(n,t,e,s){for(let a=t.length-1;a>=0;a--){const r=t[a],i=[];if(r.outputs.forEach(u=>{const h=n[u.id];h!=null?i.push(h):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const l=r.gradient(i);for(const u in r.inputs){if(!(u in l))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(l)}.`);const h=e(()=>l[u]());if(h.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${h.dtype}'`);const f=r.inputs[u];if(!te(h.shape,f.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${u}' has shape '${h.shape}', which does not match the shape of the input '${f.shape}'`);if(n[f.id]==null)n[f.id]=h;else{const p=n[f.id];n[f.id]=s(p,h),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT=20,hc=3,Eb=7;function c3(n,t,e,s){const a=Ft(t),r=h3(n,t,e,a),i=t.length,l=Df(n,t,e,a,r),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(l.map(h=>"    "+h).join(`
`)),u.join(`
`)}function h3(n,t,e,s){const a=ht(t),r=s[s.length-1],i=new Array(r).fill(0),l=t.length,u=e==="complex64"?yc(n):n;if(l>1)for(let h=0;h<a/r;h++){const f=h*r;for(let p=0;p<r;p++)i[p]=Math.max(i[p],gc(u[f+p],0,e).length)}return i}function gc(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Eb))} + ${parseFloat(n[1].toFixed(Eb))}j`:Mc(n)?s=`'${n}'`:e==="bool"?s=h$(n):s=parseFloat(n.toFixed(Eb)).toString(),El(s,t)}function h$(n){return n===0?"false":"true"}function Df(n,t,e,s,a,r=!0){const i=e==="complex64"?2:1,l=t[0],u=t.length;if(u===0){if(e==="complex64"){const v=yc(n);return[gc(v[0],0,e)]}return e==="bool"?[h$(n[0])]:[n[0].toString()]}if(u===1){if(l>tT){const w=hc*i;let S=Array.from(n.slice(0,w)),C=Array.from(n.slice((l-hc)*i,l*i));return e==="complex64"&&(S=yc(S),C=yc(C)),["["+S.map(($,T)=>gc($,a[T],e)).join(", ")+", ..., "+C.map(($,T)=>gc($,a[l-hc+T],e)).join(", ")+"]"]}return["["+(e==="complex64"?yc(n):Array.from(n)).map((w,S)=>gc(w,a[S],e)).join(", ")+"]"]}const h=t.slice(1),f=s.slice(1),p=s[0]*i,m=[];if(l>tT){for(let v=0;v<hc;v++){const w=v*p,S=w+p;m.push(...Df(n.slice(w,S),h,e,f,a,!1))}m.push("...");for(let v=l-hc;v<l;v++){const w=v*p,S=w+p;m.push(...Df(n.slice(w,S),h,e,f,a,v===l-1))}}else for(let v=0;v<l;v++){const w=v*p,S=w+p;m.push(...Df(n.slice(w,S),h,e,f,a,v===l-1))}const y=u===2?",":"";m[0]="["+(l>0?m[0]+y:"");for(let v=1;v<m.length-1;v++)m[v]=" "+m[v]+y;let b=`,
`;for(let v=2;v<u;v++)b+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":b),m}function yc(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class an{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ht(t),s!=null){const a=s.length;_(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ge(e,this.size),this.strides=Ft(t)}set(t,...e){e.length===0&&(e=[0]),_(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return ba().makeTensor(this.values,this.shape,this.dtype)}}let ba=null,$l=null;function d3(n){ba=n}function f3(n){$l=n}class Ie{constructor(t,e,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ht(t),this.strides=Ft(t),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return $l.buffer(this.shape,this.dtype,t)}bufferSync(){return $l.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return ea(this.shape,t,this.dtype==="complex64")}arraySync(){return ea(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=ba().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>oi(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),ba().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=ba().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>oi(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await ba().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ba().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return $l.print(this,t)}clone(){return this.throwIfDisposed(),$l.clone(this)}toString(t=!1){const e=this.dataSync();return c3(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),$l.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),ba().makeVariable(this,t,e,s)}}Object.defineProperty(Ie,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function dt(){return Y0("Tensor",()=>Ie)}dt();class Kf extends Ie{constructor(t,e,s,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!te(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ba().disposeTensor(this),this.dataId=t.dataId,ba().incRef(this,null)}dispose(){ba().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Kf,Symbol.hasInstance,{value:n=>n instanceof Ie&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var eT;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(eT||(eT={}));var r0;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(r0||(r0={}));var i0;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(i0||(i0={}));var o0;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(o0||(o0={}));var l0;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(l0||(l0={}));const p3={float32:o0,int32:r0,bool:i0,complex64:l0};function ds(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return p3[n][t]}function e1(n){return ds(n,"int32")}function d$(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function f$(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,t){if(n.dtype===t.dtype)return[n,t];const e=ds(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function m3(n,t){_(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function p$(n){const t=[];return m$(n,t,new Set),t}function m$(n,t,e){if(n==null)return;if(n instanceof Ie){t.push(n);return}if(!g3(n))return;const s=n;for(const a in s){const r=s[a];e.has(r)||(e.add(r),m$(r,t,e))}}function g3(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n){return n.kernelName!=null}class nT{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ml{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new nT}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Is(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new r3(this.backendInstance),!0}setupRegisteredKernels(){ZC(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){ZC(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof j0)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Is(`Initialization of backend ${t} failed`),Is(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Is(`Initialization of backend ${t} failed`),Is(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),a=s.backend,r=this.readSync(e),i=a.refCount(e);a.disposeData(e,!0),s.backend=t,t.move(e,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=e(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,e,s){t();try{const a=s();return e(),a}catch(a){throw e(),a}}nextTensorId(){return Ml.nextTensorId++}nextVariableId(){return Ml.nextVariableId++}clone(t){const e=H.runKernel(rh,{x:t}),s={x:t},a=i=>({x:()=>{const l="float32",u={x:i},h={dtype:l};return H.runKernel(qc,u,h)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[e],a,r,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(s0(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const a=this.backend.numDataIds();let r=0;s.forEach(u=>{r+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=a-e-r-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u;const h=Ab(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ab(t)){const{kernelName:b,inputs:v,attrs:w}=t;this.backendName==null&&this.backend;const S=s0(b,this.backendName);_(S!=null,()=>`Cannot find registered kernel '${b}' for backend '${this.backendName}'`),l=()=>{const C=this.backend.numDataIds();u=S.kernelFunc({inputs:v,attrs:w,backend:this.backend});const $=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(b,C,$);const T=$.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){const I=this.getTensorsForGradient(b,v,T);s=this.saveTensorsForBackwardMode(I)}return T}}else{const{forwardFunc:b}=t,v=w=>{a&&(s=w.map(S=>this.keep(this.clone(S))))};l=()=>{const w=this.backend.numDataIds();u=this.tidy(()=>b(this.backend,v));const S=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,w,S),S}}const{inputs:f,attrs:p}=t,m=Ab(t)?null:t.backwardsFunc;let y;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=l():(y=this.profiler.profileKernel(h,f,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),e=y.outputs)}),a&&this.addTapeNode(h,f,e,m,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:h,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(f).map(b=>f[b]!=null?f[b].shape:null),outputShapes:e.map(b=>b.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const a=YC(t);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(_(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(h=>e[h])):l=r.map(h=>e[h]);const u=s.filter((h,f)=>i[f]);return l.concat(u)}return[]}makeTensor(t,e,s,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=t;s==="string"&&Mc(t[0])&&(r=t.map(u=>ai(u)));const i=a.write(r,e,s),l=new Ie(e,s,i,this.nextTensorId());if(this.trackTensor(l,a),s==="string"){const u=this.state.tensorInfo.get(i),h=LF(r);this.state.numBytes+=h-u.bytes,u.bytes=h}return l}makeTensorFromDataId(t,e,s,a){s=s||"float32";const r={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:a,dtype:r}=t,i=new Ie(a,r,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));const r=new Kf(t,e,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Gf(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Kf||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Gf(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,a,r,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:r},u=YC(t);u!=null&&(a=u.gradFunc),a!=null&&(l.gradient=h=>(h=h.map((f,p)=>{if(f==null){const m=s[p],y=Fn(m.size,m.dtype);return this.makeTensor(y,m.shape,m.dtype)}return f}),a(h.length>1?h:h[0],r,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=p$(t),s=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(t,e,s,a=!1){if(_(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));_(r instanceof Ie,()=>"The result y returned by f() must be a tensor.");const i=l3(this.state.activeTape,e,r);if(!a&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[r.id]=s??y3(r.shape),u3(l,i,h=>this.tidy(h),b3);const u=e.map(h=>l[h.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(h=>{for(const f of h.saved)f.dispose()}),this.state.activeTape=null),{value:r,grads:u}})}customGrad(t){return _(Zb(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{_(e.every(l=>l instanceof Ie),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};e.forEach((l,u)=>{a[u]=l});const r=(l,u)=>(s=t(...e,u),_(s.value instanceof Ie,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),_(Zb(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(l,u)=>{const h=s.gradFunc(l,u),f=Array.isArray(h)?h:[h];_(f.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),_(f.every(m=>m instanceof Ie),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return f.forEach((m,y)=>{p[y]=()=>m}),p};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Zn(),s=await this.backend.time(t);return s.wallMs=Zn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new nT;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ml.nextTensorId=0;Ml.nextVariableId=0;function y3(n){const t=K0(ht(n),"float32");return H.makeTensor(t,n,"float32")}function g$(){const n=s$();if(n._tfengine==null){const t=new BF(n);n._tfengine=new Ml(t)}return WF(n._tfengine.ENV),d3(()=>n._tfengine),n._tfengine}const H=g$();function b3(n,t){const e={a:n,b:t};return H.runKernel(Ql,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(){return typeof navigator<"u"&&navigator!=null}function y$(n){if(n||x3()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b$(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ts=at();ts.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ts.registerFlag("IS_BROWSER",()=>b$());ts.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ts.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ts.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ts.registerFlag("PROD",()=>!1);ts.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ts.getBool("DEBUG"));ts.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ts.registerFlag("IS_TEST",()=>!1);ts.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ts.getBool("DEBUG"));ts.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ts.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ts.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wi(n,t){let e=n;if(sa(n))return t==="string"?[]:[n.length];if(d$(n)){const a=n.channels||"RGBA";return[n.height,n.width*a.length]}else if(f$(n))return[n.buffer.size/(t==null?4:Gf(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||sa(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&at().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&x$(n,s,[]),s}function x$(n,t,e){if(e=e||[],!Array.isArray(n)&&!sa(n)){_(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}_(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),_(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let a=0;a<n.length;++a)x$(n[a],s,e.concat(a))}function sT(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function L(n,t,e,s="numeric"){if(n instanceof dt())return sT(s,n.dtype,t,e),n;let a=Yl(n);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),sT(s,a,t,e),n==null||!sa(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const r=wi(n,a);!sa(n)&&!Array.isArray(n)&&(n=[n]);const l=a!=="string"?Eo(n,a):go(n,[],!0);return H.makeTensor(l,r,a)}function Yf(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>L(r,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$="__op";function U(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+v$;const a=(...r)=>{H.startScope(e);try{const i=s(...r);return mo(i)&&console.error("Cannot return a Promise inside of tidy."),H.endScope(i),i}catch(i){throw H.endScope(null),i}};return Object.defineProperty(a,"name",{value:e,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(n,t){const e=L(n,"real","complex"),s=L(t,"imag","complex");bs(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:e,imag:s};return H.runKernel(sx,a)}const li=U({complex_:v3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(n,t,e,s){if(s==null)s=Yl(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(f$(n)||d$(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return H.backend.createTensorFromGPUData(n,t||e,s)}if(!sa(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ds(t);const a=ht(t),r=ht(e);_(a===r,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<e.length;++i){const l=e[i],u=i===e.length-1?l!==ht(t.slice(i)):!0;_(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!sa(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Eo(n,s):go(n,[],!0),H.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function va(n,t,e){const s=wi(n,e);return Si(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ka{static join(t){return new ka(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>sa(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const a=t[s];s!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=e+a.byteLength;this.shards.push({buffer:a,start:e,end:r}),e=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const a=e-t,r=new ArrayBuffer(a),i=new Uint8Array(r);let l=0;for(let u=s;u<this.shards.length;u++){const h=this.shards[u],p=t+l-h.start,m=l,b=Math.min(e,h.end)-h.start,v=new Uint8Array(h.buffer,p,b-p);if(i.set(v,m),l+=v.length,e<h.end)break}return r}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(a){return t<a.start?-1:t>=a.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=w3(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function w3(n,t){let e=0,s=n.length;for(;e<=s;){const a=Math.floor((s-e)/2)+e,r=t(n[a]);if(r===0)return a;r<0?s=a:e=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fa(){return H}function aT(){return H.memory()}function nt(n,t){return H.tidy(n,t)}function jt(n){p$(n).forEach(e=>e.dispose())}function fn(n){return H.keep(n)}function S3(n){return H.setBackend(n)}function n1(){return H.backendName}function w$(n,t,e=1){return H.registerBackend(n,t,e)}function S$(){return H.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui=4;async function u0(n,t){const e=[],s=[],a=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<a.length;++i){const l=a[i],u=Array.isArray(n)?n[i].tensor:n[l];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${u.dtype}`);const h={name:l,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const f=new Promise(async p=>{const m=await u.bytes(),y=m.reduce((w,S)=>w+S.length,0)+ui*m.length,b=new Uint8Array(y);let v=0;for(let w=0;w<m.length;w++){const S=m[w],C=new Uint8Array(new Uint32Array([S.length]).buffer);b.set(C,v),v+=ui,b.set(S,v),v+=S.length}p(b)});s.push(f)}else s.push(u.data());t!=null&&(h.group=t),e.push(h)}const r=await Promise.all(s);return{data:T3(r),specs:e}}function N$(n,t){const e=new ka(n),s={};let a=0;for(const r of t){const i=N3(r,(l,u)=>e.slice(a+l,a+u));s[r.name]=C$(r,e.slice(a,a+i)),a+=i}return s}function N3(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=yo[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=ui+new Uint32Array(t(a,a+ui))[0];return a}else s=yo[n.dtype];return e*s}async function C3(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=yo[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=ui+new Uint32Array(await t(a,a+ui))[0];return a}else s=yo[n.dtype];return e*s}function C$(n,t){const e=n.name,s=n.dtype,a=n.shape,r=ht(a);let i,l=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=yo[u.dtype],f=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=m*u.scale+u.min}}else if(u.dtype==="float16")i=R3()(f);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*h}else if(s==="string"){const u=ht(n.shape);i=[];for(let h=0;h<u;h++){const f=new Uint32Array(t.slice(l,l+ui))[0];l+=ui;const p=new Uint8Array(t.slice(l,l+f));i.push(p),l+=f}}else{const u=yo[s];if(s==="float32")i=new Float32Array(t);else if(s==="int32")i=new Int32Array(t);else if(s==="bool")i=new Uint8Array(t);else if(s==="complex64"){i=new Float32Array(t);const h=new Float32Array(i.length/2),f=new Float32Array(i.length/2);for(let b=0;b<h.length;b++)h[b]=i[b*2],f[b]=i[b*2+1];const p=va(h,a,"float32"),m=va(f,a,"float32"),y=li(p,m);return p.dispose(),m.dispose(),y}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*u}return va(i,a,s)}async function rT(n,t,e){let s=new Uint8Array(t);for(;s.byteLength<e;){const{done:a,value:r}=await n.read();if(a&&r==null){const l=e-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function T$(n,t){const e={},s=n.getReader();let a=new ArrayBuffer(0);for(const r of t){const i=await C3(r,async(h,f)=>(a=await rT(s,a,f),a.slice(h,f)));a=await rT(s,a,i);const l=a.slice(0,i);a=a.slice(i);const u=C$(r,l);if(e[r.name]=u,n1()==="webgpu"){const h=S$();"uploadToGPU"in h&&ht(u.shape)>=at().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&h.uploadToGPU(u.dataId)}}return e}function T3(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(t);let a=0;return e.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const s1=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function iT(n){return s1?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function $3(n){if(s1)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,a=t.length;s<a;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function k3(n){if(s1){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function $$(n){return ka.join(n)}function oT(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function k$(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function I$(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function a1(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),I$(n,e,s)}function _h(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:iT(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:iT(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new ka(n.weightData).byteLength}}function c0(n){const t=[];for(const e of n)t.push(...e.weights);return t}function I3(){const n=e=>{let s=e<<13,a=0;for(;(s&8388608)===0;)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function E3(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function A3(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function R3(){const n=I3(),t=E3(),e=A3();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const l=s[i],u=n[e[l>>10]+(l&1023)]+t[l>>10];r[i]=u}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class De{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return De.instance==null&&(De.instance=new De),De.instance}static registerSaveRouter(t){De.getInstance().saveRouters.push(t)}static registerLoadRouter(t){De.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return De.getHandlers(t,"save")}static getLoadHandlers(t,e){return De.getHandlers(t,"load",e)}static getHandlers(t,e,s){const a=[];return(e==="load"?De.getInstance().loadRouters:De.getInstance().saveRouters).forEach(i=>{const l=i(t,s);l!==null&&a.push(l)}),a}}const D3=n=>De.registerSaveRouter(n),O3=n=>De.registerLoadRouter(n),E$=n=>De.getSaveHandlers(n),_3=(n,t)=>De.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h0="tensorflowjs",d0=1,lo="models_store",ti="model_info_store";function A$(){if(!at().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function f0(n){const t=n.result;t.createObjectStore(lo,{keyPath:"modelPath"}),t.createObjectStore(ti,{keyPath:"modelPath"})}class bo{constructor(t){if(this.indexedDB=A$(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,a)=>{const r=this.indexedDB.open(h0,d0);r.onupgradeneeded=()=>f0(r),r.onsuccess=()=>{const i=r.result;if(e==null){const l=i.transaction(lo,"readonly"),h=l.objectStore(lo).get(this.modelPath);h.onsuccess=()=>{if(h.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(h.result.modelArtifacts)},h.onerror=f=>(i.close(),a(h.error)),l.oncomplete=()=>i.close()}else{e.weightData=ka.join(e.weightData);const l=_h(e),u=i.transaction(ti,"readwrite");let h=u.objectStore(ti),f;try{f=h.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return a(m)}let p;f.onsuccess=()=>{p=i.transaction(lo,"readwrite");const m=p.objectStore(lo);let y;try{y=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:l})}catch(b){return a(b)}y.onsuccess=()=>s({modelArtifactsInfo:l}),y.onerror=b=>{h=u.objectStore(ti);const v=h.delete(this.modelPath);v.onsuccess=()=>(i.close(),a(y.error)),v.onerror=w=>(i.close(),a(y.error))}},f.onerror=m=>(i.close(),a(f.error)),u.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}bo.URL_SCHEME="indexeddb://";const R$=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(bo.URL_SCHEME)?F3(n.slice(bo.URL_SCHEME.length)):null;De.registerSaveRouter(R$);De.registerLoadRouter(R$);function F3(n){return new bo(n)}function L3(n){return n.startsWith(bo.URL_SCHEME)?n.slice(bo.URL_SCHEME.length):n}class z3{constructor(){this.indexedDB=A$()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(h0,d0);s.onupgradeneeded=()=>f0(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(ti,"readonly"),l=r.objectStore(ti).getAll();l.onsuccess=()=>{const u={};for(const h of l.result)u[h.modelPath]=h.modelArtifactsInfo;t(u)},l.onerror=u=>(a.close(),e(l.error)),r.oncomplete=()=>a.close()},s.onerror=a=>e(s.error)})}async removeModel(t){return t=L3(t),new Promise((e,s)=>{const a=this.indexedDB.open(h0,d0);a.onupgradeneeded=()=>f0(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(ti,"readwrite"),l=i.objectStore(ti),u=l.get(t);let h;u.onsuccess=()=>{if(u.result==null)return r.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const f=l.delete(t),p=()=>{h=r.transaction(lo,"readwrite");const y=h.objectStore(lo).delete(t);y.onsuccess=()=>e(u.result.modelArtifactsInfo),y.onerror=b=>s(u.error)};f.onsuccess=p,f.onerror=m=>(p(),r.close(),s(u.error))}},u.onerror=f=>(r.close(),s(u.error)),i.oncomplete=()=>{h==null?r.close():h.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr="/",kl="tensorflowjs_models",D$="info",M3="model_topology",B3="weight_specs",V3="weight_data",P3="model_metadata";function O$(n){return{info:[kl,n,D$].join(gr),topology:[kl,n,M3].join(gr),weightSpecs:[kl,n,B3].join(gr),weightData:[kl,n,V3].join(gr),modelMetadata:[kl,n,P3].join(gr)}}function _$(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function U3(n){const t=n.split(gr);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(gr)}function W3(n){return n.startsWith(xo.URL_SCHEME)?n.slice(xo.URL_SCHEME.length):n}class xo{constructor(t){if(!at().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=O$(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),a=_h(t),r=ka.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,$3(r));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw _$(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const l=JSON.parse(r);e.format=l.format,e.generatedBy=l.generatedBy,e.convertedBy=l.convertedBy,l.signature!=null&&(e.signature=l.signature),l.userDefinedMetadata!=null&&(e.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(e.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(e.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(e.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=k3(i),e}}xo.URL_SCHEME="localstorage://";const F$=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xo.URL_SCHEME)?G3(n.slice(xo.URL_SCHEME.length)):null;De.registerSaveRouter(F$);De.registerLoadRouter(F$);function G3(n){return new xo(n)}class H3{constructor(){_(at().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),_(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=kl+gr,s=gr+D$;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(s)){const i=U3(r);t[i]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=W3(t);const e=O$(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return _$(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl="://";class Pn{constructor(){this.managers={}}static getInstance(){return Pn.instance==null&&(Pn.instance=new Pn),Pn.instance}static registerManager(t,e){_(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Rl)&&(t=t.slice(0,t.indexOf(Rl))),_(t.length>0,()=>"scheme must not be an empty string.");const s=Pn.getInstance();_(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Pn.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Pn.getInstance().managers)}}function Of(n){if(n.indexOf(Rl)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Pn.getSchemes().join(",")}`);return{scheme:n.split(Rl)[0],path:n.split(Rl)[1]}}async function L$(n,t,e=!1){_(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=De.getLoadHandlers(n);_(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),_(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const a=s[0],r=De.getSaveHandlers(t);_(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),_(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=r[0],l=Of(n).scheme,u=Of(n).path,h=l===Of(n).scheme,f=await a.load();e&&h&&await Pn.getManager(l).removeModel(u);const p=await i.save(f);return e&&!h&&await Pn.getManager(l).removeModel(u),p.modelArtifactsInfo}async function q3(){const n=Pn.getSchemes(),t={};for(const e of n){const s=await Pn.getManager(e).listModels();for(const a in s){const r=e+Rl+a;t[r]=s[a]}}return t}async function j3(n){const t=Of(n);return Pn.getManager(t.scheme).removeModel(t.path)}async function X3(n,t){return L$(n,t,!1)}async function K3(n,t){return L$(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y3{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!at().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return i$(t)}}if(at().get("IS_BROWSER")){at().setPlatform("browser",new Y3);try{Pn.registerManager(xo.URL_SCHEME,new H3)}catch{}try{Pn.registerManager(bo.URL_SCHEME,new z3)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z3={importFetch:()=>require("node-fetch")};let Rb;class Q3{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return at().global.fetch!=null?at().global.fetch(t,e):(Rb==null&&(Rb=Z3.importFetch()),Rb(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}at().get("IS_NODE")&&!at().get("IS_BROWSER")&&at().setPlatform("node",new Q3);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,t="float32",e){return t=t||"float32",Ds(n),new an(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n,t){const e=L(n,"x","cast");if(!FF(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},a={dtype:t};return H.runKernel(qc,s,a)}const Nt=U({cast_:J3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n){const e={x:L(n,"x","clone","string_or_numeric")};return H.runKernel(rh,e)}const br=U({clone_:tL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */g$();const eL={buffer:Ht,cast:Nt,clone:br,print:z$};f3(eL);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n,t){let e=L(n,"a","add"),s=L(t,"b","add");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(Ql,a)}const yt=U({add_:nL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n,t){let e=L(n,"a","floorDiv"),s=L(t,"b","floorDiv");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(sh,a)}const r1=U({floorDiv_:sL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n,t){let e=L(n,"a","div"),s=L(t,"b","div");if([e,s]=Me(e,s),e.dtype==="int32"&&s.dtype==="int32")return r1(e,s);const a={a:e,b:s},r={};return H.runKernel(Zc,a,r)}const Et=U({div_:aL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n,t){let e=L(n,"a","mul"),s=L(t,"b","mul");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(ph,a)}const G=U({mul_:rL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n){const t=L(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return H.runKernel(Ap,e)}else{const e={x:t};return H.runKernel(wp,e)}}const tn=U({abs_:iL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n){const e={x:L(n,"x","acos")};return H.runKernel(Bc,e)}const M$=U({acos_:oL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n){const e={x:L(n,"x","acosh")};return H.runKernel(Vc,e)}const B$=U({acosh_:lL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n){_(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),_(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((a,r)=>L(a,`tensors${r}`,"addN")),e=t[0];t.forEach(a=>{if(a.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!te(a.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return H.runKernel(Sp,s)}const cL=U({addN_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(n,t=null,e=!1){const a={x:L(n,"x","all","bool")},r={axis:t,keepDims:e};return H.runKernel(Z0,a,r)}const i1=U({all_:hL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n,t=null,e=!1){const a={x:L(n,"x","any","bool")},r={axis:t,keepDims:e};return H.runKernel(Q0,a,r)}const Zf=U({any_:dL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,t=0){const s={x:L(n,"x","argMax")},a={axis:t};return H.runKernel(Np,s,a)}const Bl=U({argMax_:fL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n,t=0){const s={x:L(n,"x","argMin")},a={axis:t};return H.runKernel(Cp,s,a)}const V$=U({argMin_:pL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n){const e={x:L(n,"x","asin")};return H.runKernel(Pc,e)}const P$=U({asin_:mL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const e={x:L(n,"x","asinh")};return H.runKernel(Uc,e)}const U$=U({asinh_:gL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n){const e={x:L(n,"x","atan")};return H.runKernel(Wc,e)}const W$=U({atan_:yL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,t){let e=L(n,"a","atan2"),s=L(t,"b","atan2");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(Hc,a)}const G$=U({atan2_:bL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const e={x:L(n,"x","atanh")};return H.runKernel(Gc,e)}const H$=U({atanh_:xL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fh(n,t,e,s,a="NHWC",r){const i=n[3],l=[...t,i],u=$r(a);return mn(n,l,e,r,s,null,null,u)}function ia(n,t,e,s,a,r,i="channelsLast"){const[l,u]=Nc(t);let h;if(i==="channelsLast")h=[l,u,n[3],n[3]];else if(i==="channelsFirst")h=[l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return mn(n,h,e,s,a,r,!1,i)}function Tr(n,t,e,s,a,r,i="NDHWC"){const[l,u,h]=p0(t);let f,p;if(i==="NDHWC")p="channelsLast",f=[l,u,h,n[4],n[4]];else if(i==="NCDHW")p="channelsFirst",f=[l,u,h,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Ni(n,f,e,s,a,!1,p,r)}function mn(n,t,e,s,a,r,i=!1,l="channelsLast"){let[u,h,f,p]=[-1,-1,-1,-1];if(l==="channelsLast")[u,h,f,p]=n;else if(l==="channelsFirst")[u,p,h,f]=n;else throw new Error(`Unknown dataFormat ${l}`);const[m,y,,b]=t,[v,w]=Nc(e),[S,C]=Nc(s),$=Dl(m,S),T=Dl(y,C),{padInfo:I,outHeight:R,outWidth:F}=SL(a,h,f,v,w,$,T,r,l),M=i?b*p:b;let D;return l==="channelsFirst"?D=[u,M,R,F]:l==="channelsLast"&&(D=[u,R,F,M]),{batchSize:u,dataFormat:l,inHeight:h,inWidth:f,inChannels:p,outHeight:R,outWidth:F,outChannels:M,padInfo:I,strideHeight:v,strideWidth:w,filterHeight:m,filterWidth:y,effectiveFilterHeight:$,effectiveFilterWidth:T,dilationHeight:S,dilationWidth:C,inShape:n,outShape:D,filterShape:t}}function Ni(n,t,e,s,a,r=!1,i="channelsLast",l){let[u,h,f,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,h,f,p,m]=n;else if(i==="channelsFirst")[u,m,h,f,p]=n;else throw new Error(`Unknown dataFormat ${i}`);const[y,b,v,,w]=t,[S,C,$]=p0(e),[T,I,R]=p0(s),F=Dl(y,T),M=Dl(b,I),D=Dl(v,R),{padInfo:O,outDepth:A,outHeight:W,outWidth:K}=NL(a,h,f,p,S,C,$,F,M,D,l),tt=r?w*m:w;let Q;return i==="channelsFirst"?Q=[u,tt,A,W,K]:i==="channelsLast"&&(Q=[u,A,W,K,tt]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:f,inWidth:p,inChannels:m,outDepth:A,outHeight:W,outWidth:K,outChannels:tt,padInfo:O,strideDepth:S,strideHeight:C,strideWidth:$,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:F,effectiveFilterHeight:M,effectiveFilterWidth:D,dilationDepth:T,dilationHeight:I,dilationWidth:R,inShape:n,outShape:Q,filterShape:t}}function vL(n,t,e,s,a){s==null&&(s=o1(n,t,e));const r=n[0],i=n[1],l=Cc((r-t+2*s)/e+1,a),u=Cc((i-t+2*s)/e+1,a);return[l,u]}function wL(n,t,e,s,a,r){a==null&&(a=o1(n,t[0],s[0]));const i=[0,0,0,e];for(let l=0;l<3;l++)n[l]+2*a>=t[l]&&(i[l]=Cc((n[l]-t[l]+2*a)/s[l]+1,r));return i}function o1(n,t,e,s=1){const a=Dl(t,s);return Math.floor((n[0]*(e-1)-e+a)/2)}function Nc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function p0(n){return typeof n=="number"?[n,n,n]:n}function Dl(n,t){return t<=1?n:n+(n-1)*(t-1)}function SL(n,t,e,s,a,r,i,l,u){let h,f,p;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=vL([t,e],r,s,n,l);f=y[0],p=y[1]}else if(n==="same"){f=Math.ceil(t/s),p=Math.ceil(e/a);const m=Math.max(0,(f-1)*s+r-t),y=Math.max(0,(p-1)*a+i-e),b=Math.floor(m/2),v=m-b,w=Math.floor(y/2),S=y-w;h={top:b,bottom:v,left:w,right:S,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,type:"VALID"},f=Math.ceil((t-r+1)/s),p=Math.ceil((e-i+1)/a);else if(typeof n=="object"){const m=u==="channelsLast"?n[1][0]:n[2][0],y=u==="channelsLast"?n[1][1]:n[2][1],b=u==="channelsLast"?n[2][0]:n[3][0],v=u==="channelsLast"?n[2][1]:n[3][1];h={top:m,bottom:y,left:b,right:v,type:m===0&&y===0&&b===0&&v===0?"VALID":"EXPLICIT"},f=Cc((t-r+m+y)/s+1,l),p=Cc((e-i+b+v)/a+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outHeight:f,outWidth:p}}function NL(n,t,e,s,a,r,i,l,u,h,f){let p,m,y,b;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=wL([t,e,s,1],[l,u,h],1,[a,r,i],n,f);m=w[0],y=w[1],b=w[2]}else if(n==="same"){m=Math.ceil(t/a),y=Math.ceil(e/r),b=Math.ceil(s/i);const v=(m-1)*a+l-t,w=(y-1)*r+u-e,S=(b-1)*i+h-s,C=Math.floor(v/2),$=v-C,T=Math.floor(w/2),I=w-T,R=Math.floor(S/2),F=S-R;p={top:T,bottom:I,left:R,right:F,front:C,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:m,outHeight:y,outWidth:b}}function Cc(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function ci(n){const[t,e,s]=Nc(n);return t===1&&e===1&&s===1}function $n(n,t){return ci(n)||ci(t)}function vo(n){return Nc(n).every(t=>t>0)}function $r(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Hn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")_(zl(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(a=>{_(zl(a),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${a}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(n,t){const s={x:L(n,"x","reshape","string_or_numeric")},a={shape:t};return H.runKernel(cm,s,a)}const q=U({reshape_:CL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n,t,e,s,a){const r=L(n,"x","avgPool","float32"),i=1;_($n(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let l=r,u=!1;r.rank===3&&(u=!0,l=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),_(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),Hn("avgPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a};let p=H.runKernel(Tp,h,f);return p=Nt(p,r.dtype),u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Tm=U({avgPool_:TL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n,t,e,s,a,r="NDHWC"){const i=L(n,"x","avgPool3d","float32");let l=i,u=!1;i.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),_(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),_(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Hn("avgPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r};let p=H.runKernel($p,h,f);return p=Nt(p,l.dtype),u?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const q$=U({avgPool3d_:$L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n,t=0){_(n.length>=1,()=>"Pass at least one tensor to concat");const e=Yf(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return br(e[0]);const s=e,a={axis:t};return H.runKernel(Rp,s,a)}const Ye=U({concat_:kL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n,t,e=!1,s=!1){let a=L(n,"a","matMul"),r=L(t,"b","matMul");[a,r]=Me(a,r);const i={a,b:r},l={transposeA:e,transposeB:s};return H.runKernel(kp,i,l)}const Zt=U({matMul_:IL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const e={x:L(n,"x","sigmoid","float32")};return H.runKernel(Th,e)}const wa=U({sigmoid_:EL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,t,e){const s=L(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:e};return H.runKernel(mm,a,r)}const Wt=U({slice_:AL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(n){const e={x:L(n,"x","tanh","float32")};return H.runKernel(Rh,e)}const wo=U({tanh_:RL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,t,e,s,a,r){const i=L(n,"forgetBias","basicLSTMCell"),l=L(t,"lstmKernel","basicLSTMCell"),u=L(e,"lstmBias","basicLSTMCell"),h=L(s,"data","basicLSTMCell"),f=L(a,"c","basicLSTMCell"),p=L(r,"h","basicLSTMCell"),m=Ye([h,p],1),y=Zt(m,l),b=yt(y,u),v=b.shape[0],w=b.shape[1]/4,S=[v,w],C=Wt(b,[0,0],S),$=Wt(b,[0,w],S),T=Wt(b,[0,w*2],S),I=Wt(b,[0,w*3],S),R=yt(G(wa(C),wo($)),G(f,wa(yt(i,T)))),F=G(wo(R),wa(I));return[R,F]}const OL=U({basicLSTMCell_:DL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n,t,e){const s=L(n,"x","batchToSpaceND"),a=t.reduce((l,u)=>l*u);_(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),_(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),_(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const r={x:s},i={blockShape:t,crops:e};return H.runKernel(Ip,r,i)}const $m=U({batchToSpaceND_:_L});function FL(n){let t;return n.rank===0||n.rank===1?t=q(n,[1,1,1,n.size]):n.rank===2?t=q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,t,e,s,a,r){r==null&&(r=.001);const i=L(n,"x","batchNorm"),l=L(t,"mean","batchNorm"),u=L(e,"variance","batchNorm");let h;a!=null&&(h=L(a,"scale","batchNorm"));let f;s!=null&&(f=L(s,"offset","batchNorm")),_(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(f==null||l.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:FL(i),scale:h,offset:f,mean:l,variance:u},y={varianceEpsilon:r},b=H.runKernel(Vp,m,y);return q(b,i.shape)}const Lh=U({batchNorm_:LL});function zL(n,t,e,s,a,r){const i=L(n,"x","batchNorm"),l=L(t,"mean","batchNorm"),u=L(e,"variance","batchNorm");let h;a!=null&&(h=L(a,"scale","batchNorm"));let f;return s!=null&&(f=L(s,"offset","batchNorm")),_(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),_(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),_(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&_(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${h.rank}.`),f!=null&&_(f.rank===2||f.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`),Lh(i,l,u,f,h,r)}const j$=U({batchNorm2d_:zL});function ML(n,t,e,s,a,r){const i=L(n,"x","batchNorm"),l=L(t,"mean","batchNorm"),u=L(e,"variance","batchNorm");let h;a!=null&&(h=L(a,"scale","batchNorm"));let f;return s!=null&&(f=L(s,"offset","batchNorm")),_(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),_(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),_(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&_(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${h.rank}.`),f!=null&&_(f.rank===3||f.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`),Lh(i,l,u,f,h,r)}const X$=U({batchNorm3d_:ML});function BL(n,t,e,s,a,r){const i=L(n,"x","batchNorm"),l=L(t,"mean","batchNorm"),u=L(e,"variance","batchNorm");let h;a!=null&&(h=L(a,"scale","batchNorm"));let f;return s!=null&&(f=L(s,"offset","batchNorm")),_(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),_(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),_(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&_(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${h.rank}.`),f!=null&&_(f.rank===4||f.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`),Lh(i,l,u,f,h,r)}const K$=U({batchNorm4d_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n,t,e){const s=L(n,"x","bincount"),a=L(t,"weights","bincount");_(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),_(e>=0,()=>`size must be non-negative, but got ${e}.`),_(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:e};return H.runKernel(ex,r,i)}const Y$=U({bincount_:VL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,t){const e=L(n,"x","bitwiseAnd"),s=L(t,"y","bitwiseAnd");if(!te(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if(e.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);const a={a:e,b:s};return H.runKernel(Ep,a)}const UL=U({bitwiseAnd_:PL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n,t){const e=L(n,"s0","broadcastArgs","int32"),s=L(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:e,s1:s};return H.runKernel(nx,a)}const GL=U({broadcastArgs_:WL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n,t){let e=L(n,"broadcastTo","x");const s=e.shape;if(Ds(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const h=e.shape.slice();for(;h.length<t.length;)h.unshift(1);e=q(e,h)}const a=e.shape,r=Array.from(t);for(let h=t.length-1;h>=0;h--)if(a[h]===t[h])r[h]=1;else if(e.shape[h]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(r.map((h,f)=>h>1?f:-1).filter(h=>h>=0).length===0)return br(e);const l={x:e},u={reps:r};return H.runKernel(Dh,l,u)}const Ol=U({broadcastTo_:HL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const e={x:L(n,"x","ceil","float32")};return H.runKernel(jc,e)}const Z$=U({ceil_:qL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(n,t,e){Ds(n),e=e||Yl(t);const s={shape:n,value:t,dtype:e};return H.runKernel(yx,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n,t,e){const s=L(n,"x","clipByValue");if(_(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Jl(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:e};return H.runKernel(Xc,a,r)}const fs=U({clipByValue_:jL});function XL(n){return Ye(n,0)}const Q$=U({concat1d_:XL});function KL(n,t){return Ye(n,t)}const l1=U({concat2d_:KL});function YL(n,t){return Ye(n,t)}const J$=U({concat3d_:YL});function ZL(n,t){return Ye(n,t)}const tk=U({concat4d_:ZL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n,t,e,s,a="NHWC",r=[1,1],i){const l=L(n,"x","conv2d","float32"),u=L(t,"filter","conv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),_(h.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`),_(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Hn("conv2d",s,i);const p=a==="NHWC"?h.shape[3]:h.shape[1];_(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),_($n(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),_(vo(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),_(vo(e),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=H.runKernel(Dp,m,y);return f?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const hi=U({conv2d_:QL});function JL(n,t,e,s,a="NWC",r=1,i){const l=L(n,"x","conv1d"),u=L(t,"filter","conv1d");let h=l,f=!1;l.rank===2&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1]])),_(h.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${h.rank}.`),_(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Hn("conv1d",s,i),_(h.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${h.shape[2]}) must match input depth for filter ${u.shape[1]}.`),_($n(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),_(vo(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),_(vo(e),()=>"Error in conv1D: Stride should be larger than 0."),_(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const p=q(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=q(h,[h.shape[0],1,h.shape[1],h.shape[2]]),w=hi(m,p,[1,e],s,"NHWC",[1,r],i);return f?q(w,[w.shape[2],w.shape[3]]):q(w,[w.shape[0],w.shape[2],w.shape[3]])}const u1=U({conv1d_:JL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(n,t,e,s,a,r="NHWC",i){_(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let l=n,u=t,h=!1;t.rank===3&&(h=!0,u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,n[0],n[1],n[2]]),_(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),_(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),_(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const f=r==="NHWC"?l[3]:l[1],p=r==="NHWC"?u.shape[3]:u.shape[1];_(f===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${e.shape[2]}.`),_(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Hn("conv2dDerInput",a,i);const m={dy:u,filter:e},y={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:l},b=H.runKernel(Op,m,y);return h?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const c1=U({conv2DBackpropInput_:tz});function ez(n,t,e,s,a,r){const i=L(n,"x","conv2dTranspose"),l=L(t,"filter","conv2dTranspose");return c1(e,i,l,s,a,"NHWC",r)}const h1=U({conv2dTranspose_:ez});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n,t,e,s,a="NDHWC",r=[1,1,1]){const i=L(n,"x","conv3d"),l=L(t,"filter","conv3d");let u=i,h=!1;i.rank===4&&(h=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),_(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),_(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),_($n(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),_(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),_(vo(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),_(vo(e),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:u,filter:l},p={strides:e,pad:s,dataFormat:a,dilations:r},m=H.runKernel(_p,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const ek=U({conv3d_:nz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n,t,e,s,a){_(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let r=n,i=t,l=!1;t.rank===4&&(l=!0,i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const u=r[4],h=i.shape[4];_(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),_(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),_(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),_(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),_(h===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[4]}.`);const f={dy:i,filter:e},p={pad:a,strides:s,inputShape:r},m=H.runKernel(ix,f,p);return l?q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const nk=U({conv3DBackpropInput_:sz});function az(n,t,e,s,a){const r=L(n,"x","conv3dTranspose"),i=L(t,"filter","conv3dTranspose");return nk(e,r,i,s,a)}const sk=U({conv3dTranspose_:az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const e={x:L(n,"x","cos","float32")};return H.runKernel(Kc,e)}const km=U({cos_:rz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n){const e={x:L(n,"x","cosh","float32")};return H.runKernel(Yc,e)}const d1=U({cosh_:iz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n,t=0,e=!1,s=!1){const r={x:L(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return H.runKernel(ox,r,i)}const Qf=U({cumprod_:oz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n,t=0,e=!1,s=!1){const r={x:L(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return H.runKernel(Fp,r,i)}const f1=U({cumsum_:lz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n,t,e,s=!1){const a=L(n,"x","denseBincount"),r=L(t,"weights","denseBincount");_(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),_(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),_(e>=0,()=>`size must be non-negative, but got ${e}.`),_(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},l={size:e,binaryOutput:s};return H.runKernel(ux,i,l)}const m0=U({denseBincount_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(n,t,e="NHWC"){const s=L(n,"x","depthToSpace","float32"),a=e==="NHWC"?s.shape[1]:s.shape[2],r=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];_(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),_(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${s.shape}`),_(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${s.shape}`),_(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const l={x:s},u={blockSize:t,dataFormat:e};return H.runKernel(cx,l,u)}const ak=U({depthToSpace_:cz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(n,t,e,s,a="NHWC",r=[1,1],i){const l=L(n,"x","depthwiseConv2d","float32"),u=L(t,"filter","depthwiseConv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),_(h.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),_(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const p=a==="NHWC"?h.shape[3]:h.shape[1];_(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),Hn("depthwiseConv2d",s,i);const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=H.runKernel(Lp,m,y);return f?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const zh=U({depthwiseConv2d_:hz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(n){const e={x:L(n,"x","diag")};return H.runKernel(fx,e)}const fz=U({diag_:dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n,t,e,s,a=[1,1],r="NHWC"){const i=L(n,"x","dilation2d"),l=L(t,"filter","dilation2d");_(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),_(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),_(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let u=i,h=!1;i.rank===3&&(u=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),h=!0),_(u.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${l.shape[2]}`);const f={x:u,filter:l},p={strides:e,pad:s,dilations:a},m=H.runKernel(zp,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const rk=U({dilation2d_:pz});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vl(n,t){const e=n.length,s=[];for(let a=0;a<e;a++){const r=e-1-a,i=n[r]||1;(t[t.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function ln(n,t){const e=[];for(let s=0;s<t.length;s++){const a=n[n.length-s-1],r=t.length-s-1,i=t[r];(a==null||a===1&&i>1)&&e.unshift(r)}return e}function Pt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let a=0;a<e;a++){let r=n[n.length-a-1];r==null&&(r=1);let i=t[t.length-a-1];if(i==null&&(i=1),r===1)s[e-a-1]=i;else if(i===1)s[e-a-1]=r;else if(r!==i){const l=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(l)}else s[e-a-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(n,t){let e=L(n,"a","equal","string_or_numeric"),s=L(t,"b","equal","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(Mp,a)}const Na=U({equal_:mz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n,t,e){const s=L(t,"a","where"),a=L(e,"b","where"),r=L(n,"condition","where","bool"),i=Pt(Pt(r.shape,s.shape),a.shape),l=Ol(r,i),u=Ol(s,i),h=Ol(a,i),f={condition:l,t:u,e:h};return H.runKernel(pm,f)}const _n=U({where_:gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(n){const e={x:L(n,"x","zerosLike")};return H.runKernel(Nm,e)}const re=U({zerosLike_:yz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n,t){let e=L(n,"a","div"),s=L(t,"b","div");[e,s]=Me(e,s);const a=Et(e,s),r=re(a),i=Na(s,r);return _n(i,r,a)}const ik=U({divNoNan_:bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n,t){const e=L(n,"t1","dot"),s=L(t,"t2","dot");_((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const a=e.rank===1?e.size:e.shape[1],r=s.rank===1?s.size:s.shape[0];if(_(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),e.rank===1&&s.rank===1){const i=q(e,[1,-1]),l=q(s,[-1,1]),u=Zt(i,l);return q(u,[])}else if(e.rank===1&&s.rank===2){const i=q(e,[1,-1]),l=q(s,[s.shape[0],s.shape[1]]),u=Zt(i,l);return q(u,[u.size])}else if(e.rank===2&&s.rank===1){const i=q(s,[-1,1]),l=Zt(e,i);return q(l,[l.size])}else{const i=q(s,[s.shape[0],s.shape[1]]);return Zt(e,i)}}const ok=U({dot_:xz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n,...t){const e=t.map((a,r)=>L(a,`tensors${r}`,"einsum")),s={equation:n};return H.runKernel(px,e,s)}const Il=U({einsum_:vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const e={x:L(n,"x","elu","float32")};return H.runKernel(Qc,e)}const Mh=U({elu_:wz});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n,t){const e=L(n,"x","ensureShape","string_or_numeric");if(!OF(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}const Nz=U({ensureShape_:Sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n){let t=L(n,"x","erf");_(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Nt(t,"float32"));const e={x:t};return H.runKernel(Jc,e)}const p1=U({erf_:Cz});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function lk(n,t,e){const s=n.length+t.length,a=[];let r=0,i=0;for(let l=0;l<s;l++)e.indexOf(l)===-1?a.push(n[r++]):a.push(t[i++]);return a}function gn(n,t){const e=[],s=n.length;for(let r=0;r<s;r++)t.indexOf(r)===-1&&e.push(n[r]);const a=t.map(r=>n[r]);return[e,a]}function He(n,t){const e=t.map(s=>1);return lk(n,e,t)}function kn(n,t,e){_(m1(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function _e(n,t){if(m1(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Ci(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function qe(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n,t=null,e=!1){const a={x:L(n,"x","max")},r={reductionIndices:t,keepDims:e};return H.runKernel(Yp,a,r)}const na=U({max_:Tz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n,t=null,e=!1){const a={x:L(n,"x","min")},r={axis:t,keepDims:e};return H.runKernel(tm,a,r)}const Tc=U({min_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n,t){let e=L(n,"base","pow"),s=L(t,"exp","pow");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(mh,a)}const vr=U({pow_:kz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(n,t){if((sa(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&sa(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Si(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){const e={x:L(n,"x","sqrt","float32")};return H.runKernel(kh,e)}const Tn=U({sqrt_:Iz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){const t=L(n,"x","square"),e={};return H.runKernel("Square",{x:t},e)}const we=U({square_:Ez});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n,t=null,e=!1){let s=L(n,"x","sum");s.dtype==="bool"&&(s=Nt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return H.runKernel(gm,a,r)}const At=U({sum_:Az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n,t="euclidean",e=null,s=!1){n=L(n,"x","norm");const a=uk(n,t,e);let r=a.shape;if(s){const i=Xt(e,n.shape);r=He(a.shape,i)}return q(a,r)}function uk(n,t,e=null){if(n.rank===0)return tn(n);if(n.rank!==1&&e===null)return uk(q(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return At(tn(n),e);if(t===1/0)return na(tn(n),e);if(t===-1/0)return Tc(tn(n),e);if(t==="euclidean"||t===2)return Tn(At(vr(tn(n),Lt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return na(At(tn(n),e[0]),e[1]-1);if(t===1/0)return na(At(tn(n),e[1]),e[0]);if(t===-1/0)return Tc(At(tn(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Tn(At(we(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Bh=U({norm_:Rz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n,t=null,e=!1){return Bh(n,"euclidean",t,e)}const ck=U({euclideanNorm_:Dz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n){const e={x:L(n,"x","exp")};return H.runKernel(th,e)}const ps=U({exp_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n,t=0){const e=L(n,"x","expandDims","string_or_numeric");_(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},a={dim:t};return H.runKernel(Bp,s,a)}const On=U({expandDims_:_z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const e={x:L(n,"x","expm1")};return H.runKernel(eh,e)}const hk=U({expm1_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n,t){const e=L(n,"x","tile","string_or_numeric");_(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},a={reps:t};return H.runKernel(Dh,s,a)}const Qs=U({tile_:Lz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n,t,e,s="float32"){t==null&&(t=n);const a=Ht([n,t],s),r=n<=t?n:t;for(let l=0;l<r;++l)a.set(1,l,l);const i=q(a.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return Qs(On(i,0),[e[0],1,1]);if(e.length===2)return Qs(On(On(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Qs(On(On(On(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const g1=U({eye_:zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(n){const e={x:L(n,"x","floor","float32")};return H.runKernel(nh,e)}const Vh=U({floor_:Mz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n,t,e=0,s=0){const a=L(n,"x","gather"),r=L(t,"indices","gather","int32"),i={x:a,indices:r},l={axis:e,batchDims:s};return H.runKernel(Pp,i,l)}const Ph=U({gather_:Bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,t){let e=L(n,"a","greater","string_or_numeric"),s=L(t,"b","greater","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(Up,a)}const xs=U({greater_:Vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n,t){let e=L(n,"a","greaterEqual","string_or_numeric"),s=L(t,"b","greaterEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(ah,a)}const Ti=U({greaterEqual_:Pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const e={input:L(n,"input","imag")};return H.runKernel(wx,e)}const Im=U({imag_:Uz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n){const e={x:L(n,"x","isFinite")};return H.runKernel(ih,e)}const dk=U({isFinite_:Wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const e={x:L(n,"x","isInf")};return H.runKernel(oh,e)}const fk=U({isInf_:Gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n){const e={x:L(n,"x","isNaN")};return H.runKernel(lh,e)}const pk=U({isNaN_:Hz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n,t=.2){const s={x:L(n,"x","leakyRelu")},a={alpha:t};return H.runKernel(Wp,s,a)}const Em=U({leakyRelu_:qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n,t){let e=L(n,"a","less","string_or_numeric"),s=L(t,"b","less","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(Gp,a)}const $c=U({less_:jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n,t){let e=L(n,"a","lessEqual","string_or_numeric"),s=L(t,"b","lessEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(Hp,a)}const Ao=U({lessEqual_:Xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return H.runKernel(Sx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n,t=5,e=1,s=1,a=.5){const r=L(n,"x","localResponseNormalization");_(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),_(zl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=r,l=!1;r.rank===3&&(l=!0,i=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const u={x:i},h={depthRadius:t,bias:e,alpha:s,beta:a},f=H.runKernel(Kp,u,h);return l?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const mk=U({localResponseNormalization_:Yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n){const e={x:L(n,"x","log","float32")};return H.runKernel(uh,e)}const As=U({log_:Zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const e={x:L(n,"x","log1p")};return H.runKernel(ch,e)}const Am=U({log1p_:Qz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n,t){_(Zb(n),()=>"The f passed in variableGrads(f) must be a function"),_(t==null||Array.isArray(t)&&t.every(h=>h instanceof Kf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const h in H.registeredVariables)t.push(H.registeredVariables[h])}const s=e?t.filter(h=>!h.trainable):null,a=t.length;t=t.filter(h=>h.trainable),_(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:l}=H.gradients(n,t,null,r);_(l.some(h=>h!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),_(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return t.forEach((h,f)=>{l[f]!=null&&(u[h.name]=l[f])}),s!=null&&s.forEach(h=>u[h.name]=null),{value:i,grads:u}}function wr(n){return H.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const e={x:L(n,"x","neg")};return H.runKernel(nm,e)}const Ee=U({neg_:tM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const e={x:L(n,"x","softplus")};return H.runKernel($h,e)}const tu=U({softplus_:eM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const t=L(n,"x","logSigmoid");return wr(s=>({value:Ee(tu(Ee(s))),gradFunc:i=>G(i,wa(Ee(s)))}))(t)}const gk=U({logSigmoid_:nM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,t){let e=L(n,"a","sub"),s=L(t,"b","sub");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(Eh,a)}const kt=U({sub_:sM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n,t=-1){const e=L(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return wr((a,r)=>{const l=na(a,t,!0),u=kt(a,l),h=kt(Nt(u,"float32"),As(At(ps(u),t,!0)));return r([h]),{value:h,gradFunc:(p,m)=>{const[y]=m,b=!0,v=ps(y);return kt(p,G(At(p,t,b),v))}}})(e)}const y1=U({logSoftmax_:aM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,t=null,e=!1){const s=L(n,"x","logSumExp"),a=Xt(t,s.shape),r=na(s,a,!0),i=kt(s,r),l=ps(i),u=At(l,a),h=As(u),f=yt(q(r,h.shape),h);if(e){const p=He(f.shape,a);return q(f,p)}return f}const Rm=U({logSumExp_:rM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n,t){const e=L(n,"a","logicalAnd","bool"),s=L(t,"b","logicalAnd","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(qp,a)}const Ga=U({logicalAnd_:iM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n){const e={x:L(n,"x","logicalNot","bool")};return H.runKernel(jp,e)}const Dm=U({logicalNot_:oM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,t){const e=L(n,"a","logicalOr","bool"),s=L(t,"b","logicalOr","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(Xp,a)}const b1=U({logicalOr_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,t){const e=L(n,"a","logicalXor","bool"),s=L(t,"b","logicalXor","bool");return Pt(e.shape,s.shape),Ga(b1(n,t),Dm(Ga(n,t)))}const yk=U({logicalXor_:uM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yf=2147483648;function cM(n,t,e="left"){const s=L(n,"sortedSequence","searchSorted"),a=L(t,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],l=q(s,[-1,r]),u=q(a,[-1,i]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(u.shape)>=yf)throw new Error(`values tensor size must less than ${yf}`);if(l.shape[1]>=yf)throw new Error(`trailing dim_size must less than ${yf} for int32 output type, was ${l.shape[1]}`);const h={sortedSequence:l,values:u},f={side:e};return H.runKernel(Vx,h,f)}const x1=U({searchSorted_:cM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,t){return x1(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,t,e,s,a){const r=L(n,"x","maxPool"),i=1;let l=r,u=!1;r.rank===3&&(u=!0,l=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),_(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),_($n(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Hn("maxPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a},p=H.runKernel(Zp,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Om=U({maxPool_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,t=[1,1,1],e,s,a,r="NDHWC"){const i=L(n,"x","maxPool3d");let l=i,u=!1;i.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),_(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Hn("maxPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r},p=H.runKernel(Qp,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const bk=U({maxPool3d_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n,t,e,s,a=!1){const i={x:L(n,"x","maxPoolWithArgmax")},l={filterSize:t,strides:e,pad:s,includeBatchInIndex:a},u=H.runKernel($x,i,l);return{result:u[0],indexes:u[1]}}const mM=U({maxPoolWithArgmax_:pM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n,t){let e=L(n,"a","maximum"),s=L(t,"b","maximum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(hh,a)}const kr=U({maximum_:gM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,t=null,e=!1){const a={x:L(n,"x","mean")},r={axis:t,keepDims:e};return H.runKernel(Jp,a,r)}const ze=U({mean_:yM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n,t="float32"){if(Ds(n),t==="complex64"){const s=en(n,"float32"),a=en(n,"float32");return li(s,a)}const e=Fn(ht(n),t);return H.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n,t="float32"){if(Ds(n),t==="complex64"){const s=us(n,"float32"),a=en(n,"float32");return li(s,a)}const e=K0(ht(n),t);return H.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=L(n,"x","meshgrid",n instanceof Ie?n.dtype:"float32");if(t===void 0)return[s];let a=L(t,"y","meshgrid",t instanceof Ie?t.dtype:"float32");const r=ht(s.shape),i=ht(a.shape);return e==="xy"?(s=q(s,[1,-1]),a=q(a,[-1,1]),[Zt(us([i,1],s.dtype),s),Zt(a,us([1,r],a.dtype))]):(s=q(s,[-1,1]),a=q(a,[1,-1]),[Zt(s,us([1,i],s.dtype)),Zt(us([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n,t){let e=L(n,"a","minimum"),s=L(t,"b","minimum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(dh,a)}const So=U({minimum_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n,t,e){_(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=L(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const a=e==="reflect"?1:0;for(let l=0;l<s.rank;l++)_(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_(t[l][0]>=0&&t[l][0]<=s.shape[l]-a&&t[l][1]>=0&&t[l][1]<=s.shape[l]-a,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:t,mode:e},i={x:s};return H.runKernel(em,i,r)}const xk=U({mirrorPad_:vM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n,t){let e=L(n,"a","mod"),s=L(t,"b","mod");[e,s]=Me(e,s);const a={a:e,b:s};return H.runKernel(fh,a)}const vk=U({mod_:wM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n,t=null,e=!1){n=L(n,"x","moments");const s=Xt(t,n.shape),a=ze(n,s,e);let r=a.shape;e||(r=He(a.shape,s));const i=we(kt(Nt(n,"float32"),q(a,r))),l=ze(i,s,e);return{mean:a,variance:l}}const _m=U({moments_:SM});function NM(n,t,e,s){const a=L(t,"data","multiRNNCell"),r=Yf(e,"c","multiRNNCell"),i=Yf(s,"h","multiRNNCell");let l=a;const u=[];for(let p=0;p<n.length;p++){const m=n[p](l,r[p],i[p]);u.push(m[0]),u.push(m[1]),l=m[1]}const h=[],f=[];for(let p=0;p<u.length;p+=2)h.push(u[p]),f.push(u[p+1]);return[h,f]}const CM=U({multiRNNCell_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,t,e,s=!1){const a=L(n,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const u={logits:i===1?q(a,[1,-1]):a},h={numSamples:t,seed:e,normalized:s},f=H.runKernel(kx,u,h);return i===1?q(f,[f.size]):f}const $M=U({multinomial_:TM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,t){let e=L(n,"a","notEqual","string_or_numeric"),s=L(t,"b","notEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return H.runKernel(sm,a)}const Pl=U({notEqual_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n,t,e=1,s=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:L(n,"indices","oneHot","int32")},l={dtype:a,depth:t,onValue:e,offValue:s};return H.runKernel(rm,i,l)}const v1=U({oneHot_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const e={x:L(n,"x","onesLike")};return H.runKernel(am,e)}const Rs=U({onesLike_:EM});function AM(n,t){const e=L(n,"v1","outerProduct"),s=L(t,"v2","outerProduct");_(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const a=q(e,[-1,1]),r=q(s,[1,-1]);return Zt(a,r)}const RM=U({outerProduct_:AM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,t,e=0){const s=L(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:e},r={x:s};return H.runKernel(om,r,a)}const $i=U({pad_:DM});function OM(n,t,e=0){return _(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),$i(n,[t],e)}const _M=U({pad1d_:OM});function FM(n,t,e=0){return _(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$i(n,t,e)}const LM=U({pad2d_:FM});function zM(n,t,e=0){return _(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$i(n,t,e)}const MM=U({pad3d_:zM});function BM(n,t,e=0){return _(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$i(n,t,e)}const VM=U({pad4d_:BM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,t,e){const s=L(n,"x","spaceToBatchND");_(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),_(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),_(s.shape.reduce((i,l,u)=>u>0&&u<=t.length?i&&(l+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:s},r={blockShape:t,paddings:e};return H.runKernel(ym,a,r)}const Fm=U({spaceToBatchND_:PM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,t,e,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const l=L(n,"x","maxPool");let u=l,h=!1;l.rank===3&&(h=!0,u=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),_($n(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const f=ia(u.shape,t,r,a,s),p=[f.dilationHeight,f.dilationWidth];let m;s==="same"?m=GM([f.filterHeight,f.filterWidth],p):m=[[0,0],[0,0]];const y=p[0]===1&&p[1]===1,[b,v]=WM([f.inHeight,f.inWidth],p,m),w=y?s:"valid",S=y?u:Fm(u,p,b),$=(e==="avg"?()=>Tm(S,t,r,w,i):()=>Om(S,t,r,w,i))(),T=y?$:$m($,p,v);return h?q(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function WM(n,t,e){const s=e.map(f=>f[0]),a=e.map(f=>f[1]),r=n.concat(s,a),i=t.map((f,p)=>(f-r[p]%f)%f),l=a.map((f,p)=>f+i[p]),u=t.map((f,p)=>[s[p],l[p]]),h=t.map((f,p)=>[0,i[p]]);return[u,h]}function GM(n,t){const s=n.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,l)=>i-a[l]);return s.map((i,l)=>[a[l],r[l]])}const wk=U({pool_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n,t){const e=L(n,"x","prelu"),s=L(t,"alpha","prelu"),a={x:e,alpha:s};return H.runKernel(lm,a)}const Lm=U({prelu_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,t=null,e=!1){let s=L(n,"x","prod");s.dtype==="bool"&&(s=Nt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return H.runKernel(um,a,r)}const Sk=U({prod_:qM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n,t,e,s){const a=n.map((f,p)=>L(f,`tensors${p}`,"raggedGather","int32")),r=L(t,"paramsDenseValues","raggedGather"),i=L(e,"indices","raggedGather","int32"),l={paramsNestedSplits:a,paramsDenseValues:r,indices:i},u={outputRaggedRank:s},h=H.runKernel(Rx,l,u);return{outputNestedSplits:h.slice(0,h.length-1),outputDenseValues:h[h.length-1]}}const XM=U({raggedGather_:jM});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n,t,e){const s=L(n,"starts","raggedRange"),a=L(t,"limits","raggedRange",s.dtype),r=L(e,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},l=H.runKernel(Dx,i);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const YM=U({raggedRange_:KM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(n,t,e,s,a){const r=L(n,"shape","raggedTensorToTensor","int32"),i=L(t,"values","raggedTensorToTensor"),l=L(e,"defaultValue","raggedTensorToTensor",i.dtype),u=s.map((p,m)=>L(p,`tensors${m}`,"raggedTensorToTensor","int32")),h={shape:r,values:i,defaultValue:l,rowPartitionTensors:u},f={rowPartitionTypes:a};return H.runKernel(Ox,h,f)}const QM=U({raggedTensorToTensor_:ZM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n,t,e){Ds(n);const s=ht(n);let a=null;if(e==null||e==="float32")a=new Float32Array(s);else if(e==="int32")a=new Int32Array(s);else if(e==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let r=0;r<s;r++)a[r]=t();return H.makeTensor(a,n,e)}const tB=U({rand_:JM});var _f={exports:{}},eB=_f.exports,lT;function nB(){return lT||(lT=1,function(n){(function(t,e,s){function a(u){var h=this,f=l();h.next=function(){var p=2091639*h.s0+h.c*23283064365386963e-26;return h.s0=h.s1,h.s1=h.s2,h.s2=p-(h.c=p|0)},h.c=1,h.s0=f(" "),h.s1=f(" "),h.s2=f(" "),h.s0-=f(u),h.s0<0&&(h.s0+=1),h.s1-=f(u),h.s1<0&&(h.s1+=1),h.s2-=f(u),h.s2<0&&(h.s2+=1),f=null}function r(u,h){return h.c=u.c,h.s0=u.s0,h.s1=u.s1,h.s2=u.s2,h}function i(u,h){var f=new a(u),p=h&&h.state,m=f.next;return m.int32=function(){return f.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&r(p,f),m.state=function(){return r(f,{})}),m}function l(){var u=4022871197,h=function(f){f=String(f);for(var p=0;p<f.length;p++){u+=f.charCodeAt(p);var m=.02519603282416938*u;u=m>>>0,m-=u,m*=u,u=m>>>0,m-=u,u+=m*4294967296}return(u>>>0)*23283064365386963e-26};return h}e&&e.exports?e.exports=i:this.alea=i})(eB,n)}(_f)),_f.exports}var Ff={exports:{}},sB=Ff.exports,uT;function aB(){return uT||(uT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor128=i})(sB,n)}(Ff)),Ff.exports}var Lf={exports:{}},rB=Lf.exports,cT;function iB(){return cT||(cT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,f==h.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorwow=i})(rB,n)}(Lf)),Lf.exports}var zf={exports:{}},oB=zf.exports,hT;function lB(){return hT||(hT=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.x,p=u.i,m,y;return m=f[p],m^=m>>>7,y=m^m<<24,m=f[p+1&7],y^=m^m>>>10,m=f[p+3&7],y^=m^m>>>3,m=f[p+4&7],y^=m^m<<7,m=f[p+7&7],m=m^m<<13,y^=m^m<<9,f[p]=y,u.i=p+1&7,y};function h(f,p){var m,y=[];if(p===(p|0))y[0]=p;else for(p=""+p,m=0;m<p.length;++m)y[m&7]=y[m&7]<<15^p.charCodeAt(m)+y[m+1&7]<<13;for(;y.length<8;)y.push(0);for(m=0;m<8&&y[m]===0;++m);for(m==8?y[7]=-1:y[m],f.x=y,f.i=0,m=256;m>0;--m)f.next()}h(u,l)}function r(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.x&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorshift7=i})(oB,n)}(zf)),zf.exports}var Mf={exports:{}},uB=Mf.exports,dT;function cB(){return dT||(dT=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.w,p=u.X,m=u.i,y,b;return u.w=f=f+1640531527|0,b=p[m+34&127],y=p[m=m+1&127],b^=b<<13,y^=y<<17,b^=b>>>15,y^=y>>>12,b=p[m]=b^y,u.i=m,b+(f^f>>>16)|0};function h(f,p){var m,y,b,v,w,S=[],C=128;for(p===(p|0)?(y=p,p=null):(p=p+"\0",y=0,C=Math.max(C,p.length)),b=0,v=-32;v<C;++v)p&&(y^=p.charCodeAt((v+32)%p.length)),v===0&&(w=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,v>=0&&(w=w+1640531527|0,m=S[v&127]^=y+w,b=m==0?b+1:0);for(b>=128&&(S[(p&&p.length||0)&127]=-1),b=127,v=4*128;v>0;--v)y=S[b+34&127],m=S[b=b+1&127],y^=y<<13,m^=m<<17,y^=y>>>15,m^=m>>>12,S[b]=y^m;f.w=w,f.X=S,f.i=b}h(u,l)}function r(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.X&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor4096=i})(uB,n)}(Mf)),Mf.exports}var Bf={exports:{}},hB=Bf.exports,fT;function dB(){return fT||(fT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.b,m=u.c,y=u.d,b=u.a;return p=p<<25^p>>>7^m,m=m-y|0,y=y<<24^y>>>8^b,b=b-p|0,u.b=p=p<<20^p>>>12^m,u.c=m=m-y|0,u.d=y<<16^m>>>16^b,u.a=b-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):h+=l;for(var f=0;f<h.length+20;f++)u.b^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.tychei=i})(hB,n)}(Bf)),Bf.exports}var Vf={exports:{}};const fB={},pB=Object.freeze(Object.defineProperty({__proto__:null,default:fB},Symbol.toStringTag,{value:"Module"})),mB=bF(pB);var gB=Vf.exports,pT;function yB(){return pT||(pT=1,function(n){(function(t,e,s){var a=256,r=6,i=52,l="random",u=s.pow(a,r),h=s.pow(2,i),f=h*2,p=a-1,m;function y(T,I,R){var F=[];I=I==!0?{entropy:!0}:I||{};var M=S(w(I.entropy?[T,$(e)]:T??C(),3),F),D=new b(F),O=function(){for(var A=D.g(r),W=u,K=0;A<h;)A=(A+K)*a,W*=a,K=D.g(1);for(;A>=f;)A/=2,W/=2,K>>>=1;return(A+K)/W};return O.int32=function(){return D.g(4)|0},O.quick=function(){return D.g(4)/4294967296},O.double=O,S($(D.S),e),(I.pass||R||function(A,W,K,tt){return tt&&(tt.S&&v(tt,D),A.state=function(){return v(D,{})}),K?(s[l]=A,W):A})(O,M,"global"in I?I.global:this==s,I.state)}function b(T){var I,R=T.length,F=this,M=0,D=F.i=F.j=0,O=F.S=[];for(R||(T=[R++]);M<a;)O[M]=M++;for(M=0;M<a;M++)O[M]=O[D=p&D+T[M%R]+(I=O[M])],O[D]=I;(F.g=function(A){for(var W,K=0,tt=F.i,Q=F.j,P=F.S;A--;)W=P[tt=p&tt+1],K=K*a+P[p&(P[tt]=P[Q=p&Q+W])+(P[Q]=W)];return F.i=tt,F.j=Q,K})(a)}function v(T,I){return I.i=T.i,I.j=T.j,I.S=T.S.slice(),I}function w(T,I){var R=[],F=typeof T,M;if(I&&F=="object")for(M in T)try{R.push(w(T[M],I-1))}catch{}return R.length?R:F=="string"?T:T+"\0"}function S(T,I){for(var R=T+"",F,M=0;M<R.length;)I[p&M]=p&(F^=I[p&M]*19)+R.charCodeAt(M++);return $(I)}function C(){try{var T;return m&&(T=m.randomBytes)?T=T(a):(T=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(T)),$(T)}catch{var I=t.navigator,R=I&&I.plugins;return[+new Date,t,R,t.screen,$(e)]}}function $(T){return String.fromCharCode.apply(0,T)}if(S(s.random(),e),n.exports){n.exports=y;try{m=mB}catch{}}else s["seed"+l]=y})(typeof self<"u"?self:gB,[],Math)}(Vf)),Vf.exports}var Db,mT;function bB(){if(mT)return Db;mT=1;var n=nB(),t=aB(),e=iB(),s=lB(),a=cB(),r=dB(),i=yB();return i.alea=n,i.xor128=t,i.xorwow=e,i.xorshift7=s,i.xor4096=a,i.tychei=r,Db=i,Db}var zm=bB();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w1{constructor(t,e,s,a,r){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=zm.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let t,e,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*a*l,e=this.mean+this.stdDev*r*l,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class xB{constructor(t,e,s,a){this.alpha=t,this.beta=1/e,this.dtype=s;const r=a||Math.random();this.randu=zm.alea(r.toString()),this.randn=new w1(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,t=a*a,e=1-.331*t*t,s=.5*t+this.d*(1-i+Math.log(i)),r=this.randu(),r<e||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class vB{constructor(t=0,e=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=zm.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,t,e=1,s="float32",a){if(Ds(n),e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new xB(t,e,s,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const SB=U({randomGamma_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,t=0,e=1,s,a){if(Ds(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new w1(t,e,s,!1,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const S1=U({randomNormal_:NB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return S1(n,0,1,t,e)}const TB=U({randomStandardNormal_:CB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,t=0,e=1,s="float32",a){Ds(n);const r=Ht(n,s),i=new vB(t,e,null,a);for(let l=0;l<r.values.length;l++)r.values[l]=i.nextValue();return r.toTensor()}const Ro=U({randomUniform_:$B});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,t,e,s){return Ro(n,t,e,"int32",s)}const IB=U({randomUniformInt_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const a={start:n,stop:t,step:e,dtype:s};return H.runKernel(_x,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n){const e={input:L(n,"input","real")};return H.runKernel(Fx,e)}const kc=U({real_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const e={x:L(n,"x","reciprocal")};return H.runKernel(gh,e)}const Nk=U({reciprocal_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const e={x:L(n,"x","relu")};return H.runKernel(yh,e)}const ja=U({relu_:RB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const e={x:L(n,"x","relu6")};return H.runKernel(bh,e)}const N1=U({relu6_:DB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n,t){const s={x:L(n,"x","reverse")},a={dims:t};return H.runKernel(fm,s,a)}const aa=U({reverse_:OB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const t=L(n,"x","reverse");return _(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),aa(t,0)}const FB=U({reverse1d_:_B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,t){const e=L(n,"x","reverse");return _(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),aa(e,t)}const zB=U({reverse2d_:LB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n,t){const e=L(n,"x","reverse");return _(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),aa(e,t)}const BB=U({reverse3d_:MB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,t){const e=L(n,"x","reverse");return _(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),aa(e,t)}const PB=U({reverse4d_:VB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const e={x:L(n,"x","round")};return H.runKernel(xh,e)}const C1=U({round_:UB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const e={x:L(n,"x","rsqrt","float32")};return H.runKernel(vh,e)}const T1=U({rsqrt_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const e={x:L(n,"x","selu")};return H.runKernel(wh,e)}const $1=U({selu_:GB});function HB(n,t,e,s,a,r=[1,1],i="NHWC"){const l=L(n,"x","separableConv2d"),u=L(t,"depthwiseFilter","separableConv2d"),h=L(e,"pointwiseFilter","separableConv2d");let f=l,p=!1;if(l.rank===3&&(p=!0,f=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(f.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`),_(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),_(h.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),_(h.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${h.shape[0]}.`),_(h.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${h.shape[1]}.`);const m=u.shape[2],y=u.shape[3];_(h.shape[2]===m*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*y}, but got ${h.shape[2]}.`);const b=zh(f,u,s,a,i,r),w=hi(b,h,1,"valid",i);return p?q(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const k1=U({separableConv2d_:HB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qB(n,t){const e=L(n,"x","setdiff1d"),s=L(t,"y","setdiff1d");_(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),_(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),_(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await e.data(),r=await s.data(),i=new Set(r);let l=0;for(let f=0;f<a.length;f++)i.has(a[f])||l++;const u=new an([l],e.dtype),h=new an([l],"int32");for(let f=0,p=0;f<a.length;f++)i.has(a[f])||(u.values[p]=a[f],h.values[p]=f,p++);return[u.toTensor(),h.toTensor()]}const jB=qB;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n){const e={x:L(n,"x","sign")};return H.runKernel(Ch,e)}const Ck=U({sign_:XB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n){const e={x:L(n,"x","sin","float32")};return H.runKernel(Sh,e)}const I1=U({sin_:KB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const e={x:L(n,"x","sinh")};return H.runKernel(Nh,e)}const E1=U({sinh_:YB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,t,e){const s=L(n,"x","slice1d");return _(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Wt(s,[t],[e])}const Mm=U({slice1d_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n,t,e){const s=L(n,"x","slice2d");return _(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Wt(s,t,e)}const A1=U({slice2d_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n,t,e){const s=L(n,"x","slice3d");return _(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Wt(s,t,e)}const Bm=U({slice3d_:JB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n,t,e){const s=L(n,"x","slice4d");return _(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Wt(s,t,e)}const Ic=U({slice4d_:t4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,t=-1){const e=L(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},a={dim:t};return H.runKernel(xm,s,a)}const Vm=U({softmax_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return H.runKernel(gx,t)}const Pm=U({fft_:n4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return H.runKernel(vx,t)}const Ec=U({ifft_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const a=q(n,[e,t]);s=Ec(a)}else{const a=[e,2*(t-1)],r=q(kc(n),[e,t]),i=q(Im(n),[e,t]),l=aa(Wt(r,[0,1],[e,t-2]),1),u=G(aa(Wt(i,[0,1],[e,t-2]),1),Lt(-1)),h=Ye([r,l],1),f=Ye([i,u],1),p=q(li(h,f),[a[0],a[1]]);s=Ec(p)}if(s=kc(s),n.rank===3&&n.shape[0]!==0){const a=s,r=n.shape[0];s=q(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const R1=U({irfft_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n,t,e=0){const a={x:L(n,"x","split")},r={numOrSizeSplits:t,axis:e};return H.runKernel(bm,a,r)}const hs=U({split_:r4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,t){_(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let a;if(t!=null&&t<e){const b=n.shape.map(w=>0),v=n.shape.map(w=>w);v[n.shape.length-1]=t,a=Wt(n,b,v),e=t}else if(t!=null&&t>e){const b=n.shape.map(v=>v);b[n.shape.length-1]=t-e,a=Ye([n,en(b)],n.shape.length-1),e=t}else a=n;const r=re(a),i=q(li(a,r),[s,e]),l=Pm(i),u=Math.floor(e/2)+1,h=kc(l),f=Im(l),p=hs(h,[u,e-u],h.shape.length-1),m=hs(f,[u,e-u],f.shape.length-1),y=a.shape.slice();return y[a.shape.length-1]=u,q(li(p[0],m[0]),y)}const Um=U({rfft_:i4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n,t){let e=L(n,"a","squaredDifference"),s=L(t,"b","squaredDifference");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s},r={};return H.runKernel(Ih,a,r)}const D1=U({squaredDifference_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,t){const e=L(n,"x","squeeze","string_or_numeric");return q(e,xi(e.shape,t).newShape)}const Sr=U({squeeze_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,t=0){const e=Yf(n,"tensors","stack","string_or_numeric");_(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&_(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,a={axis:t};return H.runKernel(im,s,a)}const ms=U({stack_:u4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n,t=0){const s={x:L(n,"x","step")},a={alpha:t};return H.runKernel(Oh,s,a)}const eu=U({step_:c4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n,t,e,s,a=0,r=0,i=0,l=0,u=0){const f={x:L(n,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};return H.runKernel(jx,f,p)}const Tk=U({stridedSlice_:h4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const e={x:L(n,"x","tan","float32")};return H.runKernel(Ah,e)}const $k=U({tan_:d4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(n,t){Kl(n);const e=wi(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Si(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(n,t,e){if(Kl(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=wi(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Si(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n,t,e){if(Kl(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=wi(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Si(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,t,e){if(Kl(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=wi(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Si(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,t,e){if(Kl(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=wi(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Si(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,t,e){if(Kl(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=wi(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Si(n,t,s,e)}function Ik(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${a}.`;if(e.rank<a)throw new Error(r+` update.rank < ${a}. `);if(n.length<s+(e.rank-a))throw new Error(r+` Output shape length < ${s+(e.rank-a)}`);if(e.rank!==a+n.length-s)throw new Error(r+` update.rank != ${a+n.length-s}`);for(let i=0;i<a;++i)if(e.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-a;++i)if(e.shape[i+a]!==n[i+s])throw new Error(r+` updates.shape[${i+a}] (${e.shape[i+a]}) != shape[${i+a}] (${n[i+a]})`)}function O1(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Ik(e,t,n)}function Do(n,t,e){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=e.length;let i=1;for(let p=a;p<r;++p)i*=e[p];const l=a<1?1:a,u=ht(t.shape)/l,h=[...Ft(e.slice(0,a)),1],f=ht(e);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:h,outputSize:f}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n,t,e){const s=L(n,"tensor","tensorScatterupdate"),a=L(t,"indices","tensorScatterupdate","int32"),r=L(e,"updates","tensorScatterupdate");if(O1(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},l={};return H.runKernel(Bx,i,l)}const y4=U({tensorScatterUpdate_:g4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,t=1,e=!0){const s=L(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const r={x:s},i={k:t,sorted:e},[l,u]=H.runKernel(Zx,r,i);return{values:l,indices:u}}const Ek=U({topk_:b4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n,t=0,e=1,s,a){if(Ds(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new w1(t,e,s,!0,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const _1=U({truncatedNormal_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,t=0){const e=L(n,"x","unique","string_or_numeric");_(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},a={axis:t},[r,i]=H.runKernel(Jx,s,a);return{values:r,indices:i}}const Ak=U({unique_:v4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,t,e){const s=L(n,"x","unsortedSegmentSum"),a=L(t,"segmentIds","unsortedSegmentSum","int32");_(zl(e),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:e};return H.runKernel(Sm,r,i)}const F1=U({unsortedSegmentSum_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,t=0){const e=L(n,"x","unstack","string_or_numeric");_(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},a={axis:t};return H.runKernel(wm,s,a)}const ra=U({unstack_:S4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,t){return x1(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,t=!0,e,s){return H.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const s=Ht(n,"int32"),a=Ht([e.length,n.length],"int32");for(let r=0;r<e.length;r++){const i=s.indexToLoc(e[r]),l=r*n.length;a.values.set(i,l)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function C4(n){const t=L(n,"condition","whereAsync","bool"),e=await t.data(),s=L1(t.shape,e);return n!==t&&t.dispose(),s}const Dk=C4;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T4(n,t,e){const s=L(n,"tensor","boolMask"),a=L(t,"mask","boolMask","bool"),r=e??0,i=a.rank,l=s.shape;_(i>0,()=>"mask cannot be scalar"),bs(l.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let v=r;v<r+i;v++)u*=l[v];const h=l.slice(0,r).concat([u],l.slice(r+i)),f=q(s,h),p=q(a,[-1]),m=await Dk(p),y=Sr(m,[1]),b=Ph(f,y,r);return n!==s&&s.dispose(),t!==a&&a.dispose(),y.dispose(),f.dispose(),p.dispose(),m.dispose(),b}const $4=T4;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n,t,e){const s=L(n,"x","transpose");if(t==null&&(t=s.shape.map((i,l)=>l).reverse()),_(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{_(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return s.dtype==="complex64"?nt(()=>{let i=kc(s),l=Im(s);return i=H.runKernel(Al,{x:i},r),l=H.runKernel(Al,{x:l},r),e&&(l=Ee(l)),li(i,l)}):H.runKernel(Al,a,r)}const ae=U({transpose_:k4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,t,e,s,a=!0){const r=L(n,"v","movingAverage"),i=L(t,"x","movingAverage"),l=L(e,"decay","movingAverage");m3(r,i),_(te(r.shape,i.shape),()=>"Shape mismatch in v and x");const u=Lt(1),h=kt(u,l);let f=G(kt(i,r),h);if(a){_(s!=null,()=>"When using zeroDebias: true, step is required.");const p=L(s,"step","movingAverage");f=Et(f,kt(u,vr(l,p)))}return yt(r,f)}const E4=U({movingAverage_:I4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,t,e){Ds(e);const s=L(n,"indices","scatterND","int32"),a=L(t,"updates","scatterND");O1(a,s,e);const r={indices:s,updates:a},i={shape:e};return H.runKernel(Mx,r,i)}const R4=U({scatterND_:A4});function D4(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const a=n.rank>0?n.shape[0]:1,r=n.rank>1?n.shape[1]:1;if(e.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${r}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n,t,e,s=0){Ds(e);const a=L(n,"sparseIndices","sparseToDense","int32"),r=L(t,"sparseValues","sparseToDense","string_or_numeric"),i=L(s,"defaultValue","sparseToDense",r.dtype);D4(a,r,e,i);const l={sparseIndices:a,sparseValues:r,defaultValue:i},u={outputShape:e};return H.runKernel(Hx,l,u)}const _4=U({sparseToDense_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n,t){const e=L(t,"indices","gatherND","int32"),a={params:L(n,"x","gatherND","string_or_numeric"),indices:e};return H.runKernel(xx,a)}const L4=U({gatherND_:F4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,t){if(t==null)return n.shape.slice();if(te(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n,t,e,s){const a=L(n,"x","dropout");if(_(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),_(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Ie?a.clone():a;const r=z4(a,e),i=1-t,l=Et(Vh(yt(Ro(r,0,1,"float32",s),i)),i);return G(a,l)}const Ok=U({dropout_:M4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function z1(n,t,e){const s=1-n%2,a=new Float32Array(n);for(let r=0;r<n;++r){const i=2*Math.PI*r/(n+s-1);a[r]=t-e*Math.cos(i)}return Nn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function B4(n,t,e=1){const s=L(n,"predictions","inTopK"),a=L(t,"targets","inTopK");_(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),_(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),bs(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];_(e>0&&e<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${e}`);const i=await s.data(),l=await a.data(),[u,h]=[i.length/r,r],f=Cn("bool",u);for(let p=0;p<u;p++){const m=p*h,y=i.subarray(m,m+h),b=[];for(let v=0;v<y.length;v++)b.push({value:y[v],index:v});b.sort((v,w)=>w.value-v.value),f[p]=0;for(let v=0;v<e;v++)if(b[v].index===l[p]){f[p]=1;break}}return n!==s&&s.dispose(),t!==a&&a.dispose(),va(f,a.shape,"bool")}const V4=B4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n,t,e,s,a,r="NHWC",i){let l=n;n.rank===3&&(l=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),_(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),_(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),_(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1],f=r==="NHWC"?u.shape[3]:u.shape[1];_(h===e[2],()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${e[2]}.`),_(f===e[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${e[3]}).`),Hn("conv2dDerFilter",a,i);const p={x:l,dy:u},m={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:e};return H.runKernel(ax,p,m)}const M1=U({conv2DBackpropFilter_:P4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wm(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return G(n,eu(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Gm(n,t){let e=t;const s=ln(n.shape,t.shape);return s.length>0&&(e=At(e,s)),q(e,n.shape)}function Hm(n,t,e,s){if(t==="linear")return n;if(t==="relu")return ja(n);if(t==="elu")return Mh(n);if(t==="relu6")return N1(n);if(t==="prelu")return Lm(n,e);if(t==="leakyrelu")return Em(n,s);if(t==="sigmoid")return wa(n);throw new Error(`Unknown fused activation ${t}.`)}const qm=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(u=u||"linear",qm(H.state.gradientDepth,u)===!1){_(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let R=hi(n,t,e,s,a,r,i);return l!=null&&(R=yt(R,l)),Hm(R,u,h,f)}const p=L(n,"x","conv2d","float32"),m=L(t,"filter","conv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),_(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),_(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),Hn("fused conv2d",s,i);const v=a==="NHWC"?y.shape[3]:y.shape[1];_(m.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${m.shape[2]}.`),_($n(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const w=mn(y.shape,m.shape,e,r,s,i);let S;l!=null&&(S=L(l,"bias","fused conv2d"),[S]=Me(S,p),a==="NHWC"?Pt(w.outShape,S.shape):(_(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),_(S.shape.length===0||S.shape[0]===w.outChannels||S.shape[0]===1,()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let C;if(h!=null){const R=h.shape;if(_(R.length<=1||R.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${R.length}.`),R.length===1)_(R[0]===1||R[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the number of output channels (${w.outChannels}).`);else if(R.length===3)try{Pt(R,w.outShape)}catch{const M=`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(M)}C=L(h,"prelu weights","fused conv2d")}const $=(R,F)=>{_(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[M,D,O,A]=F,W=Wm(R,O,u);_(ci(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const K=c1(D.shape,W,M,e,s),tt=M1(D,W,M.shape,e,s),Q=[K,tt];if(A!=null){const P=Gm(A,W);Q.push(P)}return Q},T={x:y,filter:m,bias:S,preluActivationWeights:C},I={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?wr((F,M,D)=>{let O=H.runKernel(qf,T,I);return D([M,F,O]),b&&(O=q(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:$}})(y,m):wr((F,M,D,O)=>{let A=H.runKernel(qf,T,I);return O([M,F,A,D]),b&&(A=q(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:$}})(y,m,S)}const Fk=U({fusedConv2d_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n,t,e,s,a,r=[1,1],i){let l=n;n.rank===3&&(l=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:u},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:e};return H.runKernel(hx,h,f)}const Lk=U({depthwiseConv2dNativeBackpropFilter_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n,t,e,s,a,r=[1,1],i){let l=t,u=!1;t.rank===3&&(u=!0,l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:e},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:n},p=H.runKernel(dx,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const zk=U({depthwiseConv2dNativeBackpropInput_:G4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(qm(H.state.gradientDepth,u)===!1){let I=zh(n,t,e,s,a,r,i);return l!=null&&(I=yt(I,l)),Hm(I,u,h,f)}const p=L(n,"x","depthwiseConv2d","float32"),m=L(t,"filter","depthwiseConv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),_(y.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),_(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),_(y.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),r==null&&(r=[1,1]),_($n(e,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),Hn("fused depthwiseConv2d",s,i);const v=mn(y.shape,m.shape,e,r,s,i,!0);let w;l!=null&&(w=L(l,"bias","fused conv2d"),[w]=Me(w,p),Pt(v.outShape,w.shape));let S;h!=null&&(S=L(h,"prelu weights","fused depthwiseConv2d"));const C=(I,R)=>{_(ci(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[F,M,D,O]=R,A=Wm(I,D,u),W=zk(M.shape,A,F,e,s,r,i),K=Lk(M,A,F.shape,e,s,r,i);if(O!=null){const tt=Gm(w,A);return[W,K,tt]}return[W,K]},$={x:y,filter:m,bias:w,preluActivationWeights:S},T={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?wr((R,F,M)=>{let D=H.runKernel(jf,$,T);return M([F,R,D]),b&&(D=q(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:C}})(y,m):wr((R,F,M,D)=>{let O=H.runKernel(jf,$,T);return D([F,R,O,M]),b&&(O=q(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:C}})(y,m,w)}const q4=U({fusedDepthwiseConv2d_:H4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:l=.2}){if(qm(H.state.gradientDepth,r)===!1){let A=Zt(n,t,e,s);return a!=null&&(A=yt(A,a)),Hm(A,r,i,l)}let u=L(n,"a","fused matMul"),h=L(t,"b","fused matMul");[u,h]=Me(u,h);const f=e?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?h.shape[h.rank-1]:h.shape[h.rank-2],m=e?u.shape[u.rank-1]:u.shape[u.rank-2],y=s?h.shape[h.rank-2]:h.shape[h.rank-1],b=u.shape.slice(0,-2),v=h.shape.slice(0,-2),w=ht(b),S=ht(v);_(f===p,()=>`Error in fused matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${u.shape} and ${h.shape} and transposeA=${e} and transposeB=${s} must match.`);const $=Pt(u.shape.slice(0,-2),h.shape.slice(0,-2)).concat([m,y]),T=e?q(u,[w,f,m]):q(u,[w,m,f]),I=s?q(h,[S,y,p]):q(h,[S,p,y]);let R;a!=null&&(R=L(a,"bias","fused matMul"),[R]=Me(R,u),Pt($,R.shape));let F;i!=null&&(F=L(i,"prelu weights","fused matMul"));const M=(A,W)=>{const[K,tt,Q,P]=W,et=Wm(q(A,Q.shape),Q,r);let Y,rt;if(!e&&!s?(Y=Zt(et,tt,!1,!0),rt=Zt(K,et,!0,!1)):!e&&s?(Y=Zt(et,tt,!1,!1),rt=Zt(et,K,!0,!1)):e&&!s?(Y=Zt(tt,et,!1,!0),rt=Zt(K,et,!1,!1)):(Y=Zt(tt,et,!0,!0),rt=Zt(et,K,!0,!0)),a!=null){const B=Gm(P,et);return[Y,rt,B]}else return[Y,rt]},D={a:T,b:I,bias:R,preluActivationWeights:F},O={transposeA:e,transposeB:s,activation:r,leakyreluAlpha:l};return a==null?wr((W,K,tt)=>{const Q=H.runKernel(Hf,D,O);return tt([W,K,Q]),{value:q(Q,$),gradFunc:M}})(T,I):wr((W,K,tt,Q)=>{const P=H.runKernel(Hf,D,O);return Q([W,K,P,tt]),{value:q(P,$),gradFunc:M}})(T,I,R)}const g0=U({fusedMatMul_:j4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Fk,depthwiseConv2d:q4,matMul:g0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n){return z1(n,.54,.46)}const Y4=U({hammingWindow_:K4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n){return z1(n,.5,.5)}const Mk=U({hannWindow_:Z4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(n,t,e,s=!1,a=0){let r=0;const i=[];for(;r+t<=n.size;)i.push(Wt(n,r,t)),r+=e;if(s)for(;r<n.size;){const l=r+t-n.size,u=Ye([Wt(n,r,t-l),Jl([l],a)]);i.push(u),r+=e}return i.length===0?_l([],[0,t]):q(Ye(i),[i.length,t])}const Bk=U({frame_:Q4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n,t,e,s,a=Mk){s==null&&(s=_k(t));const r=Bk(n,t,e),i=G(r,a(t));return Um(i,s)}const tV=U({stft_:J4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n,t,e,s,a="bilinear",r=0){const i=L(n,"image","cropAndResize"),l=L(t,"boxes","cropAndResize","float32"),u=L(e,"boxInd","cropAndResize","int32"),h=l.shape[0];_(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),_(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`),_(u.rank===1&&u.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`),_(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),_(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),_(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const f={image:i,boxes:l,boxInd:u},p={method:a,extrapolationValue:r,cropSize:s};return H.runKernel(lx,f,p)}const nV=U({cropAndResize_:eV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n){const t=L(n,"image","flipLeftRight","float32");_(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return H.runKernel(bx,e,{})}const aV=U({flipLeftRight_:sV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n){const t=L(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];_(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),_(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(t.rank);return a.fill(1,0,e),a[e]=3,Qs(t,a)}const iV=U({grayscaleToRGB_:rV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n){const t=L(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];_(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),_(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=t.dtype,r=Nt(t,"float32"),i=Nn([.2989,.587,.114]);let l;switch(t.rank){case 2:l=Il("ij,j->i",r,i);break;case 3:l=Il("ijk,k->ij",r,i);break;case 4:l=Il("ijkl,l->ijk",r,i);break;case 5:l=Il("ijklm,m->ijkl",r,i);break;case 6:l=Il("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return l=On(l,-1),Nt(l,a)}const lV=U({rgbToGrayscale_:oV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n,t,e=0,s=.5){const a=L(n,"image","rotateWithOffset","float32");_(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:t,fillValue:e,center:s};return H.runKernel(t1,r,i)}const cV=U({rotateWithOffset_:uV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n,t,e,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return e=Math.min(e,i),_(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),_(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),_(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),_(t.rank===1,()=>"scores must be a 1D tensor"),_(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),_(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=L(n,"boxes","nonMaxSuppression","float32"),i=L(t,"scores","nonMaxSuppression","float32"),l=nu(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:a};return H.runKernel(Ix,{boxes:r,scores:i},u)}const dV=U({nonMaxSuppression_:hV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n,t,e){const s=pV(n,t,e),a=s<0?-(s+1):s;n.splice(a,0,t)}function pV(n,t,e){return gV(n,t,e||mV)}function mV(n,t){return n>t?1:n<t?-1:0}function gV(n,t,e){let s=0,a=n.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const l=e(t,n[r]);l>0?s=r+1:(a=r,i=!l)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,t,e,s,a){return U1(n,t,e,s,a,0)}function V1(n,t,e,s,a,r){return U1(n,t,e,s,a,0,!1,r,!0)}function P1(n,t,e,s,a,r){return U1(n,t,e,s,a,r,!0)}function U1(n,t,e,s,a,r,i=!1,l=!1,u=!1){const h=[];for(let w=0;w<t.length;w++)t[w]>a&&h.push({score:t[w],boxIndex:w,suppressBeginIndex:0});h.sort(gT);const f=r>0?-.5/r:0,p=[],m=[];for(;p.length<e&&h.length>0;){const w=h.pop(),{score:S,boxIndex:C,suppressBeginIndex:$}=w;if(S<a)break;let T=!1;for(let I=p.length-1;I>=$;--I){const R=yV(n,C,p[I]);if(R>=s){T=!0;break}if(w.score=w.score*bV(s,f,R),w.score<=a)break}w.suppressBeginIndex=p.length,T||(w.score===S?(p.push(C),m.push(w.score)):w.score>a&&fV(h,w,gT))}const y=p.length,b=e-y;l&&b>0&&(p.push(...new Array(b).fill(0)),m.push(...new Array(b).fill(0)));const v={selectedIndices:p};return i&&(v.selectedScores=m),u&&(v.validOutputs=y),v}function yV(n,t,e){const s=n.subarray(t*4,t*4+4),a=n.subarray(e*4,e*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),h=Math.min(a[0],a[2]),f=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),m=Math.max(a[1],a[3]),y=(l-r)*(u-i),b=(p-h)*(m-f);if(y<=0||b<=0)return 0;const v=Math.max(r,h),w=Math.max(i,f),S=Math.min(l,p),C=Math.min(u,m),$=Math.max(S-v,0)*Math.max(C-w,0);return $/(y+b-$)}function bV(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function gT(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=L(n,"boxes","nonMaxSuppressionAsync"),i=L(t,"scores","nonMaxSuppressionAsync"),l=nu(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u=await Promise.all([r.data(),i.data()]),h=u[0],f=u[1],{selectedIndices:p}=B1(h,f,e,s,a);return r!==n&&r.dispose(),i!==t&&i.dispose(),Nn(p,"int32")}const vV=xV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=L(n,"boxes","nonMaxSuppression"),l=L(t,"scores","nonMaxSuppression"),u=nu(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h={boxes:i,scores:l},f={maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},p=H.runKernel(Ax,h,f);return{selectedIndices:p[0],selectedScores:p[1]}}const SV=U({nonMaxSuppressionWithScore_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=L(n,"boxes","nonMaxSuppressionAsync"),l=L(t,"scores","nonMaxSuppressionAsync"),u=nu(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h=await Promise.all([i.data(),l.data()]),f=h[0],p=h[1],{selectedIndices:m,selectedScores:y}=P1(f,p,e,s,a,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Nn(m,"int32"),selectedScores:Nn(y)}}const CV=NV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=L(n,"boxes","nonMaxSuppression"),l=L(t,"scores","nonMaxSuppression"),u=nu(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:l},y={maxOutputSize:h,iouThreshold:f,scoreThreshold:p,padToMaxOutputSize:r},b=H.runKernel(Ex,m,y);return{selectedIndices:b[0],validOutputs:b[1]}}const $V=U({nonMaxSuppressionPadded_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function kV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=L(n,"boxes","nonMaxSuppressionAsync"),l=L(t,"scores","nonMaxSuppressionAsync"),u=nu(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,[m,y]=await Promise.all([i.data(),l.data()]),{selectedIndices:b,validOutputs:v}=V1(m,y,h,f,p,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Nn(b,"int32"),validOutputs:Lt(v,"int32")}}const IV=kV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n,t,e=!1,s=!1){const a=L(n,"images","resizeBilinear");_(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),_(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),_(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=H.runKernel(dm,l,u);return i?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Vk=U({resizeBilinear_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,t,e=!1,s=!1){const a=L(n,"images","resizeNearestNeighbor");_(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),_(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),_(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),_(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=H.runKernel(hm,l,u);return i?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Pk=U({resizeNearestNeighbor_:AV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,t="binary",e=!1,s=.5){const a=L(n,"image","threshold"),r=.2989,i=.587,l=.114,u=a.shape[0]*a.shape[1];let h=G(Nn([s]),255),f,p,m,y;if(_(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),_(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),_(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),_(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[f,p,m]=hs(a,[1,1,1],-1);const w=G(f,r),S=G(p,i),C=G(m,l);y=yt(yt(w,S),C)}else y=n;if(t==="otsu"){const w=Y$(Nt(C1(y),"int32"),va([]),256);h=DV(w,u)}const b=e?Ao(y,h):xs(y,h);return Nt(G(b,255),"int32")}function DV(n,t){let e=Nn([-1]),s=Nn([0]),a=Nn([0]),r,i,l,u,h,f;for(let p=0;p<n.size-1;p++){r=Wt(n,0,p+1),i=Wt(n,p+1),h=Et(At(r),t),f=Et(At(i),t);const m=At(G(r,Ul(0,r.size)));l=Et(m,At(r));const y=Jl(i.shape,r.size),b=yt(Ul(0,i.size),y),v=G(i,b);u=Et(At(v),At(i));const w=kt(l,u),S=kt(l,u),C=G(h,f);a=G(G(C,w),S);const $=xs(a,s);s=_n($,a,s),e=_n($,Nn([p]),e)}return e}const OV=U({threshold_:RV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n,t,e="nearest",s="constant",a=0,r){const i=L(n,"image","transform","float32"),l=L(t,"transforms","transform","float32");_(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),_(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),_(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const u={image:i,transforms:l},h={interpolation:e,fillMode:s,fillValue:a,outputShape:r};return H.runKernel(Qx,u,h)}const FV=U({transform_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n,t,e){const s=L(n,"a","bandPart");_(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let l,u;typeof t=="number"?(_(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),_(t<=r,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`),l=L(t<0?r:t,"numLower","bandPart")):(_(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=_n($c(t,0),r,So(t,r))),typeof e=="number"?(_(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),_(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),u=L(e<0?i:e,"numUpper","bandPart")):(_(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=_n($c(e,0),i,So(e,i)));const h=q(Ul(0,r,1,"int32"),[-1,1]),f=Ul(0,i,1,"int32"),p=kt(h,f),m=Ga(Ao(p,l),Ti(p,Ee(u))),y=en([r,i],s.dtype);return q(ms(ra(q(s,[-1,r,i])).map(b=>_n(m,b,y))),a)}const zV=U({bandPart_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){let t;if(Array.isArray(n)){t=!1,_(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=n[0].shape[0];for(let r=1;r<n.length;++r)_(n[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${a})`)}else t=!0,n=hs(n,n.shape[0],0).map(a=>Sr(a,[0]));_(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let a=0;a<n.length;++a)e.push(H.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const l=G(At(G(e[i],r)),e[i]);r=kt(r,l)}return Et(r,Bh(r,"euclidean"))}));return t?ms(e,0):e}const BV=U({gramSchmidt_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,t=!1){if(_(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return yT(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,h)=>u*h),s=ra(q(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),a=[],r=[];s.forEach(u=>{const[h,f]=yT(u,t);a.push(h),r.push(f)});const i=q(ms(a,0),n.shape),l=q(ms(r,0),n.shape);return[i,l]}}function yT(n,t=!1){return H.tidy(()=>{_(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let a=g1(e),r=br(n);const i=_l([[1]],[1,1]);let l=br(i);const u=e>=s?s:e;for(let h=0;h<u;++h){const f=r,p=l,m=a;[l,r,a]=H.tidy(()=>{const y=Wt(r,[h,h],[e-h,1]),b=Bh(y),v=Wt(r,[h,h],[1,1]),w=_n(xs(v,0),_l([[-1]]),_l([[1]])),S=kt(v,G(w,b)),C=Et(y,S);C.shape[0]===1?l=br(i):l=Ye([i,Wt(C,[1,0],[C.shape[0]-1,C.shape[1]])],0);const $=Ee(Et(Zt(w,S),b)),T=Wt(r,[h,0],[e-h,s]),I=G($,l),R=ae(l);if(h===0)r=kt(T,Zt(I,Zt(R,T)));else{const D=kt(T,Zt(I,Zt(R,T)));r=Ye([Wt(r,[0,0],[h,s]),D],0)}const F=ae(I),M=Wt(a,[0,h],[e,a.shape[1]-h]);if(h===0)a=kt(M,Zt(Zt(M,l),F));else{const D=kt(M,Zt(Zt(M,l),F));a=Ye([Wt(a,[0,0],[e,h]),D],1)}return[l,r,a]}),jt([f,p,m])}return!t&&e>s&&(a=Wt(a,[0,0],[e,s]),r=Wt(r,[0,0],[s,s])),[a,r]})}const PV=U({qr_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Jn||(Jn={}));function UV(n,t,e=Jn.SUM_BY_NONZERO_WEIGHTS){const s=L(n,"losses","computeWeightedLoss");let a=null;t!=null&&(a=L(t,"weights","computeWeightedLoss"));const r=a==null?s:G(s,a);if(e===Jn.NONE)return r;if(e===Jn.SUM)return At(r);if(e===Jn.MEAN){if(a==null)return ze(r);{const i=s.size/a.size,l=Et(At(r),At(a));return i>1?Et(l,Lt(i)):l}}if(e===Jn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return Et(At(r),Lt(s.size));{const i=G(a,us(s.shape)),l=Nt(At(Pl(i,Lt(0))),"float32");return Et(At(r),l)}}throw Error(`Unknown reduction: ${e}`)}const Ir=U({computeWeightedLoss_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n,t,e,s=Jn.SUM_BY_NONZERO_WEIGHTS){const a=L(n,"labels","absoluteDifference"),r=L(t,"predictions","absoluteDifference");let i=null;e!=null&&(i=L(e,"weights","absoluteDifference")),bs(a.shape,r.shape,"Error in absoluteDifference: ");const l=tn(kt(a,r));return Ir(l,i,s)}const GV=U({absoluteDifference_:WV});function HV(n,t,e,s,a=Jn.SUM_BY_NONZERO_WEIGHTS){const r=L(n,"labels","cosineDistance"),i=L(t,"predictions","cosineDistance");let l=null;s!=null&&(l=L(s,"weights","cosineDistance")),bs(r.shape,i.shape,"Error in cosineDistance: ");const u=Lt(1),h=kt(u,At(G(r,i),e,!0));return Ir(h,l,a)}const qV=U({cosineDistance_:HV});function jV(n,t,e,s=Jn.SUM_BY_NONZERO_WEIGHTS){let a=L(n,"labels","hingeLoss");const r=L(t,"predictions","hingeLoss");let i=null;e!=null&&(i=L(e,"weights","hingeLoss")),bs(a.shape,r.shape,"Error in hingeLoss: ");const l=Lt(1);a=kt(G(Lt(2),a),l);const u=ja(kt(l,G(a,r)));return Ir(u,i,s)}const XV=U({hingeLoss_:jV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n,t,e,s=1,a=Jn.SUM_BY_NONZERO_WEIGHTS){const r=L(n,"labels","huberLoss"),i=L(t,"predictions","huberLoss");let l=null;e!=null&&(l=L(e,"weights","huberLoss")),bs(r.shape,i.shape,"Error in huberLoss: ");const u=Lt(s),h=tn(kt(i,r)),f=So(h,u),p=kt(h,f),m=yt(G(Lt(.5),we(f)),G(u,p));return Ir(m,l,a)}const YV=U({huberLoss_:KV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,t,e,s=1e-7,a=Jn.SUM_BY_NONZERO_WEIGHTS){const r=L(n,"labels","logLoss"),i=L(t,"predictions","logLoss");let l=null;e!=null&&(l=L(e,"weights","logLoss")),bs(r.shape,i.shape,"Error in logLoss: ");const u=Lt(1),h=Lt(s),f=Ee(G(r,As(yt(i,h)))),p=G(kt(u,r),As(yt(kt(u,i),h))),m=kt(f,p);return Ir(m,l,a)}const QV=U({logLoss_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,t,e,s=Jn.SUM_BY_NONZERO_WEIGHTS){const a=L(n,"labels","meanSquaredError"),r=L(t,"predictions","meanSquaredError");let i=null;e!=null&&(i=L(e,"weights","meanSquaredError")),bs(a.shape,r.shape,"Error in meanSquaredError: ");const l=D1(a,r);return Ir(l,i,s)}const tP=U({meanSquaredError_:JV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n,t){const e=L(n,"labels","sigmoidCrossEntropyWithLogits"),s=L(t,"logits","sigmoidCrossEntropyWithLogits");bs(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ja(s),r=G(s,e),i=Am(ps(Ee(tn(s))));return yt(kt(a,r),i)}function nP(n,t,e,s=0,a=Jn.SUM_BY_NONZERO_WEIGHTS){let r=L(n,"multiClassLabels","sigmoidCrossEntropy");const i=L(t,"logits","sigmoidCrossEntropy");let l=null;if(e!=null&&(l=L(e,"weights","sigmoidCrossEntropy")),bs(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const h=Lt(s),f=Lt(1),p=Lt(.5);r=yt(G(r,kt(f,h)),G(p,h))}const u=eP(r,i);return Ir(u,l,a)}const sP=U({sigmoidCrossEntropy_:nP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return wr((a,r,i)=>{const u=Rm(r,[e],!0),h=kt(Nt(r,"float32"),u);i([a,h]);const f=Ee(G(h,a));return{value:At(f,[e]),gradFunc:(y,b)=>{const[v,w]=b,S=He(y.shape,[e]);return[G(q(y,S),kt(Nt(v,"float32"),ps(w))),G(q(y,S),kt(ps(w),Nt(v,"float32")))]}}})(n,t)}function rP(n,t,e,s=0,a=Jn.SUM_BY_NONZERO_WEIGHTS){let r=L(n,"onehotLabels","softmaxCrossEntropy");const i=L(t,"logits","softmaxCrossEntropy");let l=null;if(e!=null&&(l=L(e,"weights","softmaxCrossEntropy")),bs(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const h=Lt(s),f=Lt(1),p=Lt(r.shape[1]);r=yt(G(r,kt(f,h)),Et(h,p))}const u=aP(r,i);return Ir(u,l,a)}const iP=U({softmaxCrossEntropy_:rP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,t,e,s){const a=L(n,"indices","sparseFillEmptyRows","int32"),r=L(t,"values","sparseFillEmptyRows"),i=L(e,"denseShape","sparseFillEmptyRows","int32"),l=L(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const u={indices:a,values:r,denseShape:i,defaultValue:l},h=H.runKernel(Px,u);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}const lP=U({sparseFillEmptyRows_:oP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,t,e){const s=L(n,"inputIndices","sparseReshape","int32"),a=L(t,"inputShape","sparseReshape","int32"),r=L(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},l=H.runKernel(Ux,i);return{outputIndices:l[0],outputShape:l[1]}}const cP=U({sparseReshape_:uP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n,t,e){const s=L(n,"data","sparseSegmentMean"),a=L(t,"indices","sparseSegmentMean","int32"),r=L(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return H.runKernel(Wx,i)}const dP=U({sparseSegmentMean_:hP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,t,e){const s=L(n,"data","sparseSegmentSum"),a=L(t,"indices","sparseSegmentSum","int32"),r=L(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return H.runKernel(Gx,i)}const pP=U({sparseSegmentSum_:fP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,t,e,s,a,r,i,l){const u=L(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const h=L(t,"dataSplits","stringNGrams");if(h.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const f={separator:e,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:l},p={data:u,dataSplits:h},m=H.runKernel(Xx,p,f);return{nGrams:m[0],nGramsSplits:m[1]}}const gP=U({stringNGrams_:mP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n,t,e=!0){const s=L(n,"input","stringSplit","string"),a=L(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:e},i={input:s,delimiter:a},l=H.runKernel(Kx,i,r);return{indices:l[0],values:l[1],shape:l[2]}}const bP=U({stringSplit_:yP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n,t){const e=L(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:e};return H.runKernel(Yx,a,s)}const vP=U({stringToHashBucketFast_:xP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n,t,e,s=!0){const a=L(n,"input","staticRegexReplace","string"),r={pattern:t,rewrite:e,replaceGlobal:s};return H.runKernel(vm,{x:a},r)}const SP=U({staticRegexReplace_:wP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NP={fft:Pm,ifft:Ec,rfft:Um,irfft:R1},CP={hammingWindow:Y4,hannWindow:Mk,frame:Bk,stft:tV},cs={flipLeftRight:aV,grayscaleToRGB:iV,resizeNearestNeighbor:Pk,resizeBilinear:Vk,rgbToGrayscale:lV,rotateWithOffset:cV,cropAndResize:nV,nonMaxSuppression:dV,nonMaxSuppressionAsync:vV,nonMaxSuppressionWithScore:SV,nonMaxSuppressionWithScoreAsync:CV,nonMaxSuppressionPadded:$V,nonMaxSuppressionPaddedAsync:IV,threshold:OV,transform:FV},Uk={bandPart:zV,gramSchmidt:BV,qr:PV},TP={absoluteDifference:GV,computeWeightedLoss:Ir,cosineDistance:qV,hingeLoss:XV,huberLoss:YV,logLoss:QV,meanSquaredError:tP,sigmoidCrossEntropy:sP,softmaxCrossEntropy:iP},$P={sparseFillEmptyRows:lP,sparseReshape:cP,sparseSegmentMean:dP,sparseSegmentSum:pP},kP={stringNGrams:gP,stringSplit:bP,stringToHashBucketFast:vP,staticRegexReplace:SP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP=new Map,EP=new Map;class su{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Zs{constructor(){this.classNameMap={}}static getMap(){return Zs.instance==null&&(Zs.instance=new Zs),Zs.instance}static register(t){Zs.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function xt(n,t,e){_(n.className!=null,()=>"Class being registered does not have the static className property defined."),_(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),_(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,a=t+">"+s;return Zs.register(n),IP.set(a,n),EP.set(n,a),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ki extends su{minimize(t,e=!1,s){const{value:a,grads:r}=this.computeGradients(t,s);if(s!=null){const i=s.map(l=>({name:l.name,tensor:r[l.name]}));this.applyGradients(i)}else this.applyGradients(r);return jt(r),e?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Jz(t,e)}dispose(){this.iterations_!=null&&jt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Lt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ki,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wk extends ki{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=H.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=H.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:nt(()=>re(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:nt(()=>re(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedGrads[a].variable,h=this.accumulatedUpdates[a].variable;nt(()=>{const f=yt(G(u,this.rho),G(we(l),1-this.rho)),p=G(Et(Tn(yt(h,this.epsilon)),Tn(yt(u,this.epsilon))),l),m=yt(G(h,this.rho),G(we(p),1-this.rho));u.assign(f),h.assign(m);const y=yt(G(p,-this.learningRate),r);r.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(jt(this.accumulatedGrads.map(t=>t.variable)),jt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gk extends ki{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=H.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:nt(()=>Jl(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[a].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[a].variable;nt(()=>{const u=yt(l,we(i));l.assign(u);const h=yt(G(Et(i,Tn(yt(u,H.backend.epsilon()))),-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&jt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hk extends ki{static get className(){return"Adam"}constructor(t,e,s,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],nt(()=>{this.accBeta1=Lt(e).variable(),this.accBeta2=Lt(s).variable()}),a==null&&(this.epsilon=H.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=kt(1,this.accBeta2);e.forEach((r,i)=>{const l=H.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:nt(()=>re(l).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:nt(()=>re(l).variable(u))});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=yt(G(f,this.beta1),G(h,1-this.beta1)),y=yt(G(p,this.beta2),G(we(h),1-this.beta2)),b=Et(m,s),v=Et(y,a);f.assign(m),p.assign(y);const w=yt(G(Et(b,yt(Tn(v),this.epsilon)),-this.learningRate),l);l.assign(w)}),this.accBeta1.assign(G(this.accBeta1,this.beta1)),this.accBeta2.assign(G(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&jt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&jt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),nt(()=>{this.accBeta1.assign(vr(this.beta1,this.iterations_+1)),this.accBeta2.assign(vr(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qk extends ki{static get className(){return"Adamax"}constructor(t,e,s,a=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],nt(()=>{this.iteration=Lt(0).variable(),this.accBeta1=Lt(e).variable()}),a==null&&(this.epsilon=H.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=Et(-this.learningRate,yt(G(this.iteration,this.decay),1));e.forEach((r,i)=>{const l=H.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:re(l).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:re(l).variable(u)});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=yt(G(f,this.beta1),G(h,1-this.beta1)),y=G(p,this.beta2),b=tn(h),v=kr(y,b);f.assign(m),p.assign(v);const w=yt(G(Et(a,s),Et(m,yt(v,this.epsilon))),l);l.assign(w)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(G(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&jt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&jt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W1 extends ki{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=Array.isArray(t)?t[a].tensor:t[s];if(r==null)return;const i=H.registeredVariables[s];nt(()=>{const l=yt(G(this.c,r),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=fn(Lt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jk extends W1{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Lt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=H.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:nt(()=>re(r).variable(!1))});const i=this.accumulations[a].variable,l=Array.isArray(t)?t[a].tensor:t[s];l!=null&&nt(()=>{let u;const h=yt(G(this.m,i),l);this.useNesterov?u=yt(G(this.c,yt(l,G(h,this.m))),r):u=yt(G(this.c,h),r),i.assign(h),r.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&jt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xk extends ki{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,a=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=H.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=H.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:nt(()=>re(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:nt(()=>re(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:nt(()=>re(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedMeanSquares[a].variable,h=this.accumulatedMoments[a].variable;nt(()=>{const f=yt(G(u,this.decay),G(we(l),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[a].variable,m=yt(G(p,this.decay),G(l,1-this.decay)),y=Et(G(l,this.learningRate),Tn(kt(f,yt(we(m),this.epsilon)))),b=yt(G(h,this.momentum),y);u.assign(f),p.assign(m),h.assign(b);const v=kt(r,b);r.assign(v)}else{const p=yt(G(u,this.decay),G(we(l),1-this.decay)),m=yt(G(h,this.momentum),Et(G(l,this.learningRate),Tn(yt(p,this.epsilon))));u.assign(p),h.assign(m);const y=kt(r,m);r.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&jt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&jt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&jt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP=[Wk,Gk,Hk,qk,jk,Xk,W1];function RP(){for(const n of AP)xt(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP="model",OP=".json",_P=".weights.bin";function bT(n){return new Promise(t=>setTimeout(t)).then(n)}class No{constructor(t){if(!at().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(No.URL_SCHEME)&&(t=t.slice(No.URL_SCHEME.length)),(t==null||t.length===0)&&(t=DP),this.modelJsonFileName=t+OP,this.weightDataFileName=t+_P}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=ka.join(t.weightData),s=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=k$(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=i,await bT(()=>l.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=s,await bT(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:_h(t)}}}}No.URL_SCHEME="downloads://";class FP{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const u=a1(r,h=>this.loadWeights(h));t(u)},s.onerror=a=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const i of t)e.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(t),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const l=i.target.result;s(l)},r.onerror=i=>a(`Failed to weights data from file of path '${t}'.`),r.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(r=>oT(r.name)),a={};for(const r of t)r.paths.forEach(i=>{const l=oT(i);if(e.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(e.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(l)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const LP=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(No.URL_SCHEME)?zP(n.slice(No.URL_SCHEME.length)):null;De.registerSaveRouter(LP);function zP(n="model"){return new No(n)}function MP(n){return new FP(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,t,e,s){i(n),e=e??0,s=s??1,l(e,s);let a=0;const r=u=>(u.then(h=>{const f=e+ ++a/n.length*(s-e);return t(f),h}),u);function i(u){_(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,h){_(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),_(h>=0&&h<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${h}`),_(h>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${h}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Kk(n,t){t==null&&(t={});const e=t.fetchFunc==null?at().platform.fetch:t.fetchFunc,s=n.map(p=>e(p,t.requestInit,{isBinary:!0})),l=(t.onProgress==null?await Promise.all(s):await xT(s,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?await Promise.all(l):await xT(l,t.onProgress,.5,1)}function BP(n,t){var e;const s=t.fetchFunc==null?at().platform.fetch:t.fetchFunc;let a=0,r;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async i=>{for(var l;a<n.length;){r||(r=(await s(n[a],t.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:h}=await r.read();if(u){a++,r=void 0,(l=t.onProgress)===null||l===void 0||l.call(t,a/n.length);continue}i.enqueue(h);return}i.close()}})}async function VP(n,t="",e,s){return Yk(i=>Kk(i,{requestInit:s}))(n,t,e)}function Yk(n){return async(t,e="",s)=>{const a=t.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],l=[];if(t.forEach((y,b)=>{let v=0;y.weights.forEach(w=>{const S="quantization"in w?w.quantization.dtype:w.dtype,C=yo[S]*ht(w.shape),$=()=>{a[b]=!0,r[b]==null&&(r[b]=[]),r[b].push({manifestEntry:w,groupOffset:v,sizeBytes:C})};s!=null?s.forEach((T,I)=>{T===w.name&&($(),i[I]=!0)}):$(),l.push(w.name),v+=C})}),!i.every(y=>y)){const y=s.filter((b,v)=>!i[v]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const u=a.reduce((y,b,v)=>(b&&y.push(v),y),[]),h=[];u.forEach(y=>{t[y].paths.forEach(b=>{const v=e+(e.endsWith("/")?"":"/")+b;h.push(v)})});const f=await n(h),p={};let m=0;return u.forEach(y=>{const b=t[y].paths.length,v=new ka(f.slice(m,m+b));r[y].forEach(S=>{const C=v.slice(S.groupOffset,S.groupOffset+S.sizeBytes),$=N$(C,[S.manifestEntry]);for(const T in $)p[T]=$[T]}),m+=b}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PP="application/octet-stream",UP="application/json";class G1{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(_(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=at().platform.fetch,_(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&_(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=k$(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:UP}),"model.json"),t.weightData!=null){const i=ka.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:PP}),"model.weights.bin")}const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:_h(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,a=e.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return a1(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=c0(t.weightsManifest),a=()=>BP(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=WP(e),r=this.weightPathPrefix||s,i=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(r+h+a);return this.weightUrlConverter&&i.push(...await Promise.all(l)),i}async loadWeights(t){const e=await this.getWeightUrls(t),s=c0(t),a=await Kk(e,this.loadOptions);return[s,a]}}G1.URL_SCHEME_REGEX=/^https?:\/\//;function WP(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),a=e>t?n.substring(e):"";return[s+"/",a]}function y0(n){return n.match(G1.URL_SCHEME_REGEX)!=null}const Zk=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>y0(s)):e=y0(n),e)return H1(n,t)}return null};De.registerSaveRouter(Zk);De.registerLoadRouter(Zk);function H1(n,t){return new G1(n,t)}function GP(n,t){return H1(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ob{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Qk{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class HP{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function qP(n,t,e,s){const a=arguments;return new HP(Jk(...a))}function Jk(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Ob(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ob({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ob({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function jP(n){return new Qk(n)}function XP(n){return new Qk(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:ka,browserFiles:MP,browserHTTPRequest:GP,concatenateArrayBuffers:$$,copyModel:X3,decodeWeights:N$,decodeWeightsStream:T$,encodeWeights:u0,fromMemory:qP,fromMemorySync:Jk,getLoadHandlers:_3,getModelArtifactsForJSON:a1,getModelArtifactsForJSONSync:I$,getModelArtifactsInfoForJSON:_h,getSaveHandlers:E$,getWeightSpecs:c0,http:H1,isHTTPScheme:y0,listModels:q3,loadWeights:VP,moveModel:K3,registerLoadRouter:O3,registerSaveRouter:D3,removeModel:j3,weightsLoaderFactory:Yk,withSaveHandler:jP,withSaveHandlerSync:XP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let to;function KP(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,a=!1,r=!1,i=!1,l=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(s0(e0,H.backendName)!=null){const b={pixels:n},v={numChannels:t};return H.runKernel(e0,b,v)}const[h,f]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(i)p=n.getContext("2d").getImageData(0,0,h,f).data;else if(s||e)p=n.data;else if(r||a||l){if(to==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")to=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else to=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});to.canvas.width=h,to.canvas.height=f,to.drawImage(n,0,0,h,f),p=to.getImageData(0,0,h,f).data}let m;if(t===4)m=new Int32Array(p);else{const b=h*f;m=new Int32Array(b*t);for(let v=0;v<b;v++)for(let w=0;w<t;++w)m[v*t+w]=p[v*4+w]}return kk(m,[f,h,t],"int32")}const YP=U({fromPixels_:KP});function q1(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(ht(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const a=t.shape,r=a[a.length-1];let i=1;for(let p=0;p<a.length-1;++p)i*=a[p];const l=n.shape,u=a.slice();u.pop();let h=1;for(let p=r;p<e;++p)h*=l[p],u.push(l[p]);const f=[...Ft(n.shape).map(p=>p/h),1].slice(0,r);return[u,i,h,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b0=-2,ZP=-1;function j1(n,t,e){const s=n.shape.length;_(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),_(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)_(t[a]+e[a]<=n.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+e[a]}) would overflow input.shape[${a}] (${n.shape[a]})`)}function QP(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function X1(n,t,e){const s=[];for(let a=0;a<n.length;a++)s[a]=Math.ceil((t[a]-n[a])/e[a]);return s}function eI(n,t,e,s){const a=[...n];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<e;r++)r===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function nI(n,t,e){return e<=n?e:e-(t-1)}function sI(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function JP(n,t,e,s,a,r,i,l,u){const h=n.length;let f=new Array(h),p=new Array(h),m=new Array(h);if(t.length&&e>0){const y=t[0],b=e+1;f=aI(i,y,b,s,n),p=rI(l,y,b,a,n),m=eI(r,y,b,n)}else for(let y=0;y<h;y++)f[y]=oI(i,s,r,n,y,u),p[y]=lI(l,a,r,n,y,u),m[y]=iI(r,y,u);return{begin:f,end:p,strides:m}}function aI(n,t,e,s,a){const r=[...a],i=sI(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=0;else{const u=nI(t,e,l);let h=s[u];n&1<<u&&(h=0),r[l]=h}return r}function rI(n,t,e,s,a){const r=[...a],i=sI(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=Number.MAX_SAFE_INTEGER;else{const u=nI(t,e,l);let h=s[u];n&1<<u&&(h=Number.MAX_SAFE_INTEGER),r[l]=h}for(let l=0;l<r.length;l++){const u=a[l];r[l]<0&&(r[l]+=u),r[l]=po(0,r[l],a[l])}return r}function iI(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function oI(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),i=po(0,i,u-1),i}function lI(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),l>0?i=po(0,i,u):i=po(-1,i,u-1),i}function K1(n,t,e){let s=e.length;for(let a=0;a<e.length;a++)if(e[a]>1){s=a;break}for(let a=s+1;a<e.length;a++)if(t[a]>0||e[a]!==n[a])return!1;return!0}function Y1(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function jm(n,t,e){let s;const a=n.shape.length;typeof t=="number"?s=[t,...new Array(a-1).fill(0)]:t.length<a?s=t.concat(new Array(a-t.length).fill(0)):s=t.slice(),s.forEach(i=>{_(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(a).fill(-1):typeof e=="number"?r=[e,...new Array(a-1).fill(-1)]:e.length<a?r=e.concat(new Array(a-e.length).fill(-1)):r=e,r=r.map((i,l)=>i>=0?i:(_(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,r]}function Z1(n,t,e,s,a,r,i,l,u){let h;if(s==null?(h=new Array(t.length),h.fill(1)):h=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let f=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:h.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};for(let $=0;$<p.dims;$++)f&&(1<<$&l)!==0&&p.numAddAxisAfterEllipsis++,1<<$&i&&(f=!0);f||(p.ellipsisMask|=1<<p.dims,p.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};tU(p,m);let y=!0,b=!0,v=!0;const w=[],S=[];for(let $=0;$<n.length;++$){if(m.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const T=!!(m.shrinkAxisMask&1<<$),I=n[$];if(I===-1){w.push(T?1:-1);continue}const R=[m.beginMask&1<<$,m.endMask&1<<$],F=[m.strides[$]>0?0:-1,m.strides[$]>0?I:I-1];if(T&&m.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&m.strides[$]===1;const M=!!(m.beginMask&1<<$&&m.endMask&1<<$);if(m.beginValid&&m.endValid){if(T){const W=m.begin[$]<0?I+m.begin[$]:m.begin[$];if(m.begin[$]=W,m.end[$]=m.begin[$]+1,W<0||W>=I)throw Error(`slice index ${m.begin[$]} of dimension ${$} out of bounds.`)}else m.begin[$]=vT(m.begin[$],0,m.strides[$],I,R,F),m.end[$]=vT(m.end[$],1,m.strides[$],I,R,F);const A=m.strides[$]===1&&m.begin[$]===0&&m.end[$]===I;y=y&&A,b=b&&($===0&&m.strides[$]===1||A)}else y=y&&m.strides[$]===1&&M,b=b&&($===0&&m.strides[$]===1||M);let D,O=!1;if(m.beginValid&&m.endValid?(D=m.end[$]-m.begin[$],O=!0):T?(D=1,O=!0):M&&I>=0&&(m.strides[$]<0?D=-I:D=I,O=!0),O){let A;D===0||D<0!=m.strides[$]<0?A=0:A=Math.trunc(D/m.strides[$])+(D%m.strides[$]!==0?1:0),w.push(A)}else w.push(-1)}for(let $=0;$<m.finalShapeGatherIndices.length;++$){const T=m.finalShapeGatherIndices[$];T>=0?S.push(w[T]):T===b0&&S.push(1)}return{finalShapeSparse:S.filter(($,T)=>m.finalShapeGatherIndices[T]!==b0),finalShape:S,isIdentity:y,sliceDim0:b,isSimpleSlice:v,begin:m.begin,end:m.end,strides:m.strides}}function tU(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const a=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<a;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(b0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(ZP),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function vT(n,t,e,s,a,r){if(a[t])return e>0?r[t]:r[t+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const eU=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:j1,computeFlatOffset:Y1,computeOutShape:X1,getNormalizedAxes:JP,isSliceContinous:K1,maskToAxes:QP,parseSliceParams:jm,sliceInfo:Z1,startForAxis:oI,startIndicesWithElidedDims:aI,stopForAxis:lI,stopIndicesWithElidedDims:rI,stridesForAxis:iI,stridesWithElidedDims:eI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nU{static sgd(t){return new W1(t)}static momentum(t,e,s=!1){return new jk(t,e,s)}static rmsprop(t,e=.9,s=0,a=null,r=!1){return new Xk(t,e,s,a,r)}static adam(t=.001,e=.9,s=.999,a=null){return new Hk(t,e,s,a)}static adadelta(t=.001,e=.95,s=null){return new Wk(t,e,s)}static adamax(t=.002,e=.9,s=.999,a=null,r=0){return new qk(t,e,s,a,r)}static adagrad(t,e=.1){return new Gk(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wl=nU;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function uI(){return new Promise(n=>sU(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1(n,t){const e=n[0].length;n.forEach((a,r)=>{_(a.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),_(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((a,r)=>{for(let i=0;i<e;i++)_(i===t||a[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Pa(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xa;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(xa||(xa={}));function cI(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let a=1;a<e.length;++a){const r=e[a],i=s[s.length-e.length+a],l=s[i];if(r>=0)if(l>=0){if(l!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+n}] = ${r} but shape[${a+n}] = ${l}`)}else s[i]=r}return s}function hI(n){const t={FIRST_DIM_SIZE:xa.FIRST_DIM_SIZE,VALUE_ROWIDS:xa.VALUE_ROWIDS,ROW_LENGTHS:xa.ROW_LENGTHS,ROW_SPLITS:xa.ROW_SPLITS,ROW_LIMITS:xa.ROW_LIMITS,ROW_STARTS:xa.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function dI(n){return n.length===0?0:n[0]===xa.FIRST_DIM_SIZE?n.length-1:n.length}function fI(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(e,s-1);++a){const r=n[a],i=t[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-n.length}] = ${r} but ragged tensor input.flatValues.shape[${a-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1=30;function Xm(n){return n<=J1?n:Qb(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,t,e){const s=e*(typeof n=="number"?n:n[0]),a=t*(typeof n=="number"?n:n[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(n,t,e,s=!0){let a=[];if(s)a=a.concat(t.slice(0)),a.push(n[0]/e),a=a.concat(n.slice(1));else{a=a.concat(n[0]);const r=t.length;for(let i=0;i<r;++i)a=a.concat([n[i+1]/t[i],t[i]]);a=a.concat(n.slice(r+1))}return a}function Wh(n,t,e=!0){const s=[];if(e){s.push(t);for(let a=t+1;a<n;++a)a<=2*t?(s.push(a),s.push(a-(t+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function Gh(n,t,e,s=!0){const a=[];s?a.push(n[0]/e):a.push(n[0]*e);for(let r=1;r<n.length;++r)r<=t.length?s?a.push(t[r-1]*n[r]):a.push(n[r]/t[r-1]):a.push(n[r]);return a}function ev(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function nv(n,t,e){const s=n.slice(0,1);for(let a=0;a<e;++a)s.push(n[a+1]-t[a][0]-t[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Km=1.7580993408473768,Ym=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv=.3275911,av=.254829592,rv=-.284496736,iv=1.421413741,ov=-1.453152027,lv=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function pI(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function mI(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function gI(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function uv(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function yI(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function bI(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let a=0;a<Math.ceil(n/2);a++){const r=(t?2:-2)*Math.PI*(a/n);e[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:e,imag:s}}function xI(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _b="->",aU=/->/g,wT=",",ST="...";function cv(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(aU,"").length)/_b.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${_b}").`);const[s,a]=n.split(_b);_(s.indexOf(ST)===-1,()=>`The ellipsis notation ("${ST}") is not supported yet.`);const r=s.split(wT),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let m=0;m<a.length;++m){const y=a[m];if(!r.some(b=>b.indexOf(y)!==-1))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);l.indexOf(y)===-1&&l.push(y)}for(let m=0;m<s.length;++m){const y=s[m];l.indexOf(y)===-1&&y!==wT&&l.push(y)}const u=new Array(r.length);for(let m=0;m<i;++m){if(new Set(r[m].split("")).size!==r[m].length)throw new Error(`Found duplicate axes in input component ${r[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let y=0;y<r[m].length;++y)u[m].push(l.indexOf(r[m][y]))}const h=l.length,f=a.length,p=[];for(let m=f;m<h;++m)p.push(m);return{allDims:l,summedDims:p,idDims:u}}function hv(n,t){let e=new Array(n);e.fill(-1);for(let a=0;a<t.length;++a)e[t[a]]=a;const s=[];for(let a=0;a<n;++a)e[a]===-1&&s.push(a);return e=e.filter(a=>a!==-1),{permutationIndices:e,expandDims:s}}function dv(n,t,e){const s=new Array(n);for(let a=0;a<e.length;++a){const r=e[a].shape;for(let i=0;i<t[a].length;++i)s[t[a][i]]===void 0?s[t[a][i]]=r[i]:_(s[t[a][i]]===r[i],()=>`Expected dimension ${s[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function fv(n,t){const e=n,s=[];let a=0;n.length===0&&e.push(-1),a=n.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<e.length;++i){const l=e[i],u=rU(t,l);for(const h of u)r.indexOf(h)===-1&&(s[i].push(h),r.push(h))}return{path:e,steps:s}}function pv(n){return n.every((t,e)=>t===e)}function rU(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function mv(n,t,e=0){let s=[];if(typeof t=="number")_(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const a=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);_(a<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const i=t.reduce((l,u)=>u>0?l+u:l);t[r]=n.shape[e]-i}_(n.shape[e]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function wI(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function SI(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function CI(n,t){return`size ${n} must be non-negative, not ${t}`}function TI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $I(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function kI(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(){return"segment ids must be >= 0"}function II(){return"segment ids are not increasing"}function EI(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function AI(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,t){let e=!1,s;for(n<=J1?(s=n,e=!0):s=Qb(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Qb(n,s+1);return s}function DI(n,t,e){const s=[],a=n.length;for(let r=0;r<a;r++)r!==t?s.push(n[r]):s.push(e);return s}function gv(n,t,e,s){const a=t.shape.length,r=n.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let p=0;p<s;++p)if(n.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const i=n.shape[e],l=[];let u=1,h=1,f=1;for(let p=0;p<s;++p)l.push(n.shape[p]),u*=n.shape[p];for(let p=s;p<e;p++)l.push(n.shape[p]),h*=n.shape[p];for(let p=s;p<a;p++)l.push(t.shape[p]);for(let p=e+1;p<r;p++)l.push(n.shape[p]),f*=n.shape[p];return{batchSize:u,sliceSize:f,outerSize:h,dimSize:i,outputShape:l}}const iU=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:gv,computeOutShape:DI,segOpComputeOptimalWindowSize:RI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(n){try{return n.map(t=>oi(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function OI(n){return n.map(t=>ai(t))}const oU=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:av,ERF_A2:rv,ERF_A3:iv,ERF_A4:ov,ERF_A5:lv,ERF_P:sv,PARALLELIZE_THRESHOLD:J1,get RowPartitionType(){return xa},SELU_SCALE:Ym,SELU_SCALEALPHA:Km,applyActivation:Hm,assertAndGetBroadcastShape:Pt,assertAxesAreInnerMostDims:kn,assertParamsConsistent:Q1,assignToTypedArray:yI,axesAreInnerMostDims:m1,calculateShapes:Do,checkEinsumDimSizes:dv,checkPadOnDimRoundingMode:Hn,combineLocations:lk,combineRaggedTensorToTensorShapes:cI,complexWithEvenIndex:mI,complexWithOddIndex:gI,computeConv2DInfo:mn,computeConv3DInfo:Ni,computeDefaultPad:o1,computeDilation2DInfo:Fh,computeOptimalWindowSize:Xm,computeOutAndReduceShapes:gn,computeOutShape:Pa,computePool2DInfo:ia,computePool3DInfo:Tr,convertConv2DDataFormat:$r,decodeEinsumEquation:cv,eitherStridesOrDilationsAreOne:$n,expandShapeToKeepDim:He,exponent:xI,exponents:bI,fromStringArrayToUint8:OI,fromUint8ToStringArray:Cr,getAxesPermutation:_e,getBroadcastDims:Vl,getComplexWithIndex:uv,getEinsumComputePath:fv,getEinsumPermutation:hv,getFusedBiasGradient:Gm,getFusedDyActivation:Wm,getImageCenter:tv,getInnerMostAxes:qe,getPermuted:Wh,getRaggedRank:dI,getReductionAxes:ln,getReshaped:Uh,getReshapedPermuted:Gh,getRowPartitionTypesHelper:hI,getSliceBeginCoords:ev,getSliceSize:nv,getSparseFillEmptyRowsIndicesDenseShapeMismatch:vI,getSparseFillEmptyRowsNegativeIndexErrorMessage:wI,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:SI,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:TI,getSparseReshapeInputOutputMismatchErrorMessage:kI,getSparseReshapeInputOutputMultipleErrorMessage:$I,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:NI,getSparseReshapeNegativeOutputDimErrorMessage:CI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:AI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:x0,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:II,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:EI,getUndoAxesPermutation:Ci,isIdentityPermutation:pv,log:XF,mergeRealAndImagArrays:Nr,prepareAndValidate:q1,prepareSplitSize:mv,segment_util:iU,shouldFuse:qm,slice_util:eU,splitRealAndImagArrays:pI,stridesOrDilationsArePositive:vo,tupleValuesAreOne:ci,upcastType:ds,validateDefaultValueShape:fI,validateInput:O1,validateUpdateShape:Ik,warn:Is},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */RP();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I={kernelName:wp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,eu(Nt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU={kernelName:Bc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=we(Nt(e,"float32")),a=Tn(kt(Lt(1),s));return Ee(Et(n,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU={kernelName:Vc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Tn(kt(we(Nt(e,"float32")),1));return Et(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU={kernelName:Ql,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=ln(e.shape,a);return u.length>0&&(l=At(l,u)),q(l,e.shape)},b:()=>{let l=n;const u=ln(s.shape,a);return u.length>0&&(l=At(l,u)),q(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:Sp,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,a)=>{e[a]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU={kernelName:Np,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>re(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU={kernelName:Cp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>re(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU={kernelName:Pc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,Tn(kt(Lt(1),we(Nt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:Uc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Tn(yt(Lt(1),we(Nt(e,"float32"))));return Et(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU={kernelName:Hc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=yt(we(e),we(s));let u=G(n,Et(s,l));const h=ln(e.shape,a);return h.length>0&&(u=At(u,h)),q(u,e.shape)},b:()=>{const l=yt(we(e),we(s));let u=Ee(G(n,Et(e,l)));const h=ln(s.shape,a);return h.length>0&&(u=At(u,h)),q(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yU={kernelName:Wc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,yt(we(Nt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,kt(Lt(1),we(Nt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n,t,e,s,a,r){const i=L(n,"dy","avgPool3dGrad"),l=L(t,"input","avgPool3dGrad");let u=i,h=l,f=!1;l.rank===4&&(f=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),_(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),_(h.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Hn("avgPool3dGrad",a,r);const p={dy:u,input:h},m={filterSize:e,strides:s,pad:a,dimRoundingMode:r},y=H.runKernel(tx,p,m);return f?q(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const vU=U({avgPool3dGrad_:xU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU={kernelName:$p,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i,dimRoundingMode:l}=e;return{x:()=>vU(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,t,e,s,a){const r=L(n,"dy","avgPoolGrad"),i=L(t,"input","avgPoolGrad");_(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let l=i,u=r,h=!1;i.rank===3&&(h=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),_(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),_(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const f={dy:u,input:l},p={filterSize:e,strides:s,pad:a},m=H.runKernel(J0,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const NU=U({avgPoolGrad_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU={kernelName:Tp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i}=e;return{x:()=>NU(n,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU={kernelName:kp,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,a]=t,{transposeA:r,transposeB:i}=e;return!r&&!i?{a:()=>Zt(n,a,!1,!0),b:()=>Zt(s,n,!0,!1)}:!r&&i?{a:()=>Zt(n,a,!1,!1),b:()=>Zt(n,s,!0,!1)}:r&&!i?{a:()=>Zt(a,n,!1,!0),b:()=>Zt(s,n,!1,!1)}:{a:()=>Zt(a,n,!0,!0),b:()=>Zt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U={kernelName:Ip,gradFunc:(n,t,e)=>{const{blockShape:s,crops:a}=e;return{x:()=>Fm(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU={kernelName:HF,gradFunc:(n,t,e)=>{const s=e,a=s.inputShape,r=s.shape,i=Array.from(r);for(let u=a.length-1;u>=0;u--)if(a[u]===r[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const l=[];for(let u=0;u<i.length;u++)i[u]>1&&l.push(u);return{x:()=>At(n,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU={kernelName:qc,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU={kernelName:jc,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=e;return{x:()=>_n(Ga(Ti(s,a),Ao(s,r)),n,re(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU={kernelName:Ap,inputsToSave:["x"],gradFunc:_I.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU={kernelName:Rp,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:a}=e,r=Xt(a,t[0].shape)[0],i=s.map(u=>u[r]);return hs(n,i,r).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU={kernelName:Dp,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{dilations:r,strides:i,pad:l,dataFormat:u}=e;return _(ci(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>c1(s.shape,n,a,i,l,u),filter:()=>M1(s,n,a.shape,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U={kernelName:Op,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{strides:r,pad:i,dataFormat:l,dimRoundingMode:u}=e;return{dy:()=>hi(n,a,r,i,l,1,u),filter:()=>M1(n,s,a.shape,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n,t,e,s,a){let r=n;n.rank===4&&(r=q(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),_(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),_(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),_(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),_(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),_(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const l={x:r,dy:i},u={strides:s,pad:a,filterShape:e};return H.runKernel(rx,l,u)}const LU=U({conv3DBackpropFilter_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU={kernelName:_p,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r}=e;_(ci(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,l]=t;return{x:()=>nk(i.shape,n,l,a,r),filter:()=>LU(i,n,l.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU={kernelName:Kc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(Ee(I1(Nt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU={kernelName:Yc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(E1(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU={kernelName:Fp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a,exclusive:r,reverse:i}=e;return{x:()=>{const l=_e([a],s.rank);let u=f1(n,a,r,!i);return l!=null&&(u=ae(u,l)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:Lp,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=e,l=s??[1,1];_(ci(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[u,h]=t;return _(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),_(h.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${h.rank}.`),_(u.shape[3]===h.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),_($n(a,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${l}'.`),Hn("depthwiseConv2d",r,i),{x:()=>zk(u.shape,n,h,a,r,l,i),filter:()=>Lk(u,n,h.shape,a,r,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU={kernelName:zp,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,r={x:s,filter:a,dy:n},i={x:s,filter:a,dy:n};return{x:()=>H.runKernel(Jb,r,e),filter:()=>H.runKernel(t0,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU={kernelName:Qc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>H.runKernel(mx,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU={kernelName:Jc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=G(ps(Ee(we(e))),2/Math.sqrt(Math.PI));return{x:()=>G(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU={kernelName:th,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU={kernelName:Bp,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>q(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU={kernelName:eh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,ps(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XU={kernelName:nh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KU={kernelName:sh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=Et(n,Nt(s,"float32")),u=ln(e.shape,a);return u.length>0?q(At(l,u),e.shape):l},b:()=>{let l=G(n,Nt(e,"float32"));const u=ln(s.shape,a);u.length>0&&(l=q(At(l,u),s.shape));const h=we(s);return Ee(Et(l,Nt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU={kernelName:Vp,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[a,r,i,l]=t,u=l??Lt(1),h=ln(r.shape,a.shape),f=[];if(r.rank===1){for(let T=0;T<a.shape.length-1;++T)f.push(a.shape[T]);f.push(1)}const p=kt(a,r),m=G(n,u),y=T1(yt(i,Lt(s))),b=G(G(G(y,y),y),Lt(-.5));return{x:()=>r.rank===1?q(G(G(n,Qs(q(y,[1,1,1,r.shape[0]]),f)),u),a.shape):q(G(G(n,y),u),a.shape),mean:()=>{let T=G(G(y,Lt(-1)),m);return r.rank===1&&(T=At(T,h)),q(T,r.shape)},variance:()=>{let T=G(G(b,p),m);return r.rank===1&&(T=At(T,h)),q(T,r.shape)},scale:()=>{const T=G(p,y);let I=G(n,T);return r.rank===1&&(I=At(I,h)),q(I,r.shape)},offset:()=>{let T=n;return r.rank===1&&(T=At(T,h)),q(T,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU={kernelName:Pp,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,a]=t,{axis:r,batchDims:i}=e,l=Xt(r,s.shape)[0],u=(h,f,p)=>()=>{const m=h.shape,y=f.size,b=m.slice(0,l),v=b.length,w=m.slice(r,m.length).slice(1),S=w.length,C=NT(0,v),$=NT(v+1,v+1+S),T=CT([b,[y],w]),I=q(p,T),R=q(f,[y]),F=CT([[v],C,$]),M=ae(I,F);let D=F1(M,R,h.shape[l]);const O=Ci(F);return D=ae(D,O),D};if(i===1){const h=s.shape[0],f=s.split(h,0);return{x:()=>ms(f.map((y,b)=>u(y,a.slice(b,1),n.slice(b,1))())).reshape(s.shape),indices:()=>a}}else return{x:u(s,a,n),indices:()=>a}}};function NT(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function CT(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QU={kernelName:ah,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>re(e),b:()=>re(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU={kernelName:rh,gradFunc:n=>({x:()=>Nt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:ih,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW={kernelName:oh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:lh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW={kernelName:Wp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:a}=e,r=xs(s,0);return{x:()=>_n(r,n,G(n,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:ch,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,yt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW={kernelName:uh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,Nt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={kernelName:jF,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;return{logits:()=>{const i=ps(s);return kt(n,G(At(n,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,t,e,s=5,a=1,r=1,i=.5){const l={x:n,y:t,dy:e},u={depthRadius:s,bias:a,alpha:r,beta:i};return H.runKernel(Nx,l,u)}const lW=U({localResponseNormalizationBackprop_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:Kp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{depthRadius:r,bias:i,alpha:l,beta:u}=e;return{x:()=>lW(s,a,n,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(n,t,e,s){return t.rank<e.rank&&(t=q(t,He(t.shape,s))),n.rank<e.rank&&(n=q(n,He(n.shape,s))),{x:()=>G(n,Nt(Na(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TT={kernelName:Yp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:a}=s,r=t[0],i=t[1],l=Xt(a,r.shape),u=FI(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW={kernelName:hh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>G(n,Nt(Ti(e,s),"float32")),b:()=>G(n,Nt($c(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(n,t,e,s,a,r,i){const l=L(n,"dy","maxPool3dGrad"),u=L(t,"input","maxPool3dGrad"),h=L(e,"output","maxPool3dGrad");let f=l,p=u,m=h,y=!1;u.rank===4&&(y=!0,f=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=q(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=q(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),_(f.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`),_(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),_(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),Hn("maxPool3dGrad",r,i);const b={dy:f,input:p,output:m},v={filterSize:s,strides:a,pad:r,dimRoundingMode:i},w=H.runKernel(Tx,b,v);return y?q(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const dW=U({maxPool3dGrad_:hW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW={kernelName:Qp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=e;return{x:()=>dW(n,s,a,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(n,t,e,s,a,r,i){const l=L(n,"dy","maxPoolGrad"),u=L(t,"input","maxPoolGrad"),h=L(e,"output","maxPoolGrad");_(u.rank===l.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`),_(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),_(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Hn("maxPoolGrad",r,i);const f={dy:l,input:u,output:h},p={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return H.runKernel(Cx,f,p)}const mW=U({maxPoolGrad_:pW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW={kernelName:Zp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l}=e;return{x:()=>mW(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:Jp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e,r=Xt(a,s.shape),l=gn(s.shape,r)[1],u=ht(l);return{x:()=>{const f=s.shape.slice();r.forEach(y=>{f[y]=1});const p=q(n,f);return Et(G(p,us(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW={kernelName:tm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:a}=s,[r,i]=t,l=Xt(a,r.shape),u=FI(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:dh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>G(n,Nt(Ao(e,s),"float32")),b:()=>G(n,Nt(xs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:em,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>Wt(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:fh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=ln(e.shape,a);return l.length>0?q(At(n,l),e.shape):n},b:()=>{const l=G(n,Ee(Vh(Et(e,s)))),u=ln(s.shape,a);return u.length>0?q(At(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW={kernelName:ph,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=G(n,Nt(s,"float32")),u=ln(e.shape,a);return u.length>0?q(At(l,u),e.shape):l},b:()=>{const l=G(n,Nt(e,"float32")),u=ln(s.shape,a);return u.length>0?q(At(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW={kernelName:nm,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:rm,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>en(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW={kernelName:am,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W={kernelName:im,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return ra(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T={kernelName:om,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>Wt(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:mh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,a]=t,r=e,i=s,l=Pt(r.shape,i.shape);return{a:()=>{const f=Nt(i,"float32");let p=G(n,G(f,vr(r,kt(f,Lt(1)))));const m=ln(r.shape,l);return m.length>0&&(p=At(p,m)),q(p,r.shape)},b:()=>{const f=xs(r,0),p=_n(f,As(r),re(r));let m=G(n,G(a,p));const y=ln(i.shape,l);return y.length>0&&(m=At(m,y)),q(m,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW={kernelName:lm,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,a=xs(e,0);return{x:()=>_n(a,n,G(n,s)),alpha:()=>{let r=_n(a,re(n),G(n,e));const i=ln(s.shape,n.shape);return i.length>0&&(r=At(r,i)),q(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n,t,e){const s=n.shape.slice();s[e]=1;const a=q(t,s),r=Qf(n,e,!0,!1),i=Qf(n,e,!0,!0),l=G(r,i);return G(a,l)}function AW(n,t,e){const s=n.shape.length,a=s-e.length,r=_e(e,s);let i=n;r!=null&&(i=ae(n,r));const l=i.shape.slice(),h=l.splice(s-e.length,e.length).reduce((m,y)=>m*y,1);l.push(h);const f=i.reshape(l);let p=EW(f,t,a);if(p=p.reshape(i.shape),r!=null){const m=Ci(r);p=ae(p,m)}return p}const RW={kernelName:um,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;let r=[];return a==null?r=s.shape.map((i,l)=>l):typeof a=="number"?r=[a]:r=a,{x:()=>AW(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW={kernelName:Zc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=Et(n,Nt(s,"float32")),u=ln(e.shape,a);return u.length>0?q(At(l,u),e.shape):l},b:()=>{let l=G(n,Nt(e,"float32"));const u=ln(s.shape,a);u.length>0&&(l=q(At(l,u),s.shape));const h=we(s);return Ee(Et(l,Nt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW={kernelName:gh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,Ee(we(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:bh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=G(Ao(e,6),eu(e));return{x:()=>G(n,Nt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:yh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,Nt(eu(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW={kernelName:cm,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>q(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW={kernelName:dm,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>H.runKernel(zx,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW={kernelName:hm,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>H.runKernel(Lx,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW={kernelName:fm,gradFunc:(n,t,e)=>{const{dims:s}=e,a=Xt(s,n.shape);return{x:()=>aa(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW={kernelName:xh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW={kernelName:vh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ee(Et(n,G(vr(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW={kernelName:pm,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Nt(re(e),"float32"),t:()=>G(n,Nt(e,n.dtype)),e:()=>G(n,Nt(Dm(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW={kernelName:wh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xs(e,Lt(0)),a=Lt(Km),r=Lt(Ym),i=G(n,r),l=G(G(n,a),ps(Nt(e,"float32")));return _n(s,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW={kernelName:Th,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,G(e,kt(Lt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW={kernelName:Ch,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW={kernelName:Sh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(km(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW={kernelName:Nh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(d1(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:mm,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:a,size:r}=e,i=s.shape,[l,u]=jm(s,a,r),h=[];for(let f=0;f<n.rank;f++)h.push([l[f],i[f]-l[f]-u[f]]);return{x:()=>$i(n,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW={kernelName:xm,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:a}=e,r=!0,i=G(n,s);return{logits:()=>kt(i,G(At(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW={kernelName:$h,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,wa(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kT={kernelName:ym,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:a}=e;return{x:()=>$m(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT={kernelName:bm,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Ye(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW={kernelName:kh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,G(Tn(Nt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW={kernelName:qx,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,G(Nt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW={kernelName:Ih,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Lt(2);return{a:()=>G(n,G(a,kt(e,s))),b:()=>G(n,G(a,kt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG={kernelName:Oh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=ln(e.shape,a);return u.length>0&&(l=At(l,u)),q(l,e.shape)},b:()=>{let l=n;const u=ln(s.shape,a);return u.length>0&&(l=At(l,u)),q(Ee(l),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG={kernelName:gm,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,a=s.shape.slice(),{axis:r}=e;Xt(r,s.shape).forEach(h=>{a[h]=1});const l=q(n,a),u=G(l,us(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG={kernelName:Ah,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(n,we(km(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG={kernelName:Rh,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(kt(Lt(1),we(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG={kernelName:Dh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:a}=e;return{x:()=>{let i=re(s);if(s.rank===1)for(let l=0;l<a[0];++l)i=yt(i,Wt(n,[l*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)i=yt(i,Wt(n,[l*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)i=yt(i,Wt(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)for(let f=0;f<a[3];++f)i=yt(i,Wt(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2],f*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG={kernelName:Al,gradFunc:(n,t,e)=>{const s=e,{perm:a}=s,r=Ci(a);return{x:()=>ae(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oG={kernelName:wm,gradFunc:(n,t,e)=>{const s=e,{axis:a}=s;return{value:()=>ms(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG={kernelName:Sm,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>uG(n,e)}}};function uG(n,t){const e=kr(t,re(t)),s=Ph(n,e);let a=Ti(t,Lt(0,"int32"));const r=s.rank-a.rank;for(let l=0;l<r;++l)a=On(a,l+1);a=Ga(a,us(s.shape,"bool"));const i=re(s);return _n(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG={kernelName:Nm,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hG=[_I,lU,uU,cU,hU,dU,fU,pU,mU,gU,yU,bU,wU,CU,TU,$U,kU,IU,EU,AU,RU,DU,_U,OU,zU,MU,BU,VU,PU,UU,DW,WU,GU,HU,qU,jU,KU,XU,YU,ZU,QU,JU,tW,eW,nW,sW,aW,rW,iW,uW,TT,TT,cW,fW,gW,yW,bW,xW,vW,wW,SW,NW,CW,TW,$W,$T,$T,kW,IW,RW,OW,_W,FW,LW,zW,MW,BW,VW,PW,UW,WW,GW,HW,qW,jW,XW,KW,YW,kT,kT,IT,IT,ZW,JW,QW,tG,eG,nG,sG,aG,rG,iG,oG,lG,cG];for(const n of hG)KF(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.abs=function(){return this.throwIfDisposed(),tn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acos=function(){return this.throwIfDisposed(),M$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acosh=function(){return this.throwIfDisposed(),B$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.add=function(n){return this.throwIfDisposed(),yt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.all=function(n,t){return this.throwIfDisposed(),i1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.any=function(n,t){return this.throwIfDisposed(),Zf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMax=function(n){return this.throwIfDisposed(),Bl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMin=function(n){return this.throwIfDisposed(),V$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asScalar=function(){return this.throwIfDisposed(),_(this.size===1,()=>"The array must have only 1 element."),q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asType=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as1D=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as2D=function(n,t){return this.throwIfDisposed(),q(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),q(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),q(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as5D=function(n,t,e,s,a){return this.throwIfDisposed(),q(this,[n,t,e,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asin=function(){return this.throwIfDisposed(),P$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asinh=function(){return this.throwIfDisposed(),U$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan=function(){return this.throwIfDisposed(),W$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan2=function(n){return this.throwIfDisposed(),G$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atanh=function(){return this.throwIfDisposed(),H$(this)};dt().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Tm(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),$m(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchNorm=function(n,t,e,s,a){return this.throwIfDisposed(),Lh(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ol(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cast=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ceil=function(){return this.throwIfDisposed(),Z$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),fs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Ie&&(n=[n]),Ye([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv1d=function(n,t,e,s,a,r){return this.throwIfDisposed(),u1(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2dTranspose=function(n,t,e,s,a){return this.throwIfDisposed(),h1(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),hi(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cos=function(){return this.throwIfDisposed(),km(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cosh=function(){return this.throwIfDisposed(),d1(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Qf(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),f1(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),ak(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthwiseConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),zh(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dilation2d=function(n,t,e,s,a){return this.throwIfDisposed(),rk(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.divNoNan=function(n){return this.throwIfDisposed(),ik(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.div=function(n){return this.throwIfDisposed(),Et(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dot=function(n){return this.throwIfDisposed(),ok(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.elu=function(){return this.throwIfDisposed(),Mh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.equal=function(n){return this.throwIfDisposed(),Na(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.erf=function(){return this.throwIfDisposed(),p1(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),ck(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.exp=function(){return this.throwIfDisposed(),ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expandDims=function(n){return this.throwIfDisposed(),On(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expm1=function(){return this.throwIfDisposed(),hk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.fft=function(){return this.throwIfDisposed(),Pm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.flatten=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floor=function(){return this.throwIfDisposed(),Vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floorDiv=function(n){return this.throwIfDisposed(),r1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Ph(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Ti(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greater=function(n){return this.throwIfDisposed(),xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ifft=function(){return this.throwIfDisposed(),Ec(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.irfft=function(){return this.throwIfDisposed(),R1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isFinite=function(){return this.throwIfDisposed(),dk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isInf=function(){return this.throwIfDisposed(),fk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isNaN=function(){return this.throwIfDisposed(),pk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Em(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.lessEqual=function(n){return this.throwIfDisposed(),Ao(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.less=function(n){return this.throwIfDisposed(),$c(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),mk(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSigmoid=function(){return this.throwIfDisposed(),gk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),y1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Rm(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log=function(){return this.throwIfDisposed(),As(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log1p=function(){return this.throwIfDisposed(),Am(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ga(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalNot=function(){return this.throwIfDisposed(),Dm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalOr=function(n){return this.throwIfDisposed(),b1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalXor=function(n){return this.throwIfDisposed(),yk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Zt(this,n,t,e)};dt().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Om(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.max=function(n,t){return this.throwIfDisposed(),na(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.maximum=function(n){return this.throwIfDisposed(),kr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mean=function(n,t){return this.throwIfDisposed(),ze(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.min=function(n,t){return this.throwIfDisposed(),Tc(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.minimum=function(n){return this.throwIfDisposed(),So(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),xk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mod=function(n){return this.throwIfDisposed(),vk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mul=function(n){return this.throwIfDisposed(),G(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.neg=function(){return this.throwIfDisposed(),Ee(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Bh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.notEqual=function(n){return this.throwIfDisposed(),Pl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),v1(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.onesLike=function(){return this.throwIfDisposed(),Rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pad=function(n,t){return this.throwIfDisposed(),$i(this,n,t)};dt().prototype.pool=function(n,t,e,s,a,r){return this.throwIfDisposed(),wk(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pow=function(n){return this.throwIfDisposed(),vr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prelu=function(n){return this.throwIfDisposed(),Lm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prod=function(n,t){return this.throwIfDisposed(),Sk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reciprocal=function(){return this.throwIfDisposed(),Nk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu=function(){return this.throwIfDisposed(),ja(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu6=function(){return this.throwIfDisposed(),N1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),q(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshape=function(n){return this.throwIfDisposed(),q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Vk(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Pk(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reverse=function(n){return this.throwIfDisposed(),aa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rfft=function(){return this.throwIfDisposed(),Um(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.round=function(){return this.throwIfDisposed(),C1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rsqrt=function(){return this.throwIfDisposed(),T1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.selu=function(){return this.throwIfDisposed(),$1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.separableConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),k1(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sigmoid=function(){return this.throwIfDisposed(),wa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sign=function(){return this.throwIfDisposed(),Ck(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sin=function(){return this.throwIfDisposed(),I1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sinh=function(){return this.throwIfDisposed(),E1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.slice=function(n,t){return this.throwIfDisposed(),Wt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softmax=function(n){return this.throwIfDisposed(),Vm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softplus=function(){return this.throwIfDisposed(),tu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Fm(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.split=function(n,t){return this.throwIfDisposed(),hs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sqrt=function(){return this.throwIfDisposed(),Tn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.square=function(){return this.throwIfDisposed(),we(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),D1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squeeze=function(n){return this.throwIfDisposed(),Sr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Ie?[this,n]:[this,...n];return ms(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.step=function(n){return this.throwIfDisposed(),eu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stridedSlice=function(n,t,e,s,a,r,i,l){return this.throwIfDisposed(),Tk(this,n,t,e,s,a,r,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sub=function(n){return this.throwIfDisposed(),kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sum=function(n,t){return this.throwIfDisposed(),At(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tan=function(){return this.throwIfDisposed(),$k(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tanh=function(){return this.throwIfDisposed(),wo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tile=function(n){return this.throwIfDisposed(),Qs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toBool=function(){return this.throwIfDisposed(),Nt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toFloat=function(){return this.throwIfDisposed(),Nt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toInt=function(){return this.throwIfDisposed(),Nt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.topk=function(n,t){return this.throwIfDisposed(),Ek(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.transpose=function(n){return this.throwIfDisposed(),ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unique=function(n){return this.throwIfDisposed(),Ak(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),F1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unstack=function(n){return this.throwIfDisposed(),ra(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.where=function(n,t){return this.throwIfDisposed(),_n(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.zerosLike=function(){return this.throwIfDisposed(),re(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class La extends Error{constructor(t){super(t),Object.setPrototypeOf(this,La.prototype)}}class Js extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Js.prototype)}}class X extends Error{constructor(t){super(t),Object.setPrototypeOf(this,X.prototype)}}class Gt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Gt.prototype)}}class yv extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yv.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LI{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Co(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function za(n,t){if(!n)throw new yv(t)}function ET(n,t){let e=0;for(const s of n)s===t&&e++;return e}function Qn(n){return n.length===1?n[0]:n}function pe(n){return Array.isArray(n)?n:[n]}function fr(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ro(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let js={};function bv(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function v0(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>v0(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:v0(s))}}}function Hh(n,t={},e={},s="object",a=!1){if(typeof n=="string"){const r=n;let i;if(r in e)i=e[r];else if(r in js)i=js[r];else if(i=t[r],i==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let l,u;if(i in e?[l,u]=e[i]:i in js?[l,u]=js.className:i in t&&([l,u]=t[i]),l==null)throw new X(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const h={};for(const y of Object.keys(js))h[y]=js[y];for(const y of Object.keys(e))h[y]=e[y];const f=r.config;f.customObjects=h;const p=Object.assign({},js);for(const y of Object.keys(e))js[y]=e[y];v0(r.config);const m=u(l,r.config,e,a);return js=Object.assign({},p),m}else{const h=Object.assign({},js);for(const p of Object.keys(e))js[p]=e[p];const f=new l(r.config);return js=Object.assign({},h),f}}}function dG(n,t){return n<t?-1:n>t?1:0}function bf(n,t){return-1*dG(n,t)}function ri(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function fG(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Oo(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new X(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function xv(n,t,e=0,s=1/0){return za(e>=0),za(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(a=>typeof a===t)}function pn(n,t){Array.isArray(n)?(_(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>pn(e,`element ${s+1} of ${t}`))):_(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${zI(n)}.`)}function zI(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>zI(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function pG(n,t,e){let s=e!=null?e():Zn(),a;return(...i)=>{const l=e!=null?e():Zn();return l-s<t||(s=l,a=n(...i)),a}}function MI(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let mG=0;function BI(){return mG++}const xf={};function Zm(n=""){return n in xf||(xf[n]=0),xf[n]+=1,n+xf[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gG=["channelsFirst","channelsLast"],yG=["nearest","bilinear"],bG=["valid","same","causal"],xG=["max","avg"],vG=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Sl=new Map;function je(n){Oo(gG,"DataFormat",n)}function wG(n){Oo(yG,"InterpolationFormat",n)}function Os(n){Oo(bG,"PaddingMode",n)}function VI(n){Oo(xG,"PoolMode",n)}const Sc=[],AT="/";function ho(n,t){Sc.push(n);try{const e=t();return Sc.pop(),e}catch(e){throw Sc.pop(),e}}function SG(){return Sc.length===0?"":Sc.join(AT)+AT}function PI(n){if(!WI(n))throw new Error("Not a valid tensor name: '"+n+"'");return SG()+n}function UI(n){if(!WI(n))throw new Error("Not a valid tensor name: '"+n+"'");Sl.has(n)||Sl.set(n,0);const t=Sl.get(n);if(Sl.set(n,Sl.get(n)+1),t>0){const e=`${n}_${t}`;return Sl.set(e,1),e}else return n}const NG=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function WI(n){return!!n.match(NG)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CG(n){return n===parseInt(n.toString(),10)}function ii(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let a=t;a<e;++a)s*=n[a];return s}function Wl(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function di(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Ca(n,t){if(t<n)throw new X(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Fb;function nn(){return Fb==null&&(Fb=S$().epsilon()),Fb}function Ta(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ua(n,t){return Nt(n,t)}function qh(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),q(n,e)}function TG(n,t){return nt(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=qh(n,1);return w0(e,[1,t,1])})}function $G(n){const t=[ii(n.shape)];return q(n,t)}function kG(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],ii(n.shape,1)];return q(n,t)}function fo(n,t,e){return nt(()=>{switch(n.rank){case 1:return Mm(n,t,e);case 2:return A1(n,[t,0],[e,n.shape[1]]);case 3:return Bm(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Ic(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Wt(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Wt(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Lb(n,t,e){return nt(()=>{switch(n.rank){case 1:return Mm(n,t,e);case 2:return A1(n,[0,t],[n.shape[0],e]);case 3:return Bm(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Ic(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function vf(n,t,e,s){return nt(()=>{switch(n.rank){case 1:return Mm(n,t,e);case 2:switch(s){case 1:return fo(n,t,e);case 2:return Lb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return fo(n,t,e);case 2:return Bm(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Lb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return fo(n,t,e);case 2:return Ic(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Ic(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Lb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function vv(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Ye(n,t)}function RT(n,t){switch(n.rank){case 1:return Q$([n,t]);case 2:return l1([n,t],0);case 3:return J$([n,t],0);case 4:return tk([n,t],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function w0(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new X(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Qs(n,t)}function Qm(n,t=0,e=1,s,a){return S1(n,t,e,s,a)}function Wa(n,t,e,s){if(n.rank<2||t.rank<2)throw new Gt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const a=n.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(a!==r)throw new Gt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return g0({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?S0(n.rank,s,Ta()):null,activation:e});{const a=n.shape.slice(),r=a.pop();n=q(n,[-1,r]);const i=t.shape.slice(),l=i.pop(),u=i.pop(),h=[...i,l],f=Array.from({length:t.rank},(b,v)=>v===0?t.rank-2:v<=t.rank-2?v-1:v);t=q(ae(t,f),[u,-1]);const p=[...a,...h];return q(g0({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?S0(n.rank,s,Ta()):null,activation:e}),p)}}function GI(n,t,e){return nt(()=>(Array.isArray(t)?t=Nn(t,"int32"):t=Nt(t,"int32"),Ph(n,t,e)))}function jh(n){return G(n,n)}function S0(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new X(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1,1]):q(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,1,1,s[0]]):q(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1]):q(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,1,s[0]]):q(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1]):q(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,s[0]]):q(t,[1].concat(s))}else if(n<3)return t;throw new X(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ia(n,t,e){return nt(()=>(e==null&&(e=Ta()),je(e),yt(n,S0(n.rank,t,e))))}function IG(n,t=1){if(t!==1)throw new Gt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Mh(n)}function EG(n){return nt(()=>Et(n,yt(tn(n),1)))}function HI(n,t,e,s){return nt(()=>Ok(n,t,e,s))}function AG(n){return nt(()=>{const t=yt(.5,G(.2,n));return fs(t,0,1)})}function Xh(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const RG=["fanIn","fanOut","fanAvg"],DG=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OG(n){Oo(RG,"FanMode",n)}function _G(n){Oo(DG,"Distribution",n)}class oa extends su{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qI extends oa{apply(t,e){return en(t,e)}}qI.className="Zeros";xt(qI);class wv extends oa{apply(t,e){return us(t,e)}}wv.className="Ones";xt(wv);class jI extends oa{constructor(t){if(super(),typeof t!="object")throw new X(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new X(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return nt(()=>G(Lt(this.value),us(t,e)))}getConfig(){return{value:this.value}}}jI.className="Constant";xt(jI);class XI extends oa{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Ro(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}XI.className="RandomUniform";xt(XI);class KI extends oa{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`randomNormal does not support dType ${e}.`);return Qm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}KI.className="RandomNormal";xt(KI);class YI extends oa{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`truncatedNormal does not support dType ${e}.`);return _1(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}YI.className="TruncatedNormal";xt(YI);class ZI extends oa{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return nt(()=>{if(t.length!==2||t[0]!==t[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return G(this.gain,g1(t[0]))})}getConfig(){return{gain:this.gain}}}ZI.className="Identity";xt(ZI);function FG(n,t="channelsLast"){let e,s;if(je(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const a=ii(n,2);e=n[1]*a,s=n[0]*a}else if(t==="channelsLast"){const a=ii(n,0,n.length-2);e=n[n.length-2]*a,s=n[n.length-1]*a}}else{const a=ii(n);e=Math.sqrt(a),s=Math.sqrt(a)}return[e,s]}class gs extends oa{constructor(t){if(super(),t.scale<0)throw new X(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,OG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,_G(this.distribution),this.seed=t.seed}apply(t,e){const s=FG(t),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`${this.getClassName()} does not support dType ${e}.`);return _1(t,0,l,e,this.seed)}else{const l=Math.sqrt(3*i);return Ro(t,-l,l,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling";xt(gs);class Sv extends gs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}Sv.className="GlorotUniform";xt(Sv);class Nv extends gs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}Nv.className="GlorotNormal";xt(Nv);class Cv extends gs{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}Cv.className="HeNormal";xt(Cv);class Tv extends gs{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}Tv.className="HeUniform";xt(Tv);class $v extends gs{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}$v.className="LeCunNormal";xt($v);class kv extends gs{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}kv.className="LeCunUniform";xt(kv);class QI extends oa{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return nt(()=>{if(t.length<2)throw new Gt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=ht(t.slice(0,-1)),a=t[t.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],l=Qm(i,0,1,e,this.seed),u=Uk.qr(l,!1);let h=u[0];const p=u[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return h=G(h,p.sign()),s<a&&(h=h.transpose()),G(Lt(this.gain),h.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}QI.className="Orthogonal";xt(QI);const DT={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function OT(n,t={}){return Hh(n,Zs.getMap().classNameMap,t,"initializer")}function Oe(n){return bv(n)}function Ae(n){if(typeof n=="string"){const t=n in DT?DT[n]:n;if(t==="GlorotNormal")return new Nv;if(t==="GlorotUniform")return new Sv;if(t==="HeNormal")return new Cv;if(t==="HeUniform")return new Tv;if(t==="LeCunNormal")return new $v;if(t==="LeCunUniform")return new kv;{const e={};return e.className=t,e.config={},OT(e)}}else return n instanceof oa?n:OT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N0(n){return Array.isArray(n)&&Array.isArray(n[0])}function Jf(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Vt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function ue(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tp(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,a)=>s*a);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _T="Variable";class LG{constructor(t,e="float32",s=_T,a=!0,r=null){this.dtype=e??"float32",this.shape=t.shape,this.id=BI(),s=s??_T,this.originalName=PI(s),this.name=UI(this.originalName),this.trainable_=a,this.constraint=r,this.val=Rk(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),zG(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function zG(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function C0(n){return n.map(t=>t.read())}function Iv(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ha{constructor(t,e,s,a,r,i,l){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=l,this.id=BI(),i!=null&&(this.originalName=PI(i),this.name=UI(this.originalName)),this.rank=e.length}}let MG=0;class Jm{constructor(t,e){this.callArgs=e,this.id=MG++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let BG=0;class Kt extends su{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=BG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=fr(s)+"_"+Zm(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),s=[r].concat(t.inputShape)}this.batchInputShape=s;let a=t.dtype;a==null&&(a=t.inputDType),a==null&&(a="float32"),this.dtype=a}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Js(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new X(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Qn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Qn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} is not connected, no input to return.`);return Qn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Qn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=pe(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=pe(this.inputSpec);if(e.length!==s.length)throw new X(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let a=0;a<e.length;a++){const r=e[a],i=s[a];if(i==null)continue;const l=r.rank;if(i.ndim!=null&&l!==i.ndim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${l}`);if(i.maxNDim!=null&&l>i.maxNDim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${l}`);if(i.minNDim!=null&&l<i.minNDim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${l}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new X(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const u=r.shape;for(const h in i.axes){const f=Number(h),p=i.axes[h],m=f>=0?u[f]:u[u.length+f];if(p!=null&&[p,null].indexOf(m)===-1)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected axis ${f} of input shape to have value ${p} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){const h=i.shape[u],f=r.shape[u];if(h!=null&&f!=null&&h!==f)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=pe(t),a=UG(t),r=WG(t);if(a===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return ho(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of pe(t))i.push(l.shape);this.build(Qn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const l=pe(i),u=[];for(let h of l)s.indexOf(h)!==-1&&(h=h.clone()),u.push(h);if(i=Qn(u),this.activityRegularizer!=null)throw new Gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=VG(t),l=this.computeOutputShape(i);let u;const h=PG(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?u=l.map((f,p)=>new Ha(h,f,this,pe(t),e,this.name,p)):u=new Ha(h,l,this,pe(t),e,this.name),this.addInboundNode(t,u,null,null,i,l,e),this._refCount++,this.activityRegularizer!=null)throw new Gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&t[a]!=null&&t[a]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new La(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new La(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Js(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return C0(t?this.trainableWeights:this.weights)}setWeights(t){nt(()=>{const e=this.weights;if(e.length!==t.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],a=C0(e);for(let r=0;r<a.length;++r){const i=a[r],l=e[r],u=t[r];if(!te(i.shape,u.shape))throw new X(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);s.push([l,u])}Iv(s)})}addWeight(t,e,s,a,r,i,l,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new X(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=u!=null?u():Ae("zeros"));const h=a.apply(e,s),f=new LG(h,s,t,i,l);return h.dispose(),r!=null&&this.addLoss(()=>r.apply(f.read())),i==null&&(i=!0),i?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=pe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const a=this.computeMask(t,s),r=pe(e),i=pe(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let l=0;l<r.length;l++)r[l].kerasMask=i[l]}addInboundNode(t,e,s,a,r,i,l=null){const u=pe(t);e=pe(e),s=pe(s),a=pe(a),r=Jf(r),i=Jf(i);const h=[],f=[],p=[];for(const m of u)h.push(m.sourceLayer),f.push(m.nodeIndex),p.push(m.tensorIndex);new Jm({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:p,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},l);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function VG(n){n=pe(n);const t=[];for(const e of n)t.push(e.shape);return Qn(t)}function PG(n){return"float32"}function JI(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],l=s.inboundLayers[r],u=s.nodeIndices[r],h=JI(i,l,u);for(const f of h)a.indexOf(f)===-1&&a.push(f)}return a}}}function UG(n){let t=!0;for(const e of pe(n))if(!(e instanceof Ha)){t=!1;break}return t}function WG(n){let t=!0;for(const e of pe(n))if(e instanceof Ha){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kh extends Kt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Zm("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const a=new Ha(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Jm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Kh.className="InputLayer";xt(Kh);function GG(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new Kh({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HG(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return Nt(t,n.dtype)}catch{throw new X(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class ei{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ei)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=HG(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new X(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ha){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ha){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&jt(this.id2Mask)}}const ep=new LI,np=new LI;function qG(n){ep!=null&&ep.setMaxEntries(n),np!=null&&np.setMaxEntries(n)}function bc(n,t,e,s){const a=e==null?!1:e.training,r=Array.isArray(n),i=r?n:[n],l=i.map(b=>b.name),u=[],h=t.names();for(const b of l)h.indexOf(b)!==-1?u.push(t.getValue(b)):u.push(null);const f=l.join(",")+"|"+t.names().sort().join(",");let p=ep.get(f),m;if(p==null){const b=jG(i,t);p=b.sorted,m=b.recipientCounts,ep.put(f,p),np.put(f,m)}m={},a||Object.assign(m,np.get(f));const y=new ei(t);for(let b=0;b<p.length;++b){const v=p[b],w=v.sourceLayer;if(w instanceof Kh)continue;const S=[],C=[],$=[];let T=!1;for(const D of v.inputs){const O=y.getValue(D),A=y.getMask(D);S.push(O),C.push(A),A!=null&&(T=!0),a||(m[D.name]--,m[D.name]===0&&!t.hasKey(D)&&l.indexOf(D.name)===-1&&!O.isDisposed&&D.sourceLayer.stateful!==!0&&$.push(O))}T&&(e=e||{},e.mask=C[0]);const I=pe(w.apply(S,e));let R=null;w.supportsMasking&&(R=w.computeMask(S,C));const F=KG(v),M=Array.isArray(F)?F:[F];for(let D=0;D<M.length;++D){y.hasKey(M[D])||y.add(M[D],I[D],Array.isArray(R)?R[0]:R);const O=l.indexOf(M[D].name);O!==-1&&(u[O]=I[D])}a||jt($)}return y.disposeMasks(),r?u:u[0]}function jG(n,t){_(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const a=FT(n[0],t);e=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of n){const{sorted:i,recipientMap:l}=FT(r,t);for(const u of i)a.has(u.name)||(e.push(u),a.add(u.name));for(const u in l)s[u]==null&&(s[u]=new Set),l[u].forEach(h=>s[u].add(h))}}return{sorted:e,recipientCounts:XG(s)}}function XG(n){const t={};for(const e in n)t[e]=n[e].size;return t}function FT(n,t){const e=new Set,s=[],a={};for(const l of t.names())e.add(l);const r=[],i=[];for(r.push(n);r.length>0;){const l=r[r.length-1];if(e.has(l.name)){r.pop();continue}const u=i[i.length-1]===r.length-1;if(l.inputs.length===0||u)r.pop(),s.push(l),e.add(l.name),u&&i.pop();else{i.push(r.length-1);for(const h of l.inputs)a[h.name]==null&&(a[h.name]=new Set),a[h.name].add(l.name),!e.has(h.name)&&r.push(h)}}return{sorted:s,recipientMap:a}}function KG(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const a of n.sourceLayer.inboundNodes[s].outputTensors)if(a.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG=at();YG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,qG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ev(n,t){return nt(()=>Tn(At(G(n,n),t,!0)))}class Yh extends su{getConfig(){return{}}}class tE extends Yh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=Ev(t,this.axis),s=fs(e,0,this.maxValue);return G(t,Et(s,yt(nn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}tE.className="MaxNorm";xt(tE);class eE extends Yh{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>Et(t,yt(nn(),Ev(t,this.axis))))}getConfig(){return{axis:this.axis}}}eE.className="UnitNorm";xt(eE);class nE extends Yh{apply(t){return ja(t)}}nE.className="NonNeg";xt(nE);class sE extends Yh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=Ev(t,this.axis),s=yt(G(this.rate,fs(e,this.minValue,this.maxValue)),G(1-this.rate,e));return G(t,Et(s,yt(nn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}sE.className="MinMaxNorm";xt(sE);const LT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function rn(n){return bv(n)}function zT(n,t={}){return Hh(n,Zs.getMap().classNameMap,t,"constraint")}function on(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in LT?LT[n]:n,config:{}};return zT(e)}else return n instanceof Yh?n:zT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function eo(n){if(n==null)return;const t=[],e=[],s=[];for(const a in n){const r=n[a];if(typeof r!="number"){const i=r;t.push(i.data()),e.push(a),s.push(i)}}if(t.length>0){const a=await Promise.all(t);for(let r=0;r<a.length;++r)n[e[r]]=a[r][0];jt(s)}}function aE(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var MT;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(MT||(MT={}));const ZG=125;class Ac{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class QG{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class JG extends Ac{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const a in e){const r=e[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const l=nt(()=>yt(this.totals[a],G(r,s)));this.totals[a]=l,i!=null&&i.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:nt(()=>{const a=G(Et(1,this.seen),this.totals[s]);e[s]=a,this.totals[s].dispose(),fn(e[s])}))}}class tH extends Ac{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const r in this.history){const i=this.history[r];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const u=i[l];t.push(u.data()),e.push(r),s.push(l)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r)this.history[e[r]][s[r]].dispose(),this.history[e[r]][s[r]]=a[r][0]}}class eH extends Ac{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||uI,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=ZG),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Yb(this.yieldEvery)&&(this.maybeWait=pG(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const a=[];this.yield!=null&&(await eo(s),a.push(this.yield(t,e,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await eo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await eo(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await eo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await eo(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Yb(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await eo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await eo(t),await this.trainEnd(t))}}function rE(n,t){return n==null&&(n={}),n instanceof Ac?[n]:Array.isArray(n)&&n[0]instanceof Ac?n:pe(n).map(s=>new eH(s,t))}class Ks{constructor(){}static registerCallbackConstructor(t,e){_(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Ks.checkForDuplicate(e),Ks.constructors[t]==null&&(Ks.constructors[t]=[]),Ks.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ks.constructors)Ks.constructors[+e].forEach(a=>{if(a===t)throw new X("Duplicate callback constructor.")})}static clear(){Ks.constructors={}}static createCallbacks(t){const e=[];for(const s in Ks.constructors){const a=+s;t>=a&&e.push(...Ks.constructors[a])}return e.map(s=>new s)}}Ks.constructors={};function iE(n,t,e,s,a,r,i,l,u){const h=new tH,f=[new JG,...Ks.createCallbacks(t)];n!=null&&f.push(...n),f.push(h);const p=new QG(f);return p.setParams({epochs:e,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:t,doValidation:l,metrics:u}),{callbackList:p,history:h}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xr(n,t={},e=!1){return Hh(n,Zs.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sp(n,t){return nt(()=>{n.dtype!=="float32"&&(n=Nt(n,"float32"));const e=At(jh(n),t,!0),s=Jl(e.shape,nn()),a=Tn(kr(e,s));return Et(n,a)})}function tg(n,t){return nt(()=>ze(jh(kt(t,n)),-1))}function Av(n,t){return nt(()=>ze(tn(kt(t,n)),-1))}function Rv(n,t){return nt(()=>{const e=kt(n,t),s=fs(tn(n),nn(),Number.MAX_VALUE),a=tn(Et(e,s));return G(100,ze(a,-1))})}function nH(n,t){return nt(()=>{const e=fs(t,nn(),Number.MAX_VALUE),s=As(yt(1,e)),a=fs(n,nn(),Number.MAX_VALUE),r=As(yt(1,a));return ze(jh(kt(s,r)),-1)})}function sH(n,t){return nt(()=>{const e=kr(0,kt(1,G(n,t)));return ze(jh(e),-1)})}function aH(n,t){return nt(()=>{const e=kr(0,kt(1,G(n,t)));return ze(e,-1)})}function rH(n,t){return nt(()=>{const e=At(G(n,t),-1),s=na(G(kt(1,n),t),-1);return kr(0,yt(1,kt(s,e)))})}function iH(n,t){return nt(()=>{const e=Math.log(2),s=kt(t,n),a=kt(yt(s,tu(G(-2,s))),e);return ze(a,-1)})}function Rc(n,t,e=!1){return nt(()=>{if(e)t=Vm(t);else{const s=At(t,t.shape.length-1,!0);t=Et(t,s)}return t=fs(t,nn(),1-nn()),Ee(At(G(Nt(n,"float32"),As(t)),t.shape.length-1))})}function ap(n,t,e=!1){return nt(()=>{const s=Nt(Vh($G(n)),"int32");t=fs(t,nn(),1-nn());const a=t.shape,r=q(v1(s,a[a.length-1]),a);return Rc(r,t,e)})}function oH(n,t){if(!te(n.shape,t.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return nt(()=>{const e=ja(t),s=Ee(tn(t));return yt(kt(e,G(t,n)),Am(ps(s)))})}function eg(n,t){return nt(()=>{let e;return e=fs(t,nn(),1-nn()),e=As(Et(e,kt(1,e))),ze(oH(n,e),-1)})}function lH(n,t){return nt(()=>{const e=fs(n,nn(),1),s=fs(t,nn(),1);return At(G(n,As(Et(e,s))),-1)})}function uH(n,t){return nt(()=>{const e=As(yt(nn(),t));return ze(kt(t,G(n,e)),-1)})}function oE(n,t){return nt(()=>{const e=sp(n,-1),s=sp(t,-1),a=G(e,s);return Ee(At(a,-1))})}const rp={meanSquaredError:tg,meanAbsoluteError:Av,meanAbsolutePercentageError:Rv,meanSquaredLogarithmicError:nH,squaredHinge:sH,hinge:aH,categoricalHinge:rH,logcosh:iH,categoricalCrossentropy:Rc,sparseCategoricalCrossentropy:ap,binaryCrossentropy:eg,kullbackLeiblerDivergence:lH,poisson:uH,cosineProximity:oE};function zb(n){if(typeof n=="string"){if(n in rp)return rp[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lE(n,t){return nt(()=>{const e=G(.5,Rs(t)),s=Ua(xs(t,e),n.dtype);return ze(Na(n,s),-1)})}function uE(n,t){return nt(()=>Ua(Na(Bl(n,-1),Bl(t,-1)),"float32"))}function cH(n,t){return nt(()=>Nt(At(Ga(Na(n,1),Na(t,1))),"float32"))}function hH(n,t){return nt(()=>Nt(At(Ga(Na(n,0),Na(t,1))),"float32"))}function dH(n,t){return nt(()=>{const e=cH(n,t),s=hH(n,t),a=yt(e,s);return Nt(_n(xs(a,0),Et(e,a),0),"float32")})}function fH(n,t){return eg(n,t)}function pH(n,t){return n.rank===t.rank&&(n=Sr(n,[n.rank-1])),t=Bl(t,-1),t.dtype!==n.dtype&&(t=Nt(t,n.dtype)),Nt(Na(n,t),"float32")}const mH=tg,gH=tg,yH=Av,bH=Av,xH=Rv,vH=Rv,cE=Rc,wH=oE,hE=ap,ip={binaryAccuracy:lE,categoricalAccuracy:uE,precision:dH,categoricalCrossentropy:cE,sparseCategoricalCrossentropy:hE,mse:mH,MSE:gH,mae:yH,MAE:bH,mape:xH,MAPE:vH,cosine:wH};function SH(n){if(typeof n=="string"&&n in ip)return ip[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function wf(n){if(za(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(rp))if(rp[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ip))if(ip[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NH(n){const t={Adagrad:()=>wl.adagrad(.01),Adadelta:()=>wl.adadelta(1,.95,nn()),Adam:()=>wl.adam(.001,.9,.999,nn()),Adamax:()=>wl.adamax(.002,.9,.999,nn(),0),RMSProp:()=>wl.rmsprop(.001,.9,0,nn()),SGD:()=>wl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const BT=1*1024*1024;function VT(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!T0(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>BT&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${BT}.`)}}function T0(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!T0(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!T0(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CH(n,t,e,s=console.log){const a=$H(n),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(f=>Math.floor(t*f)));let i;if(!a){r.push("Receives inputs"),i=[];for(const f in n.nodesByDepth)i.push(...n.nodesByDepth[f])}s("_".repeat(t)),op(r,e,s),s("=".repeat(t));const l=n.layers;for(let f=0;f<l.length;++f)a?kH(l[f],e,s):IH(l[f],e,i,s),s((f===l.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=TH(n),h=tp(n.nonTrainableWeights);s(`Total params: ${u+h}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${h}`),s("_".repeat(t))}function TH(n){let t;return n.collectedTrainableWeights!=null?t=tp(n.collectedTrainableWeights):t=tp(n.trainableWeights),t}function $H(n){let t=!0;const e=[],s=[];for(const a in n.nodesByDepth)e.push(n.nodesByDepth[a]);for(const a of e){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of n.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function op(n,t,e=console.log){let s="";for(let a=0;a<n.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=n[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);e(s)}function kH(n,t,e){let s,a;try{a=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),l=[`${r} (${i})`,a,s,n.countParams().toString()];op(l,t,e)}function IH(n,t,e,s){let a,r;try{r=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(n.outputShape)}catch{a="multiple"}const i=[];for(const p of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){const y=p.inboundLayers[m].name,b=p.nodeIndices[m],v=p.tensorIndices[m];i.push(`${y}[${b}][${v}]`)}const l=n.name,u=n.getClassName(),h=i.length===0?"":i[0],f=[`${l} (${u})`,r,a,n.countParams().toString(),h];op(f,t,s);for(let p=1;p<i.length;++p)op(["","","","",i[p]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dE(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function $0(n,t){if(n===null)return null;if(typeof n=="string")return ro(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];dE(t,a,r)?e.push(r):e.push($0(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s];if(s==="name"&&typeof a=="string")e[s]=a;else{const r=ro(s);e[r]=$0(a,r)}}return e}}function k0(n,t){if(n==null)return null;if(typeof n=="string")return fr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];dE(t,a,r)?e.push(r):e.push(k0(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s],r=fr(s);(s==="name"||s==="className")&&typeof a=="string"?e[r]=a:e[r]=k0(a,s)}return e}}/** @license See the LICENSE file. */const fE="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const EH=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class ya extends Kt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const C=this.getClassName().toLowerCase();this.name=Zm(C)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ri(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(C=>C.name)}`);ri(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(C=>C.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const C of this.outputs){const $=C.sourceLayer,T=C.nodeIndex,I=C.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(T),this.outputLayersTensorIndices.push(I)}for(const C of this.inputs){const $=C.sourceLayer,T=C.nodeIndex,I=C.tensorIndex;za(T===0,"input layer has >1 nodes"),za(I===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(T),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let C=0;C<this.inputLayers.length;C++){const $=this.inputLayers[C];if(!($ instanceof Kh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${C} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const C of this.outputLayers)this.outputNames.push(C.name);this.internalInputShapes=this.inputs.map(C=>C.shape),this.internalOutputShapes=this.outputs.map(C=>C.shape);const e={},s={},a={},r={},i={},l=[],u=(C,$,T,I,R,F)=>{(I==null||R==null||F==null)&&(I=C.sourceLayer,R=C.nodeIndex,F=C.tensorIndex);const M=I.inboundNodes[R];if(T.indexOf(M)!==-1)throw new Js(`The tensor ${C.name} at layer "${I.name}" is part of a cycle.`);if($.indexOf(M)!==-1)return;this.containerNodes.add(ya.nodeKey(I,R)),I.id in i||(i[I.id]=Object.keys(i).length),T.indexOf(M)===-1&&T.push(M);const D=M.inboundLayers.length;for(let O=0;O<D;O++){const A=M.inputTensors[O],W=M.inboundLayers[O],K=M.nodeIndices[O],tt=M.tensorIndices[O];u(A,$,T,W,K,tt)}for($.push(M);T.indexOf(M)>=0;)T.splice(T.indexOf(M),1);l.push(M)},h=[],f=[];for(const C of this.outputs)u(C,h,f);const p=l.slice().reverse();for(const C of p){s[C.id]=C,C.id in e||(e[C.id]=0);let $=e[C.id];const T=a[C.outboundLayer.id]==null?0:a[C.outboundLayer.id];$=Math.max($,T),a[C.outboundLayer.id]=$,r[C.outboundLayer.id]=C.outboundLayer,e[C.id]=$;for(let I=0;I<C.inboundLayers.length;I++){const R=C.inboundLayers[I],F=C.nodeIndices[I],M=R.inboundNodes[F],D=e[M.id]==null?0:e[M.id];e[M.id]=Math.max($+1,D),s[M.id]=M}}const m={};for(const C in e){const $=e[C];$ in m||(m[$]=[]),m[$].push(s[C])}const y={};for(const C in a){const $=a[C];$ in y||(y[$]=[]),y[$].push(r[C])}let b=Object.keys(y).map(C=>parseInt(C,10)).sort(bf);this.layers=[];for(const C of b){const $=y[C];$.sort((T,I)=>{const R=i[T.id],F=i[I.id];return R<F?-1:R>F?1:0});for(const T of $)T instanceof ya&&this.internalContainerRefs.push(T),this.layers.push(T)}this.layersByDepth=y,b=Object.keys(m).map(C=>parseInt(C,10)).sort(bf);const v=this.inputs.slice(),w=[];for(const C of b)for(const $ of m[C]){const T=$.outboundLayer;if(T!=null){for(const I of $.inputTensors)if(v.indexOf(I)===-1)throw new Js(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${T.name}". The following previous layers were accessed without issue: ${w}`);for(const I of $.outputTensors)v.push(I);w.push(T.name)}}this.nodesByDepth=m;const S=this.layers.map(C=>C.name);for(const C of S){const $=S.filter(T=>T===C).length;if($!==1)throw new Js(`The name "${C}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(S))}this.outboundNodes=[],this.inboundNodes=[],new Jm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(C=>null),outputMasks:this.outputs.map(C=>null),inputShapes:this.inputs.map(C=>C.shape),outputShapes:this.outputs.map(C=>C.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let a=0;const r=EH(t);r&&this.parseWeights(t);for(const l of this.layers)for(const[u,h]of l.weights.entries()){const f=r?`${h.name.split("/").slice(0,-1).join("/")+"/"}${u}`:h.originalName;if(s[f]!=null)throw new X(`Duplicate weight name: ${f}`);s[f]=h,a++}const i=[];for(const l in t){let u=l;if(s[l]==null){const h=l.split("/");u=h.slice(0,-2).concat([h[h.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],t[l]]);else if(e)throw new X(`Provided weight data has no target variable: ${l}`);delete s[u]}if(e){const l=[];for(const u in s)l.push(u);if(l.length>0)throw new X(`${l.length} of ${a} weights are not set: ${l}`)}Iv(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==e&&(t[r]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${fE}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=k0(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return nt(()=>{t=pe(t);const s=new ei;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],t[a]);return bc(this.outputs,s,e)})}computeMask(t,e){return nt(()=>{t=pe(t);let s;return e==null?s=Co(null,t.length):s=pe(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Jf(t);if(e.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let l=0;l<e.length;l++){const u=this.inputLayers[l],h=e[l],f=u.name+"_0_0";s[f]=h}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(bf);if(a.length>1)for(const l of a){const u=this.nodesByDepth[l];for(const h of u){const f=h.outboundLayer;if(this.inputLayers.map(v=>v.id).indexOf(f.id)!==-1)continue;const p=[];for(let v=0;v<h.inboundLayers.length;v++){const w=h.inboundLayers[v],S=h.nodeIndices[v],C=h.tensorIndices[v],$=`${w.name}_${S}_${C}`,T=s[$];p.push(T)}const m=f.computeOutputShape(Qn(p)),y=Jf(m),b=f.inboundNodes.indexOf(h);for(let v=0;v<y.length;v++){const w=`${f.name}_${b}_${v}`;s[w]=y[v]}}}const r=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const u=this.outputLayers[l],h=this.outputLayersNodeIndices[l],f=this.outputLayersTensorIndices[l],p=`${u.name}_${h}_${f}`;i.push(p)}for(let l=0;l<i.length;l++){const u=i[l];za(u in s),r.push(s[u])}return Qn(r)}runInternalGraph(t,e){e==null&&(e=Co(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const h=this.inputs[u],f=t[u],p=e[u];s[h.id]=[f,p]}const a=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(bf);for(const u of a){const h=this.nodesByDepth[u];for(const f of h){const p=f.outboundLayer,m=f.inputTensors,y=f.outputTensors,b=new Array;for(const v of m)v.id in s&&b.push(s[v.id]);if(b.length===m.length){let v={},w,S,C,$;if(f.callArgs!=null&&(v=f.callArgs),b.length===1){const[T,I]=b[0];v.mask==null&&(v.mask=I),C=pe(p.call(T,v)),$=pe(p.computeMask(T,I)),w=[T],S=[I]}else w=b.map(T=>T[0]),S=b.map(T=>T[1]),v.mask==null&&(v.mask=S),C=pe(p.call(w,v)),$=pe(p.computeMask(w,S));if(p.activityRegularizer)throw new Gt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let T=0;T<y.length;++T){const I=y[T],R=C[T],F=$[T];s[I.id]=[R,F]}}}}const r=[],i=[],l=[];for(const u of this.outputs){za(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[h,f]=s[u.id];l.push(h.shape),r.push(h),i.push(f)}return[r,i,l]}buildNodeConversionMap(t){const e={};let s;for(const a of this.layers){s=a instanceof ya?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=ya.nodeKey(a,r);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new X("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new X(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new X(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return nt(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const a=ya.nodeKey(e,s);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const l=i.getClassName(),u=i.getConfig(),h=[];for(let p=0;p<i.inboundNodes.length;p++){const m=i.inboundNodes[p],y=ya.nodeKey(i,p);let b={};if(this.containerNodes.has(y)){if(m.callArgs)try{JSON.stringify(m.callArgs),b=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),b={}}if(m.inboundLayers.length>0){const v=[];for(let w=0;w<m.inboundLayers.length;w++){const S=m.inboundLayers[w],C=m.nodeIndices[w],$=m.tensorIndices[w],T=ya.nodeKey(S,C);let I=e[T];I==null&&(I=0),v.push([S.name,I,$,b])}h.push(v)}}}const f={};f.name=i.name,f.className=l,f.config=u,f.inboundNodes=h,s.push(f)}t.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],u=this.inputLayersNodeIndices[i],h=ya.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.inputLayersTensorIndices[i];a.push([l.name,f,p])}t.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],h=ya.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.outputLayersTensorIndices[i];r.push([l.name,f,p])}return t.outputLayers=r,t}static fromConfig(t,e,s={},a=!1){const r={},i={};function l(w,S){w.name in i?i[w.name].push(S):i[w.name]=[S]}function u(w,S){const C=[];let $;for(const T of S){const I=T[0],R=T[1],F=T[2];if($=T[3]==null?{}:T[3],!(I in r)){l(w,S);return}const M=r[I];if(M.inboundNodes.length<=R){l(w,S);return}const D=M.inboundNodes[R];C.push(D.outputTensors[F])}C.length>0&&w.apply(Qn(C),$)}function h(w){const S=w.name,C=xr(w,e.customObjects!=null?e.customObjects:{});C.setFastWeightInitDuringBuild(a),r[S]=C,w.inboundNodes.forEach(T=>{if(!(T instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${T}`);l(C,T)})}const f=e.name,p=e.layers;for(const w of p)h(w);for(;!fG(i);)for(const w of p){const S=r[w.name];if(S.name in i){const C=i[S.name];delete i[S.name];for(const $ of C)u(S,$)}}const m=[],y=[],b=e.inputLayers;for(const w of b){const S=w[0],C=w[1],$=w[2];za(S in r);const I=r[S].inboundNodes[C].outputTensors;m.push(I[$])}const v=e.outputLayers;for(const w of v){const S=w[0],C=w[1],$=w[2];za(S in r);const I=r[S].inboundNodes[C].outputTensors;y.push(I[$])}return new t({inputs:m,outputs:y,name:f})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){nt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AH(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(a=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const a=[];return t.forEach(r=>{r in n?a.push(n[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function pE(n,t){return AH(n,t,"classWeight")}async function mE(n,t,e,s){if(e!=null){const a=nt(()=>{if(n.shape.length===1)return br(n);if(n.shape.length===2){if(n.shape[1]>1)return Bl(n,1);if(n.shape[1]===1)return q(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());jt(a);const i=[];return r.forEach(l=>{if(e[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(e[l])}),Nn(i,"float32")}else return null}function RH(n,t){return G(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DH=32;function gE(n,t){let e,s;const a=t;e=a.xs,s=a.ys,_(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=PT("input",n.inputNames,e),i=PT("output",n.outputNames,s),l=r[0].shape[0];_(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),_(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<r.length;u++)_(r[u].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${r[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)_(i[u].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function PT(n,t,e){if(e instanceof Ie)return[e];if(Array.isArray(e))return _(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const a of t){if(e[a]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${a}'.`);s.push(e[a])}return s}}function OH(n){if(n.length===3)throw new Gt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function _H(n,t,e){const s=e.batchesPerEpoch!=null;if(_(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),_(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),_(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),_(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),_(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const a=e.validationData!=null;let r,i;if(a)if(UT(e.validationData))_(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const w=OH(e.validationData);r=w.xs,i=w.ys}const l=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let h;a?h=u.slice().concat(u.map(w=>"val_"+w)):h=u.slice();const f=rE(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:y}=iE(f,p,e.epochs,null,null,FH(t,e),null,a,h);m.setModel(n),n.history=y,await m.onTrainBegin(),n.stopTraining_=!1;let b=e.initialEpoch==null?0:e.initialEpoch,v=await t.iterator();for(;b<e.epochs;){const w={};await m.onEpochBegin(b);let S=0,C=0;for(s||(v=await t.iterator());!s||S<e.batchesPerEpoch;){const $=await v.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${S} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:T,ys:I}=gE(n,$.value),R={};R.batch=C,R.size=T[0].shape[0],await m.onBatchBegin(C,R);const F=[];if(e.classWeight!=null){const O=pE(e.classWeight,n.outputNames);for(let A=0;A<O.length;++A)F.push(await mE(I[A],null,O[A]))}const M=T.concat(I).concat(F),D=l(M);jt(M);for(let O=0;O<u.length;++O){const A=u[O],W=D[O];R[A]=W,fn(W)}await m.onBatchEnd(C,R),aE(R),C++,S++}if(s?S>=e.batchesPerEpoch:$.done){if(a){let T;UT(e.validationData)?T=pe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):T=pe(n.evaluate(r,i,{batchSize:e.validationBatchSize==null?DH:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)w[`val_${n.metricsNames[I]}`]=T[I]}break}if(n.stopTraining_)break}if(await m.onEpochEnd(b,w),b++,n.stopTraining_)break}return await m.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function FH(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function UT(n){return typeof n.iterator=="function"}function LH(n){return typeof n.next=="function"}async function zH(n,t,e){e=e||{};const s=e.batches!=null,a=n.testFunction;let r=[];if(e.verbose>0)throw new Gt("Verbose mode is not implemented yet.");_(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=LH(t)?t:await t.iterator();let l=0,u=0;for(;!s||u<e.batches;){const h=await i.next();if(r=nt(()=>{if(h.value){const{xs:f,ys:p}=gE(n,h.value),m=f.concat(p),y=nt(()=>a(m));if(jt(m),u===0)for(let v=0;v<y.length;++v)r.push(Lt(0));const b=m[0].shape[0];for(let v=0;v<y.length;++v){const w=y[v],S=r[v];r[v]=nt(()=>yt(r[v],G(b,w))),u>0&&jt(S)}jt(y),l+=b,++u}return r}),h.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let h=0;h<r.length;++h){const f=r[h];r[h]=Et(r[h],l),jt(f)}return Qn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mb(n){_(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function dc(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>fo(s,t,e-t)):fo(n,t,e-t)}function I0(n,t){return nt(()=>n==null?null:Array.isArray(n)?n.map(e=>I0(e,t)):GI(n,t.dtype==="int32"?t:Nt(t,"int32")))}function Bb(n,t){const e=[];let s=0,a=null;for(;s<n;)a=s+t,a>=n&&(a=n),e.push([s,a]),s=a;return e}function yE(n){const t=[];n instanceof Ie&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(qh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ga(n,t){if(n==null)return;const e=[];if(t instanceof Ie)e.push(t.id);else if(Array.isArray(t))t.forEach(a=>e.push(a.id));else if(t!=null)for(const a in t){const r=t[a];e.push(r.id)}const s=[];if(n instanceof Ie)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(a=>{e.indexOf(a.id)===-1&&s.push(a)});else if(n!=null)for(const a in n){const r=n[a];e.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MH(n){return n instanceof Ie}function E0(n){return Array.isArray(n)}function WT(n){return!MH(n)&&!E0(n)}function GT(n,t,e,s=!0,a=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(E0(n)&&n.length>0)i=!0;else if(WT(n)){for(const l in n)if(n.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new X(`Error when checking model ${a} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let r;if(WT(n)){n=n,r=[];for(const i of t){if(n[i]==null)throw new X(`No data provided for "${i}". Need data for each key in: ${t}`);r.push(n[i])}}else if(E0(n)){if(n=n,n.length!==t.length)throw new X(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,t.length>1)throw new X(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=yE(r),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new X(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${l.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f>=0&&h!==f)throw new X(`${a} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${a} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return r}function BH(n,t,e){const s=ri(n.map(r=>r.shape[0]));s.sort();const a=ri(t.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(a.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!te(s,a))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function VH(n,t,e){const s=[tg,eg,Rc];for(let a=0;a<n.length;++a){const r=n[a],i=t[a],l=e[a];if(i!=null){if(i===Rc&&r.shape[r.shape.length-1]===1)throw new X(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const u=r.shape.slice(1),h=l.slice(1);for(let f=0;f<u.length;++f){const p=u[f],m=h[f];if(m!=null&&p!==m)throw new X(`A target Tensor with shape ${r.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function HT(n,t,e,s=!0,a=""){let r;if(Array.isArray(n)){if(n.length!==t.length)throw new X(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(t.length>1)throw new X(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new X(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f!==h)throw new X(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function PH(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const a of t){let r=e.hasOwnProperty(a)?e[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const UH="layers-model";class Fl extends ya{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");CH(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=NH(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ki))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new X(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(zb(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(l=>zb(l))}else{const i=zb(t.loss);this.outputs.forEach(l=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ho("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=PH(t.metrics,this.outputNames),r=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};ho("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=a[i];(h=>{const f="";let p,m,y;for(const b of h){if(typeof b=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(b)!==-1){const w=this.internalOutputShapes[i];w[w.length-1]===1||this.lossFunctions[i]===eg?["accuracy","acc"].indexOf(b)!==-1?m=lE:["crossentropy","ce"].indexOf(b)!==-1&&(m=fH):this.lossFunctions[i]===ap?["accuracy","acc"].indexOf(b)!==-1?m=pH:["crossentropy","ce"].indexOf(b)!==-1&&(m=hE):["accuracy","acc"].indexOf(b)!==-1?m=uE:["crossentropy","ce"].indexOf(b)!==-1&&(m=cE);let S;["accuracy","acc"].indexOf(b)!==-1?S="acc":["crossentropy","ce"].indexOf(b)!==-1&&(S="ce"),y=m,p=f+S}else y=SH(b),p=f+wf(b);let v;ho(p,()=>{v=y}),r(i,p,v)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const a=s.batchSize==null?32:s.batchSize;Mb(a);const i=this.standardizeUserDataXY(t,e,!0,a);try{const l=i[0].concat(i[1]);this.makeTestFunction();const u=this.testFunction,h=this.testLoop(u,l,a,s.verbose,s.steps);return Qn(h)}finally{ga(i[0],t),ga(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),zH(this,t,e)}checkNumSamples(t,e,s,a="steps"){let r;if(s!=null){if(r=null,e!=null)throw new X(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new X(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),a=s?e:[e],r=this.retrieveSymbolicTensors(a),i=new ei;if(t instanceof Ie&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new X(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const h=t[u.name];if(h==null)throw new X(`No value is provided for the model's input ${u.name}`);i.add(u,h)}const l=bc(r,i);return s?l:l[0]}retrieveSymbolicTensors(t){const e=Co(null,t.length);let s=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(l=>l.name);for(let l=0;l<t.length;++l){const u=i.indexOf(t[l]);if(u!==-1&&(e[l]=r[u],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw e.forEach((r,i)=>{r==null&&a.push(t[i])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return e}predictLoop(t,e=32,s=!1){return nt(()=>{const a=this.checkNumSamples(t);if(s)throw new Gt("Verbose predictLoop() is not implemented yet.");const r=Bb(a,e),i=this.outputs.map(l=>[]);for(let l=0;l<r.length;++l)nt(()=>{const h=r[l][0],f=r[l][1],p=dc(t,h,f),m=[];if(Array.isArray(p))for(let b=0;b<p.length;++b)m.push({key:this.inputs[b],value:p[b]});else m.push({key:this.inputs[0],value:p});const y=new ei(m);return bc(this.outputs,y)}).forEach((h,f)=>i[f].push(h));return Qn(i.map(l=>Ye(l,0)))})}predict(t,e={}){const s=yE(t);HT(s,this.inputNames,this.feedInputShapes,!1);try{const a=e.batchSize==null?32:e.batchSize;return Mb(a),this.predictLoop(s,a)}finally{ga(s,t)}}predictOnBatch(t){HT(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,a){if(this.optimizer_==null)throw new Js("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===ap?r.push(l.slice(0,l.length-1).concat([1])):r.push(l)}if(t=GT(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=GT(e,this.feedOutputNames,r,!1,"target"),BH(t,e),VH(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&t[0].shape[0]%a!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,a,r=!0,i){const[l,u]=this.standardizeUserDataXY(t,e,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let h=null;if(a!=null){const f=pE(a,this.outputNames);h=[];for(let p=0;p<f.length;++p)h.push(await mE(u[p],null,f[p]))}return[l,u,h]}testLoop(t,e,s,a=0,r){return nt(()=>{const i=this.checkNumSamples(e,s,r,"steps"),l=[];if(a>0)throw new Gt("Verbose mode is not implemented yet.");if(r!=null)throw new Gt("steps mode in testLoop() is not implemented yet");{const u=Bb(i,s),h=Nn(Ca(0,i));for(let f=0;f<u.length;++f){const p=u[f][0],m=u[f][1],y=fo(h,p,m-p),b=I0(e,y),v=t(b);if(f===0)for(let w=0;w<v.length;++w)l.push(Lt(0));for(let w=0;w<v.length;++w){const S=v[w];l[w]=yt(l[w],G(m-p,S))}}for(let f=0;f<l.length;++f)l[f]=Et(l[f],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const a=t[s];let r=a;if(ET(t,a)>1){const i=ET(t.slice(0,s),a);r+=`_${i}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const p=[];for(let v=0;v<this.inputs.length;++v)p.push({key:this.inputs[v],value:s[v]});const m=new ei(p),y=bc(this.outputs,m,{training:!0});let b;for(let v=0;v<this.lossFunctions.length;++v){const w=this.lossFunctions[v];let S=w(a[v],y[v]);r[v]!=null&&(S=RH(S,r[v]));const C=ze(S);e.push(C),v===0?b=S:b=yt(b,S)}for(let v=0;v<this.metricsTensors.length;++v){let w;if(this.outputs.length>1&&v<this.outputs.length)w=e[v];else{const S=this.metricsTensors[v][0],C=this.metricsTensors[v][1];w=ze(S(a[C],y[C]))}fn(w),i.push(w)}return b=ze(b),this.calculateLosses().forEach(v=>{b=yt(b,v)}),b},u=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(l,!0,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>nt(()=>{const e=[];let s;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let h=0;h<this.inputs.length;++h)i.push({key:this.inputs[h],value:a[h]});const l=new ei(i),u=bc(this.outputs,l);for(let h=0;h<this.lossFunctions.length;++h){const f=this.lossFunctions[h],p=ze(f(r[h],u[h]));h===0?s=p:s=yt(s,p),e.push(s)}for(let h=0;h<this.metricsTensors.length;++h){const f=this.metricsTensors[h][0],p=this.metricsTensors[h][1],m=ze(f(r[p],u[p]));e.push(m)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,l,u,h,f,p,m;try{const y=s.batchSize==null?32:s.batchSize;Mb(y);const v=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,y);a=v[0],r=v[1],m=v[2];let w=!1,S;if(s.validationData!=null&&s.validationData.length>0){if(w=!0,s.validationData.length===2)u=s.validationData[0],h=s.validationData[1];else throw s.validationData.length===3?new Gt("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const O=await this.standardizeUserData(u,h,null,null,!0,y);f=O[0],p=O[1],S=f.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){w=!0;const D=Math.floor(a[0].shape[0]*(1-s.validationSplit)),O=a[0].shape[0];f=dc(a,D,O),i=a,a=dc(a,0,D),p=dc(r,D,O),l=r,r=dc(r,0,D),S=f.concat(p)}else s.validationSteps!=null&&(w=!0);const C=a.concat(r).concat(m);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),T=this.getDedupedMetricsNames();let I,R;w?(this.makeTestFunction(),I=this.testFunction,R=T.slice().concat(T.map(D=>"val_"+D))):(I=null,S=[],R=T.slice());const F=rE(s.callbacks,s.yieldEvery);return await this.fitLoop($,C,T,y,s.epochs,s.verbose,F,I,S,s.shuffle,R,s.initialEpoch,null,null)}finally{this.isTraining=!1,ga(a,t),ga(r,e),ga(i,t),ga(l,e),ga(f,u),ga(p,h),m!=null&&jt(m)}}async fitLoop(t,e,s,a,r,i,l,u,h,f,p,m,y,b){a==null&&(a=32),r==null&&(r=1),f==null&&(f=!0),m==null&&(m=0);let v=!1;if(u!=null&&h!=null&&(v=!0),b!=null&&(v=!0,y==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const w=this.checkNumSamples(e,a,y,"steps_per_epoch");let S;w!=null&&(S=Ca(0,w)),i==null&&(i=1);const{callbackList:C,history:$}=iE(l,i,r,m,w,y,a,v,p);C.setModel(this),this.history=$,await C.onTrainBegin(),this.stopTraining_=!1;for(let T=m;T<r;++T){await C.onEpochBegin(T);const I={};if(y!=null)throw new Gt("stepsPerEpoch mode is not implemented yet.");{if(f==="batch")throw new Gt("batch shuffling is not implemneted yet");f&&RF(S);const R=Nn(S),F=Bb(w,a);for(let M=0;M<F.length;++M){const D={};if(await C.onBatchBegin(M,D),nt(()=>{const O=F[M][0],A=F[M][1],W=fo(R,O,A-O);D.batch=M,D.size=A-O;const K=I0(e,W),tt=t(K);for(let Q=0;Q<s.length;++Q){const P=s[Q],et=tt[Q];D[P]=et,fn(et)}if(M===F.length-1&&v){const Q=this.testLoop(u,h,a);for(let P=0;P<s.length;++P){const et=s[P],Y=Q[P];fn(Y),I["val_"+et]=Y}}}),await C.onBatchEnd(M,D),aE(D),this.stopTraining_)break}R.dispose()}if(await C.onEpochEnd(T,I),this.stopTraining_)break}return await C.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return _H(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),a=s[0],r=s[1],l=this.makeTrainFunction()(a.concat(r)),u=[];for(const h of l){const f=await h.data();u.push(f[0])}return jt(l),ga(s[0],t),ga(s[1],e),Qn(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||e.push({name:a[i].originalName,tensor:r[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=aT().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-aT().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=fr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>fr(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const a of e)if(typeof s[a]=="string")t[a]=fr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[fr(wf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>fr(wf(t)));{const t={};for(const e in this.metrics)t[e]=fr(wf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=$0(t.optimizer_config),s=xr(e);let a;if(typeof t.loss=="string")a=ro(t.loss);else if(Array.isArray(t.loss))a=t.loss.map(i=>ro(i));else if(t.loss!=null){a={};for(const i in t.loss)a[i]=ro(t.loss[i])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(i=>ro(i));else if(t.metrics!=null){r={};for(const i in t.metrics)r[i]=ro(t.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(t,e){if(typeof t=="string"){const h=E$(t);if(h.length===0)throw new X(`Cannot find any save handlers for URL '${t}'`);if(h.length>1)throw new X(`Found more than one (${h.length}) save handlers for URL '${t}'`);t=h[0]}if(t.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await u0(this.getNamedWeights(e)),l={modelTopology:this.toJSON(null,!1),format:UH,generatedBy:`TensorFlow.js tfjs-layers v${fE}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const h="optimizer",{data:f,specs:p}=await u0(await this.optimizer.getWeights(),h);s.specs.push(...p),s.data=$$([s.data,f])}return this.userDefinedMetadata!=null&&(VT(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=s.data,l.weightSpecs=s.specs,t.save(l)}setUserDefinedMetadata(t){VT(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Fl.className="Model";xt(Fl);class bE extends Fl{}bE.className="Functional";xt(bE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dc extends Fl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Zm("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Dc||t instanceof Fl;let s;if(e){if(s=t,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=GG({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=JI(this.outputs[0])}this.inboundNodes=[],new Jm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Co(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(ue(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Fl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new Js("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new Js("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new Js("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new Js("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},a=!1){let r,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=e}else _(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,i=e;const l=new t(i);if(!(l instanceof Dc))throw new Gt(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of r){const f=xr(u,void 0,a);a&&f.setFastWeightInitDuringBuild(!0),l.add(f)}return l}set stopTraining(t){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Dc.className="Sequential";xt(Dc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ln=class extends su{getConfig(){return{}}};class xE extends Ln{apply(t,e=1){return IG(t,e)}}xE.className="elu";xt(xE);class vE extends Ln{apply(t){return $1(t)}}vE.className="selu";xt(vE);class wE extends Ln{apply(t){return ja(t)}}wE.className="relu";xt(wE);class SE extends Ln{apply(t){return nt(()=>So(6,ja(t)))}}SE.className="relu6";xt(SE);class NE extends Ln{apply(t){return t}}NE.className="linear";xt(NE);class CE extends Ln{apply(t){return wa(t)}}CE.className="sigmoid";xt(CE);class TE extends Ln{apply(t){return AG(t)}}TE.className="hardSigmoid";xt(TE);class $E extends Ln{apply(t){return tu(t)}}$E.className="softplus";xt($E);class kE extends Ln{apply(t){return EG(t)}}kE.className="softsign";xt(kE);class IE extends Ln{apply(t){return wo(t)}}IE.className="tanh";xt(IE);let Dv=class extends Ln{apply(t,e=-1){return Vm(t,e)}};Dv.className="softmax";xt(Dv);class EE extends Ln{apply(t,e=-1){return y1(t,e)}}EE.className="logSoftmax";xt(EE);class AE extends Ln{apply(t){return nt(()=>nt(()=>{const e=Math.sqrt(2),s=G(.5,yt(1,p1(Et(t,e))));return G(t,s)}))}}AE.className="gelu";xt(AE);class RE extends Ln{apply(t){return nt(()=>G(.5,G(t,yt(1,wo(G(Tn(Et(2,Math.PI)),yt(t,G(.044715,vr(t,3)))))))))}}RE.className="gelu_new";xt(RE);class DE extends Ln{apply(t){return nt(()=>G(t,wo(tu(t))))}}DE.className="mish";xt(DE);class OE extends Ln{apply(t,e=1){return nt(()=>G(wa(G(t,e)),t))}}OE.className="swish";xt(OE);function fi(n){return n.getClassName()}function Vb(n,t={}){return Hh(n,Zs.getMap().classNameMap,t,"activation")}function pi(n){if(n==null){const t={};return t.className="linear",t.config={},Vb(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},Vb(t)}else return n instanceof Ln?n:Vb(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WH(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class _E extends su{}class FE extends _E{constructor(t){super(),WH(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return nt(()=>{let e=en([1]);return this.hasL1&&(e=yt(e,At(G(this.l1,tn(t))))),this.hasL2&&(e=yt(e,At(G(this.l2,jh(t))))),q(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}FE.className="L1L2";xt(FE);const qT={l1l2:"L1L2"};function Se(n){return bv(n)}function jT(n,t={}){return Hh(n,Zs.getMap().classNameMap,t,"regularizer")}function Re(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in qT?qT[n]:n,config:{}};return jT(e)}else return n instanceof _E?n:jT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LE extends Kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Vt(t);let s=ja(t);return this.maxValue!=null&&(s=fs(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}LE.className="ReLU";xt(LE);class zE extends Kt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return Em(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}zE.className="LeakyReLU";xt(zE);class ME extends Kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ae(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Re(t.alphaRegularizer),this.alphaConstraint=on(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=ue(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)s[a]=t[a];this.inputSpec=[new sn({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Vt(t),Lm(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Oe(this.alphaInitializer),alphaRegularizer:Se(this.alphaRegularizer),alphaConstraint:rn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ME.className="PReLU";xt(ME);let BE=class extends Kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Gt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return Mh(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};BE.className="ELU";xt(BE);class VE extends Kt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Vt(t);return G(s,Nt(xs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}VE.className="ThresholdedReLU";xt(VE);class PE extends Kt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Dv().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return nt(()=>{let s=Vt(t);const a=e.mask;if(a!=null){const r=G(kt(us(s.shape),Nt(a,s.dtype)),Lt(-1e9));s=yt(s,r)}return this.axis instanceof Array?this.axis.length>1?ps(kt(s,Rm(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}PE.className="Softmax";xt(PE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ll(n,t,e){if(typeof n=="number")return Co(n,t);if(n.length!==t)throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const a=n[s];if(!CG(a))throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${a}`)}return n}function Sa(n,t,e,s,a=1){if(n==null)return n;const r=t+(t-1)*(a-1);let i;return e==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Ma(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+di([e-t,0]);else if(s==="same")n=n*t;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ov(n,t){return nt(()=>(je(t),t==="channelsFirst"?ae(n,[0,2,3,1]):n))}function UE(n,t){return nt(()=>(je(t),t==="channelsFirst"?ae(n,[0,2,3,4,1]):n))}function GH(n,t,e,s=1,a="valid",r,i=1){return nt(()=>{if(r==null&&(r=Ta()),je(r),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=ae(n,[0,2,1])),a==="causal")throw new Gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=u1(n,t,s,a==="same"?"same":"valid","NWC",i);return e!=null&&(l=Ia(l,e)),l})}function XT(n,t,e,s=[1,1],a="valid",r,i,l=null){return nt(()=>{if(r==null&&(r=Ta()),je(r),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=Ov(n,r);if(a==="causal")throw new Gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Fk({x:u,filter:t,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:l}),r==="channelsFirst"&&(u=ae(u,[0,3,1,2])),u})}function HH(n,t,e,s=[1,1,1],a="valid",r,i){return nt(()=>{if(r==null&&(r=Ta()),je(r),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=UE(n,r);if(a==="causal")throw new Gt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=ek(l,t,s,a==="same"?"same":"valid","NDHWC",i),e!=null&&(l=Ia(l,e)),r==="channelsFirst"&&(l=ae(l,[0,4,1,2,3])),l})}class ng extends Kt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ng.verifyArgs(e),this.rank=t,pn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Gt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ll(e.kernelSize,t,"kernelSize"),this.strides=Ll(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Os(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,je(this.dataFormat),this.activation=pi(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ae(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=on(e.biasConstraint),this.biasRegularizer=Re(e.biasRegularizer),this.activityRegularizer=Re(e.activityRegularizer),this.dilationRate=Ll(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(za("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!xv(t.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:fi(this.activation),useBias:this.useBias,biasInitializer:Oe(this.biasInitializer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),biasConstraint:rn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class au extends ng{constructor(t,e){super(t,e),this.kernel=null,au.verifyArgs(e),this.filters=e.filters,pn(this.filters,"filters"),this.kernelInitializer=Ae(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=on(e.kernelConstraint),this.kernelRegularizer=Re(e.kernelRegularizer)}build(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;const a=this.bias==null?null:this.bias.read(),r=MI(this.activation.getClassName());if(r!=null&&this.rank===2)s=XT(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=GH(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=XT(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=HH(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Gt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=ue(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<s.length;++r){const i=Sa(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Oe(this.kernelInitializer),kernelRegularizer:Se(this.kernelRegularizer),kernelConstraint:rn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Zh extends au{constructor(t){super(2,t),Zh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!xv(t.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Zh.className="Conv2D";xt(Zh);class Qh extends au{constructor(t){super(3,t),Qh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Qh.className="Conv3D";xt(Qh);class WE extends Zh{constructor(t){if(super(t),this.inputSpec=[new sn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const u=a[i],h=a[l],f=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],y=this.strides[1],b=Ma(u,m,f,this.padding),v=Ma(h,y,p,this.padding),w=[r,b,v,this.filters];this.dataFormat!=="channelsLast"&&(s=ae(s,[0,2,3,1]));let S=h1(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=ae(S,[0,3,1,2])),this.bias!=null&&(S=Ia(S,this.bias.read(),this.dataFormat)),this.activation!=null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1];return e[s]=this.filters,e[a]=Ma(e[a],u,i,this.padding),e[r]=Ma(e[r],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}WE.className="Conv2DTranspose";xt(WE);class GE extends Qh{constructor(t){if(super(t),this.inputSpec=[new sn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l,u;this.dataFormat==="channelsFirst"?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[u],f=a[i],p=a[l],m=this.kernelSize[0],y=this.kernelSize[1],b=this.kernelSize[2],v=this.strides[0],w=this.strides[1],S=this.strides[2],C=Ma(h,v,m,this.padding),$=Ma(f,w,y,this.padding),T=Ma(p,S,b,this.padding),I=[r,C,$,T,this.filters];this.dataFormat!=="channelsLast"&&(s=ae(s,[0,2,3,4,1]));let R=sk(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=ae(R,[0,4,1,2,3])),this.bias!==null&&(R=Ia(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],p=this.strides[1],m=this.strides[2];return e[s]=this.filters,e[a]=Ma(e[a],f,l,this.padding),e[r]=Ma(e[r],p,u,this.padding),e[i]=Ma(e[i],m,h,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}GE.className="Conv3DTranspose";xt(GE);class HE extends au{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ae(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Re(e.depthwiseRegularizer),this.depthwiseConstraint=on(e.depthwiseConstraint),this.pointwiseInitializer=Ae(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Re(e.pointwiseRegularizer),this.pointwiseConstraint=on(e.pointwiseConstraint)}build(t){if(t=ue(t),t.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let l=0;l<this.rank;++l)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new sn({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;if(this.rank===1)throw new Gt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=ae(t,[0,2,3,1])),s=k1(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Ia(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=ae(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Oe(this.depthwiseInitializer),t.pointwiseInitializer=Oe(this.pointwiseInitializer),t.depthwiseRegularizer=Se(this.depthwiseRegularizer),t.pointwiseRegularizer=Se(this.pointwiseRegularizer),t.depthwiseConstraint=rn(this.depthwiseConstraint),t.pointwiseConstraint=rn(this.pointwiseConstraint),t}}HE.className="SeparableConv";class qE extends HE{constructor(t){super(2,t)}}qE.className="SeparableConv2D";xt(qE);class sg extends au{constructor(t){super(1,t),sg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!xv(t.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}sg.className="Conv1D";xt(sg);class jE extends Kt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return nt(()=>{if(t=Vt(t),this.dataFormat==="channelsLast"){const s=vf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vf(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=vf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vf(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}jE.className="Cropping2D";xt(jE);class XE extends Kt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,je(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,wG(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return nt(()=>{let s=Vt(t);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=ae(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],l=this.interpolation==="nearest"?cs.resizeNearestNeighbor(s,[r,i]):cs.resizeBilinear(s,[r,i]);return ae(l,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?cs.resizeNearestNeighbor(s,[r,i]):cs.resizeBilinear(s,[r,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}XE.className="UpSampling2D";xt(XE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qH(n,t,e=[1,1],s="valid",a,r){return nt(()=>{a==null&&(a=Ta()),je(a);let i=Ov(n,a);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=zh(i,t,e,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=ae(i,[0,3,1,2])),i})}class KE extends ng{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ae(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=on(t.depthwiseConstraint),this.depthwiseRegularizer=Re(t.depthwiseRegularizer)}build(t){if(t=ue(t),t.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s=qH(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Ia(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Sa(e,this.kernelSize[0],this.padding,this.strides[0]),i=Sa(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,r,i]:[t[0],r,i,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Oe(this.depthwiseInitializer),t.depthwiseRegularizer=Se(this.depthwiseRegularizer),t.depthwiseConstraint=rn(this.depthwiseRegularizer),t}}KE.className="DepthwiseConv2D";xt(KE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YE(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return t=a(t),e=a(e),{inputs:n,initialState:t,constants:e}}function ZE(n,t,e,s=!1,a,r,i=!1,l=!1){return nt(()=>{const u=t.shape.length;if(u<3)throw new X(`Input should be at least 3D, but is ${u}D.`);const h=[1,0].concat(Ca(2,u));t=ae(t,h),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=Nt(Nt(a,"bool"),"float32"),a.rank===u-1&&(a=On(a,-1)),a=ae(a,h)),s&&(t=aa(t,0),a!=null&&(a=aa(a,0)));const f=[];let p,m=e;const y=t.shape[0],b=ra(t);let v;a!=null&&(v=ra(a));for(let S=0;S<y;++S){const C=b[S],$=nt(()=>n(C,m));if(a==null)p=$[0],m=$[1];else{const T=nt(()=>{const I=v[S],R=kt(Rs(I),I),F=yt(G($[0],I),G(m[0],R)),M=m.map((D,O)=>yt(G($[1][O],I),G(D,R)));return{output:F,newStates:M}});p=T.output,m=T.newStates}l&&f.push(p)}let w;return l&&(w=ms(f,1)),[p,w,m]})}class Ii extends Kt{constructor(t){super(t);let e;if(t.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Lv({cells:t.cell}):e=t.cell,e.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new sn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ca(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){N0(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let a;if(this.returnSequences?a=[t[0],t[1],s]:a=[t[0],s],this.returnState){const r=[];for(const i of e)r.push([t[0],i]);return[a].concat(r)}else return a}computeMask(t,e){return nt(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Gt("Constants support is not implemented in RNN yet.");N0(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new sn({shape:[e,null,...s]});const a=[t[0]].concat(t.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!te(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new sn({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>en([s,a])):this.states_=[en([s,this.cell.stateSize])];else if(t==null)jt(this.states_),this.keptStates!=null&&(jt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>en([s,a])):this.states_[0]=en([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):jt(this.states_);for(let a=0;a<this.states_.length;++a){const r=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[s,i];if(!te(r.shape,l))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>fn(a.clone()))})}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=YE(t,s,a,this.numConstants);t=r.inputs,s=r.initialState,a=r.constants;let i=[],l=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const h of s)this.stateSpec.push(new sn({shape:h.shape}));l=l.concat(this.stateSpec)}if(a!=null&&(e.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Ha){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e==null?null:e.mask,a=e==null?null:e.training;let r=e==null?null:e.initialState;t=Vt(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new X(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},h=ZE((b,v)=>{const w=this.cell.call([b].concat(v),l);return[w[0],w.slice(1)]},t,r,this.goBackwards,s,null,this.unroll,this.returnSequences),f=h[0],p=h[1],m=h[2];this.stateful&&this.resetStates(m,a);const y=this.returnSequences?p:f;return this.returnState?[y].concat(m):y})}getInitialState(t){return nt(()=>{let e=en(t.shape);return e=At(e,[1,2]),e=qh(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?w0(e,[1,s]):e):this.cell.stateSize>1?[w0(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ii.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const a=e.cell,r=xr(a,s);return new t(Object.assign(e,{cell:r}))}}Ii.className="RNN";xt(Ii);class ag extends Kt{}class _v extends ag{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,pn(this.units,"units"),this.activation=pi(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Re(t.kernelRegularizer),this.recurrentRegularizer=Re(t.recurrentRegularizer),this.biasRegularizer=Re(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=Wl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Wl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const a=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?r=Wa(G(t,i),this.kernel.read()):r=Wa(t,this.kernel.read()),this.bias!=null&&(r=Ia(r,this.bias.read())),l!=null&&(s=G(s,l));let u=yt(r,Wa(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:rn(this.kernelConstraint),recurrentConstraint:rn(this.recurrentConstraint),biasConstraint:rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}_v.className="SimpleRNNCell";xt(_v);class QE extends Ii{constructor(t){t.cell=new _v(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(jt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(jt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return new t(e)}}QE.className="SimpleRNN";xt(QE);class Fv extends ag{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=t.units,pn(this.units,"units"),this.activation=pi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=pi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Re(t.kernelRegularizer),this.recurrentRegularizer=Re(t.recurrentRegularizer),this.biasRegularizer=Re(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=Wl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Wl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let l,u,h;0<this.dropout&&this.dropout<1&&(t=G(t,r[0]));let f=Wa(t,this.kernel.read());this.useBias&&(f=Ia(f,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=G(a,i[0]));const p=this.recurrentKernel.read(),[m,y]=hs(p,[2*this.units,this.units],p.rank-1),b=Wa(a,m),[v,w,S]=hs(f,3,f.rank-1),[C,$]=hs(b,2,b.rank-1);l=this.recurrentActivation.apply(yt(v,C)),u=this.recurrentActivation.apply(yt(w,$));const T=Wa(G(u,a),y);h=this.activation.apply(yt(S,T));const I=yt(G(l,a),G(yt(1,Ee(l)),h));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),recurrentActivation:fi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:rn(this.kernelConstraint),recurrentConstraint:rn(this.recurrentConstraint),biasConstraint:rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Fv.className="GRUCell";xt(Fv);class JE extends Ii{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fv(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(jt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(jt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}JE.className="GRU";xt(JE);class rg extends ag{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,pn(this.units,"units"),this.activation=pi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=pi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Re(t.kernelRegularizer),this.recurrentRegularizer=Re(t.recurrentRegularizer),this.biasRegularizer=Re(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=Wl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Wl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=ue(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(e=class extends oa{apply(u,h){const f=r.apply([i]),p=new wv().apply([i]),m=r.apply([i*2]);return RT(RT(f,p),m)}},e.className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let u,h,f,p;0<this.dropout&&this.dropout<1&&(t=G(t,i[0]));let m=Wa(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=G(a,l[0])),m=yt(m,Wa(a,this.recurrentKernel.read())),this.useBias&&(m=Ia(m,this.bias.read()));const[y,b,v,w]=hs(m,4,m.rank-1);u=this.recurrentActivation.apply(y),h=this.recurrentActivation.apply(b),f=yt(G(h,r),G(u,this.activation.apply(v))),p=this.recurrentActivation.apply(w);const S=G(p,this.activation.apply(f));return[S,S,f]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),recurrentActivation:fi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:rn(this.kernelConstraint),recurrentConstraint:rn(this.recurrentConstraint),biasConstraint:rn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}rg.className="LSTMCell";xt(rg);class tA extends Ii{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new rg(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(jt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(jt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}tA.className="LSTM";xt(tA);class Lv extends ag{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return nt(()=>{t=t;let s=t.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(s.splice(0,l.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];s=a[l],l===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=u.call(i,e),r.push(i.slice(1))}s=[];for(const l of r.slice().reverse())s.push(...l);return[i[0]].concat(s)})}build(t){N0(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,a)=>{ho(`RNNCell_${a}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),a)}static fromConfig(t,e,s={}){const a=[];for(const r of e.cells)a.push(xr(r,s));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return C0(t)}setWeights(t){const e=[];for(const s of this.cells){const a=s.weights.length,r=t.splice(a);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],r[i]])}Iv(e)}}Lv.className="StackedRNNCells";xt(Lv);function mi(n){const{ones:t,rate:e,training:s=!1,count:a=1,dropoutFunc:r}=n,i=()=>r!=null?r(t(),e):HI(t(),e),l=()=>Xh(i,t,s);return!a||a<=1?fn(l().clone()):Array(a).fill(void 0).map(l).map(h=>fn(h.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var jH=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(n);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(n,s[a])&&(e[s[a]]=n[s[a]]);return e};class eA extends Ii{constructor(t){if(t.unroll)throw new Gt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Gt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new sn({ndim:5})]}call(t,e){return nt(()=>{if(this.cell.dropoutMask!=null&&(jt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(jt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new X("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return nt(()=>{const{stateSize:e}=this.cell,s=t.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=en(r);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>en(r)):this.states_=[en(r)];else if(t==null)jt(this.states_),this.keptStates!=null&&(jt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>en(r)):this.states_[0]=en(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):jt(this.states_);for(let l=0;l<this.states_.length;++l){const u=t[l],h=r;if(!te(u.shape,h))throw new X(`State ${l} is incompatible with layer ${this.name}: expected shape=${h}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>fn(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:l}=this.cell,u=e==="channelsFirst",h=t[u?3:2],f=t[u?4:3],p=Sa(h,a[0],r,i[0],l[0]),m=Sa(f,a[1],r,i[1],l[1]);return[...t.slice(0,2),...u?[s,p,m]:[p,m,s]]}}eA.className="ConvRNN2D";class zv extends rg{constructor(t){const{filters:e,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:l}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,pn(this.filters,"filters"),this.kernelSize=Ll(s,2,"kernelSize"),this.kernelSize.forEach(u=>pn(u,"kernelSize")),this.strides=Ll(a||1,2,"strides"),this.strides.forEach(u=>pn(u,"strides")),this.padding=r||"valid",Os(this.padding),this.dataFormat=i||"channelsLast",je(this.dataFormat),this.dilationRate=Ll(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>pn(u,"dilationRate"))}build(t){var e;t=ue(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[s]}`);const a=t[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const h=this.biasInitializer,f=this.filters;u=new(e=class extends oa{apply(m,y){const b=h.apply([f]),v=us([f]),w=h.apply([f*2]);return vv([b,v,w])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return nt(()=>{if(t.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,a=t[0],r=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(a),rate:this.dropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,h=(B,j,lt)=>!j||!j[lt]?B:G(j[lt],B);let f=h(a,u,0),p=h(a,u,1),m=h(a,u,2),y=h(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(r),rate:this.recurrentDropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const b=this.recurrentDropoutMask;let v=h(r,b,0),w=h(r,b,1),S=h(r,b,2),C=h(r,b,3);const $=3,[T,I,R,F]=hs(this.kernel.read(),l,$),[M,D,O,A]=this.useBias?hs(this.bias.read(),l):[null,null,null,null];f=this.inputConv(f,T,M,this.padding),p=this.inputConv(p,I,D,this.padding),m=this.inputConv(m,R,O,this.padding),y=this.inputConv(y,F,A,this.padding);const[W,K,tt,Q]=hs(this.recurrentKernel.read(),l,$);v=this.recurrentConv(v,W),w=this.recurrentConv(w,K),S=this.recurrentConv(S,tt),C=this.recurrentConv(C,Q);const P=this.recurrentActivation.apply(yt(f,v)),et=this.recurrentActivation.apply(yt(p,w)),Y=yt(G(et,i),G(P,this.activation.apply(yt(m,S)))),rt=G(this.recurrentActivation.apply(yt(y,C)),this.activation.apply(Y));return[rt,rt,Y]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=jH(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),a)}inputConv(t,e,s,a){const r=hi(t,e,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Ia(r,s,this.dataFormat):r}recurrentConv(t,e){return hi(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}zv.className="ConvLSTM2DCell";xt(zv);class nA extends eA{constructor(t){const e=new zv(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}nA.className="ConvLSTM2D";xt(nA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mv extends Kt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?e[a]:this.noiseShape[a]);return s}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);if(0<this.rate&&this.rate<1){const a=e.training==null?!1:e.training,r=this.getNoiseShape(s);return Xh(()=>HI(s,this.rate,r,this.seed),()=>s,a)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Mv.className="Dropout";xt(Mv);class sA extends Mv{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}sA.className="SpatialDropout1D";xt(sA);class aA extends Kt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,pn(this.units,"units"),this.activation=pi(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=on(t.kernelConstraint),this.biasConstraint=on(t.biasConstraint),this.kernelRegularizer=Re(t.kernelRegularizer),this.biasRegularizer=Re(t.biasRegularizer),this.activityRegularizer=Re(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=ue(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=ue(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=MI(this.activation.getClassName());let r;return a!=null?r=Wa(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Wa(s,this.kernel.read()),this.bias!=null&&(r=Ia(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:fi(this.activation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:rn(this.kernelConstraint),biasConstraint:rn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}aA.className="Dense";xt(aA);class rA extends Kt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ue(t);for(const e of t.slice(1))if(e==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ii(t,1)]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=ae(s,a)}return kG(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}rA.className="Flatten";xt(rA);class iA extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.activation=pi(t.activation)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.activation.apply(s)})}getConfig(){const t={activation:fi(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}iA.className="Activation";xt(iA);class oA extends Kt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return nt(()=>(t=Vt(t),TG(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}oA.className="RepeatVector";xt(oA);class lA extends Kt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",a=e.slice();let r=1,i=null;for(let u=0;u<a.length;++u){const h=a[u];if(this.isUnknown(h))if(i===null)i=u;else throw new X("Can only specifiy one unknown dimension.");else r*=h}const l=ii(t);if(i!==null){if(r===0||l%r!==0)throw new X(s);a[i]=l/r}else if(l!==r)throw new X(s);return a}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return q(s,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}lA.className="Reshape";xt(lA);class uA extends Kt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Ca(1,t.dims.length+1);if(!te(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new sn({ndim:this.dims.length+1})]}computeOutputShape(t){t=ue(t);const e=t.slice();return this.dims.forEach((s,a)=>{e[a+1]=t[s]}),e}call(t,e){return ae(Vt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}uA.className="Permute";xt(uA);class cA extends Kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Vt(t);return Zf(Pl(s,this.maskValue),-1)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),i=Zf(Pl(s,this.maskValue),-1,!0);return G(s,Nt(i,s.dtype))})}}cA.className="Masking";xt(cA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hA extends Kt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(pe(t.inputLength))}this.inputDim=t.inputDim,pn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,pn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ae(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Re(t.embeddingsRegularizer),this.activityRegularizer=Re(t.activityRegularizer),this.embeddingsConstraint=on(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return nt(()=>this.maskZero?(t=Vt(t),Pl(t,re(t))):null)}computeOutputShape(t){if(t=ue(t),this.inputLength==null)return[...t,this.outputDim];const e=pe(this.inputLength);if(e.length!==t.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let a=0;a<e.length;++a){const r=e[a],i=t[a+1];if(r!=null&&i!=null&&r!==i)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);s.dtype!=="int32"&&(s=Ua(s,"int32"));const a=GI(this.embeddings.read(),q(s,[s.size]));return q(a,ue(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Oe(this.embeddingsInitializer),embeddingsRegularizer:Se(this.embeddingsRegularizer),activityRegularizer:Se(this.activityRegularizer),embeddingsConstraint:rn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}hA.className="Embedding";xt(hA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _o extends Kt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Gt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],i=e[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(r)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ue(t)]),t=t,t.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=ri(e),e.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=t.map(r=>r.length);t.indexOf(null)===-1&&ri(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return nt(()=>{if(t=t,this.reshapeRequired){const s=[],a=t.map(r=>r.rank);if(a.indexOf(null)===-1){const r=di(a);for(let i of t){const l=i.rank;for(let u=0;u<r-l;++u)i=qh(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const u of t){const h=u.rank;if(h==null){const f=u.shape,p=f[0],m=f.slice(1).concat([p]);let y=q(u,[p].concat(ii(f.slice(1))));y=ae(y,[1,0]),y=q(y,m),s.push(y),r=!0}else if(h>1){const f=Ca(1,h).concat([0]);s.push(ae(u,f)),r=!0}else s.push(u)}let i=this.mergeFunction(s);const l=i.rank;if(r){if(l==null){const u=i.shape,h=u.length,f=u[h-1],p=[f].concat(u.slice(0,u.length-1));i=q(ae(q(i,[-1,f]),[1,0]),p)}else if(l>1){const u=[l-1].concat(Ca(0,l-1));i=ae(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let a=1;a<t.length;++a){const r=t[a]==null?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let s=[];for(const a of t)a!=null&&a[0]!==null&&s.push(a[0]);return s=ri(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return nt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an Array");if(!Array.isArray(t))throw new X("`inputs` should be an Array");if(e.length!==t.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(a=>a==null))return null;e=e.map(a=>a==null?a:On(a,0));let s=e[0];for(let a=1;a<e.length-1;++a)s=Ga(s,e[a]);return s})}}class dA extends _o{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return e})}}dA.className="Add";xt(dA);class fA extends _o{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=G(e,t[s]);return e})}}fA.className="Multiply";xt(fA);class pA extends _o{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return G(1/t.length,e)})}}pA.className="Average";xt(pA);class mA extends _o{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=kr(e,t[s]);return e})}}mA.className="Maximum";xt(mA);class gA extends _o{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=So(e,t[s]);return e})}}gA.className="Minimum";xt(gA);class yA extends _o{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const a of t)if(a!=null){e=!1;break}if(e)return;const s=[];for(let a=0;a<t.length;++a){const r=t[a].slice();r.splice(this.axis,1);let i=!1;for(const l of s)if(te(l,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return nt(()=>vv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of e.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new X("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new X(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return nt(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<t.length;++i)e[i]==null?a.push(Nt(Rs(t[i]),"bool")):e[i].rank<t[i].rank?a.push(On(e[i],-1)):a.push(e[i]);const r=Ye(a,this.axis);return i1(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}yA.className="Concatenate";xt(yA);function fc(n,t){for(;n<0;)n+=t;return n}function XH(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Gt("batchDot is not implemented for tensors of 4D or higher rank yet");if(_(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),_(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Gt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,a=t.shape.length;e==null&&(e=[s-1,a-2]);const r=e;return nt(()=>{let i;if(s>a){i=s-a;const u=[];for(let h=0;h<i;++h)u.push(1);t=q(t,t.shape.concat(u))}else if(a>s){i=a-s;const u=[];for(let h=0;h<i;++h)u.push(1);n=q(n,n.shape.concat(u))}else i=0;let l;if(n.shape.length===2&&t.shape.length===2)r[0]===r[1]?l=At(G(n,t),r[0]):l=At(G(ae(n,[1,0]),t),r[1]);else{const u=r[0]!==n.shape.length-1,h=r[1]===t.shape.length-1;l=Zt(n,t,u,h)}if(i>0){let u;s>a?u=s+a-3:u=s-1;const h=[];for(let f=u;f<u+i;++f)h.push(f);l=Sr(l,h)}return l.shape.length===1&&(l=On(l,1)),l})}class bA extends _o{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){_(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Gt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);if(e[a[0]]!==s[a[1]])throw new X(`Dimension incompatibility: ${e[a[0]]} !== ${s[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>fc(r,t[i].shape.length)):a=[fc(this.axes,e.shape.length),fc(this.axes,s.shape.length)],this.normalize&&(e=sp(e,a[0]),s=sp(s,a[1])),XH(e,s,a)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[fc(this.axes,t.length),fc(this.axes,e.length)],s}computeOutputShape(t){_(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Gt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);e.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=e.concat(s);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}bA.className="Dot";xt(bA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xA extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return Xh(()=>yt(Qm(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}xA.className="GaussianNoise";xt(xA);class vA extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.rate>0&&this.rate<1?Xh(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return G(s,Qm(s.shape,1,r))},()=>s,e.training||!1):s})}}vA.className="GaussianDropout";xt(vA);class wA extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Vt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Xh(()=>{const r=Vt(t),l=-1.6732632423543772*1.0507009873554805;let u=Ti(Ro(s),this.rate);u=Ua(u,"float32");const h=((1-this.rate)*(1+this.rate*l**2))**-.5,f=-h*l*this.rate,p=yt(G(r,u),G(yt(u,-1),l));return yt(G(p,h),f)},()=>Vt(t),e.training||!1)}return t})}}wA.className="AlphaDropout";xt(wA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Oc(n,t,e,s,a,r=.001){let i;if(n.rank===2)i=j$(n,t,e,s,a,r);else if(n.rank===3)i=X$(n,t,e,s,a,r);else if(n.rank===4)i=K$(n,t,e,s,a,r);else throw new Gt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function KH(n,t,e,s,a=.001){return nt(()=>{const r=_m(n,s),i=r.mean,l=r.variance;return[Oc(n,i,l,e,t,a),i,l]})}function YH(n,t,e,s,a=.001){return nt(()=>{const r=_m(n,s),i=r.mean,l=r.variance,u=[];for(const b of Ca(0,n.rank))s.indexOf(b)!==-1?u.push(1):u.push(n.shape[b]);const h=q(i,u),f=q(l,u),p=t==null?null:q(t,u),m=e==null?null:q(e,u);return[Oc(n,h,f,m,p,a),i,l]})}function ZH(n,t,e,s,a=.001){return te(s.slice().sort(),Ca(0,n.rank-1))?KH(n,t,e,s,a):YH(n,t,e,s,a)}class SA extends Kt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ae(t.betaInitializer||"zeros"),this.gammaInitializer=Ae(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ae(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ae(t.movingVarianceInitializer||"ones"),this.betaConstraint=on(t.betaConstraint),this.gammaConstraint=on(t.gammaConstraint),this.betaRegularizer=Re(t.betaRegularizer),this.gammaRegularizer=Re(t.gammaRegularizer)}build(t){t=ue(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new X(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new sn({ndim:t.length,axes:{[e]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training,a=Vt(t),r=a.shape,i=r.length,l=Ca(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const h=Co(1,i);h[u]=r[u];const f=l.slice();f.sort();const p=!te(f,Ca(0,i).slice(0,i-1)),m=()=>{if(p){const C=q(this.movingMean.read(),h),$=q(this.movingVariance.read(),h),T=this.center?q(this.beta.read(),h):null,I=this.scale?q(this.gamma.read(),h):null;return Oc(a,C,$,T,I,this.epsilon)}else return Oc(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return m();const[y,b,v]=ZH(a,this.gamma.read(),this.beta.read(),l,this.epsilon),w=(C,$,T)=>{nt(()=>{const I=1-T,R=C.read(),F=G(kt(R,$),I);C.write(kt(R,F))})};return(()=>{w(this.movingMean,b,this.momentum),w(this.movingVariance,v,this.momentum)})(),y})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oe(this.betaInitializer),gammaInitializer:Oe(this.gammaInitializer),movingMeanInitializer:Oe(this.movingMeanInitializer),movingVarianceInitializer:Oe(this.movingVarianceInitializer),betaRegularizer:Se(this.betaRegularizer),gammaRegularizer:Se(this.gammaRegularizer),betaConstraint:rn(this.betaConstraint),gammaConstraint:rn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}SA.className="BatchNormalization";xt(SA);class NA extends Kt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ae(t.betaInitializer||"zeros"),this.gammaInitializer=Ae(t.gammaInitializer||"ones"),this.betaRegularizer=Re(t.betaRegularizer),this.gammaRegularizer=Re(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=ue(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ri(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>t[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const s=Vt(t),a=s.shape,r=a.length;return nt(()=>{let{mean:l,variance:u}=_m(s,this.axis,!0);const h=Co(1,r);for(const v of this.axis)h[v]=a[v];const f=v=>v!=null&&v.shape.length!==r?q(v,h):v;let p=this.scale?f(this.gamma.read()):null,m=this.center?f(this.beta.read()):null;const y=[],b=[];for(let v=0;v<r;++v)this.axis.indexOf(v)!==-1?(y.push(a[v]),b.push(1)):(y.push(1),b.push(a[v]));return l=Qs(l,y),u=Qs(u,y),p!=null&&(p=Qs(p,b)),m!=null&&(m=Qs(m,b)),Oc(s,l,u,m,p,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oe(this.betaInitializer),gammaInitializer:Oe(this.gammaInitializer),betaRegularizer:Se(this.betaRegularizer),gammaRegularizer:Se(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}NA.className="LayerNormalization";xt(NA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QH(n,t,e){return nt(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Ta()),e!=="channelsLast"&&e!=="channelsFirst")throw new X(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],$i(n,s)})}class CA extends Kt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Ta():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new sn({ndim:4})]}computeOutputShape(t){t=ue(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return nt(()=>QH(Vt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}CA.className="ZeroPadding2D";xt(CA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ig(n,t,e,s,a,r){return nt(()=>{je(a),VI(r),Os(s),e==null&&(e=[1,1]),s==null&&(s="valid"),a==null&&(a=Ta()),r==null&&(r="max"),n=Ov(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=Om(n,t,e,l):i=Tm(n,t,e,l),a==="channelsFirst"&&(i=ae(i,[0,3,1,2])),i})}function TA(n,t,e,s,a,r){return nt(()=>{je(a),VI(r),Os(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),a==null&&(a=Ta()),r==null&&(r="max"),n=UE(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=bk(n,t,e,l):i=q$(n,t,e,l),a==="channelsFirst"&&(i=ae(i,[0,4,1,2,3])),i})}class $A extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(pn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);pn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Os(this.padding),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(t){t=ue(t);const e=Sa(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return nt(()=>{this.invokeCallHook(t,e),t=qh(Vt(t),2);const s=this.poolingFunction(Vt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Sr(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class kA extends $A{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),ig(t,e,s,a,r,"max")}}kA.className="MaxPooling1D";xt(kA);class IA extends $A{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),ig(t,e,s,a,r,"avg")}}IA.className="AveragePooling1D";xt(IA);class EA extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];pn(this.poolSize,"poolSize"),pn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,je(this.dataFormat),Os(this.padding),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Sa(e,this.poolSize[0],this.padding,this.strides[0]),s=Sa(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class AA extends EA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),ig(t,e,s,a,r,"max")}}AA.className="MaxPooling2D";xt(AA);class RA extends EA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),ig(t,e,s,a,r,"avg")}}RA.className="AveragePooling2D";xt(RA);class DA extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];pn(this.poolSize,"poolSize"),pn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,je(this.dataFormat),Os(this.padding),this.inputSpec=[new sn({ndim:5})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Sa(e,this.poolSize[0],this.padding,this.strides[0]),s=Sa(s,this.poolSize[1],this.padding,this.strides[1]),a=Sa(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,a]:[t[0],e,s,a,t[4]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class OA extends DA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),TA(t,e,s,a,r,"max")}}OA.className="MaxPooling3D";xt(OA);class _A extends DA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return je(r),Os(a),TA(t,e,s,a,r,"avg")}}_A.className="AveragePooling3D";xt(_A);class FA extends Kt{constructor(t){super(t),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Gt}}class LA extends FA{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return ze(s,1)})}}LA.className="GlobalAveragePooling1D";xt(LA);class zA extends FA{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return na(s,1)})}}zA.className="GlobalMaxPooling1D";xt(zA);class MA extends Kt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,je(this.dataFormat),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Gt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class BA extends MA{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?ze(s,[1,2]):ze(s,[2,3])})}}BA.className="GlobalAveragePooling2D";xt(BA);class VA extends MA{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?na(s,[1,2]):na(s,[2,3])})}}VA.className="GlobalMaxPooling2D";xt(VA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PA extends Kt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=e.layer,r=xr(a,s);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class UA extends PA{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=ue(t),t.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=ue(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),a=t[1];return[s[0],a].concat(s.slice(1))}call(t,e){return nt(()=>(t=Vt(t),ZE((i,l)=>[Vt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}UA.className="TimeDistributed";xt(UA);function JH(n){Oo(vG,"BidirectionalMergeMode",n)}const t6="concat";class WA extends PA{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=xr(s),e.goBackwards=e.goBackwards!==!0;const a={};if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=xr(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?t6:t.mergeMode,JH(this.mergeMode),t.weights)throw new Gt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,a,r;return this.returnState&&(r=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Qn(a)}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=YE(t,s,a,this.numConstants);if(t=r.inputs,s=r.initialState,a=r.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&a==null)return super.apply(t,e);const i=[],l=[];if(s!=null){const h=s.length;if(h%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const f=s.map(p=>new sn({shape:p.shape}));this.forwardLayer.stateSpec=f.slice(0,h/2),this.backwardLayer.stateSpec=f.slice(h/2),l.push(...f)}if(a!=null)throw new Gt("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof Ha;for(const h of i)if(h instanceof Ha!==u)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e.initialState;let a,r;if(s==null)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),h=s.slice(s.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:h}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=aa(r,1));let l;return this.mergeMode==="concat"?l=vv([a,r]):this.mergeMode==="sum"?l=yt(a,r):this.mergeMode==="ave"?l=G(.5,yt(a,r)):this.mergeMode==="mul"?l=G(a,r):this.mergeMode==null&&(l=[a,r]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ho(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ho(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=xr(e.layer);if(delete e.layer,e.numConstants!=null)throw new Gt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=s,new t(a)}}WA.className="Bidirectional";xt(WA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GA extends Kt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>(t=Vt(t),t.dtype!=="float32"&&(t=Ua(t,"float32")),yt(G(t,this.scale),this.offset)))}}GA.className="Rescaling";xt(GA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:e6,cropAndResize:n6}=cs;class HA extends Kt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,a,r,i,l,u){return nt(()=>{let h,f=!1;const p=e/i,m=s/l,y=(a+e)/i,b=(r+s)/l,v=[p,m,y,b],w=[];t.rank===3?(f=!0,h=ms([t])):h=t;for(let I=0;I<h.shape[0];I++)w.push(v);const S=va(w,[w.length,4]),C=Ul(0,w.length,1,"int32"),T=n6(h,S,C,[a,r],"nearest");return Ua(f?Vt(ra(T)):T,u)})}upsize(t,e,s,a){return nt(()=>{const r=e6(t,[e,s]);return Ua(r,a)})}call(t,e){return nt(()=>{const s=Vt(t),a=s.dtype,r=s.shape,i=r[r.length-3],l=r[r.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let h=0;return l!==this.width&&(h=Math.floor((l-this.width)/2),h===0&&(h=1)),u>=0&&h>=0?this.centerCrop(s,u,h,this.height,this.width,i,l,a):this.upsize(t,this.height,this.width,a)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}HA.className="CenterCrop";xt(HA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s6(n,t,e,s){let a=Vt(n);if(a.dtype!=="int32"&&(a=Ua(a,"int32")),t==="int")return a;const r=a.shape;if(a.rank===0&&(a=On(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=On(a,-1)),a.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(t),l=a;let u;if(typeof s<"u"&&t==="count"?u=m0(l,s,e,i):u=m0(l,[],e,i),t!=="tfIdf")return u;if(s)return G(u,s);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qA extends Kt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=ue(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return nt(()=>{t=Vt(t),t.dtype!=="int32"&&(t=Ua(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Vt(e.countWeights)}const a=na(t),r=Tc(t),i=xs(this.numTokens,a).bufferSync().get(0),l=Ti(r,0).bufferSync().get(0);if(!(i&&l))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return s6(t,this.outputMode,this.numTokens,s)})}}qA.className="CategoryEncoding";xt(qA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const a6=["bilinear","nearest"],KT=new Set(a6);class jA extends Kt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(KT.has(t.interpolation))this.interpolation=t.interpolation;else throw new X(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=ue(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return cs.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return cs.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...KT]} are supported`)})}}jA.className="Resizing";xt(jA);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XA{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}XA.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KA extends Kt{constructor(t){super(t),this.randomGenerator=new XA(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}KA.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const r6=["bilinear","nearest"],YT=new Set(r6);class YA extends KA{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new X(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new X(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(YT.has(s))this.interpolation=s;else throw new X(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return nt(()=>{const s=Vt(t);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=Ro([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return cs.resizeBilinear(t,i);case"nearest":return cs.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...YT]} are supported`)}})}}YA.className="RandomWidth";xt(YA);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=at();i6.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var is;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(is||(is={}));var ZT;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(ZT||(ZT={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={};function ZA(n){return o6[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(n,t,e,s,a){const r=t.inputParams[n];if(r&&r.inputIndexStart!==void 0){const l=r.inputIndexStart,u=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?l+1:r.inputIndexEnd,h=l<0?t.inputNames.length+l:l;if(r.type==="tensor")return wn(t.inputNames[h],e,s,a);if(r.type==="tensors"){const m=t.inputs.slice(l,u);return t.inputNames.slice(l,u).filter((b,v)=>{var w;return((w=m[v])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(b=>wn(b,e,s,a))}const f=wn(t.inputNames[h],e,s,a),p=f.dataSync();return r.type==="number"?p[0]:ea(f.shape,p)}const i=t.attrParams[n];return i&&i.value}function wn(n,t,e,s){const[a,r]=os(n,e);if(s!=null){const l=s.getHashTableHandleByName(a);if(l!=null)return l}const i=e.currentContextIds.find(l=>!!t[lp(a,l)]);return i!==void 0?t[lp(a,i)][r]:void 0}function QT(n,t,e){return t[lp(n,e.currentContextId)]}function pr(n,t){const[e,s,a]=os(n,t);return[lp(e,t&&t.currentContextId),s,a]}function lp(n,t){return t?`${n}-${t}`:n}function os(n,t){if(n==="")return["",0,void 0];const e=t!=null&&t.parseNodeNameCache!=null;if(e){const r=t.parseNodeNameCache.get(n);if(r!=null)return r}const s=n.split(":");let a;if(s.length===1)a=[n,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);a=[r,l,i]}return e&&t.parseNodeNameCache.set(n,a),a}function Pf(n,t,e){let s=k("pad",n,t,e);if(s==="explicit"){s=k("explicitPaddings",n,t,e);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function mr(n){return n.kept?n:br(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],u6=Object.freeze(Object.defineProperty({__proto__:null,json:l6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],h6=Object.freeze(Object.defineProperty({__proto__:null,json:c6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],f6=Object.freeze(Object.defineProperty({__proto__:null,json:d6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],m6=Object.freeze(Object.defineProperty({__proto__:null,json:p6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],y6=Object.freeze(Object.defineProperty({__proto__:null,json:g6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],x6=Object.freeze(Object.defineProperty({__proto__:null,json:b6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],w6=Object.freeze(Object.defineProperty({__proto__:null,json:v6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],N6=Object.freeze(Object.defineProperty({__proto__:null,json:S6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],T6=Object.freeze(Object.defineProperty({__proto__:null,json:C6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],k6=Object.freeze(Object.defineProperty({__proto__:null,json:$6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],E6=Object.freeze(Object.defineProperty({__proto__:null,json:I6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],R6=Object.freeze(Object.defineProperty({__proto__:null,json:A6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],O6=Object.freeze(Object.defineProperty({__proto__:null,json:D6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],F6=Object.freeze(Object.defineProperty({__proto__:null,json:_6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],z6=Object.freeze(Object.defineProperty({__proto__:null,json:L6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],B6=Object.freeze(Object.defineProperty({__proto__:null,json:M6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],P6=Object.freeze(Object.defineProperty({__proto__:null,json:V6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],W6=Object.freeze(Object.defineProperty({__proto__:null,json:U6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],H6=Object.freeze(Object.defineProperty({__proto__:null,json:G6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JT{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[u6,h6,f6,m6,y6,x6,w6,N6,T6,k6,E6,R6,O6,F6,z6,B6,P6,W6,H6],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(t,e={}){const s=t.node,a=[],r=[],i=[],l=s.reduce((v,w)=>(v[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?a.push(v[w.name]):w.op==="Const"?r.push(v[w.name]):(w.input==null||w.input.length===0)&&i.push(v[w.name]),v),{});let u=[];const h=[];let f={},p={};e!=null&&(f=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));const m=Object.keys(l);m.forEach(v=>{const w=l[v];w.inputNames.forEach((S,C)=>{const[$,,T]=pr(S),I=l[$];if(I.outputs!=null){const R=I.outputs.indexOf(T);if(R!==-1){const F=`${$}:${R}`;w.inputNames[C]=F}}w.inputs.push(I),I.children.push(w)})}),Object.keys(p).length===0?m.forEach(v=>{const w=l[v];w.children.length===0&&h.push(w)}):Object.keys(p).forEach(v=>{const[w]=pr(v),S=l[w];S!=null&&(S.signatureKey=p[v],h.push(S))}),Object.keys(f).length>0?Object.keys(f).forEach(v=>{const[w]=pr(v),S=l[w];S&&(S.signatureKey=f[v],u.push(S))}):u=a;let y={};t.library!=null&&t.library.function!=null&&(y=t.library.function.reduce((v,w)=>(v[w.signature.name]=this.mapFunction(w),v),{}));const b={nodes:l,inputs:u,outputs:h,weights:r,placeholders:a,signature:e,functions:y};return i.length>0&&(b.initNodes=i),b}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=ZA(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((a,r)=>{const i=r.type;let l;switch(r.type){case"string":l=A0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=A0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":l=z0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=z0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":l=D0(t.attr,r.tfName,r.defaultValue||0),l===void 0&&r.tfDeprecatedName&&(l=D0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":l=L0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=L0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":l=R0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=R0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":l=B0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=B0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":l=F0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=F0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":l=M0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=M0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":l=O0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=O0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":l=_0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=_0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":l=t2(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=t2(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${t.op}`)}return a[r.name]={value:l,type:i},a},{})),s}mapFunction(t){const e=t.nodeDef,s=[],a=[];let r={};e!=null&&(r=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&a.push(p[m.name]),p),{}));const i=[],l=[];t.signature.inputArg.forEach(p=>{const[m]=pr(p.name),y={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Bv(p.type),type:"dtype"}},children:[]};y.signatureKey=p.name,i.push(y),r[m]=y}),Object.keys(r).forEach(p=>{const m=r[p];m.inputNames.forEach((y,b)=>{const[v,,w]=pr(y),S=r[v];if(S.outputs!=null){const C=S.outputs.indexOf(w);if(C!==-1){const $=`${v}:${C}`;m.inputNames[b]=$}}m.inputs.push(S),S.children.push(m)})});const h=t.ret;t.signature.outputArg.forEach(p=>{const[m,y]=pr(h[p.name]),b=r[m];b!=null&&(b.defaultOutput=y,l.push(b))});const f=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:l,weights:a,placeholders:s,signature:f}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function q6(n){const t=at().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function QA(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):q6(n);return t?e:e.toLowerCase()}function A0(n,t,e,s=!1){const a=n[t];return a!=null?QA(a.s,s):e}function R0(n,t,e){const s=n[t];return s?s.b:e}function D0(n,t,e){const s=n[t]||{},a=s.i!=null?s.i:s.f!=null?s.f:e;return typeof a=="number"?a:parseInt(a,10)}function Bv(n){switch(typeof n=="string"&&(n=is[n]),n){case is.DT_FLOAT:case is.DT_HALF:return"float32";case is.DT_INT32:case is.DT_INT64:case is.DT_INT8:case is.DT_UINT8:return"int32";case is.DT_BOOL:return"bool";case is.DT_DOUBLE:return"float32";case is.DT_STRING:return"string";case is.DT_COMPLEX64:case is.DT_COMPLEX128:return"complex64";default:return null}}function t2(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function O0(n,t,e){const s=n[t];return s&&s.type?Bv(s.type):e}function _0(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(a=>Bv(a)):e}function JA(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function F0(n,t,e){const s=n[t];return s&&s.shape?JA(s.shape):e}function L0(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):e}function z0(n,t,e,s=!1){const a=n[t];return a&&a.list&&a.list.s?a.list.s.map(r=>QA(r,s)):e}function M0(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(a=>JA(a)):e}function B0(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j6{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(a=>this.getInput(a)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(t){return wn(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return wn(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return D0(this.node.rawAttrs,t,e);if(s.s!=null)return A0(this.node.rawAttrs,t,e);if(s.b!=null)return R0(this.node.rawAttrs,t,e);if(s.shape!=null)return F0(this.node.rawAttrs,t,e);if(s.type!=null)return O0(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return L0(this.node.rawAttrs,t,e);if(s.list.s!=null)return z0(this.node.rawAttrs,t,e);if(s.list.shape!=null)return M0(this.node.rawAttrs,t,e);if(s.list.b!=null)return B0(this.node.rawAttrs,t,e);if(s.list.type!=null)return _0(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:v$,abs:tn,acos:M$,acosh:B$,add:yt,addN:cL,all:i1,any:Zf,argMax:Bl,argMin:V$,asin:P$,asinh:U$,atan:W$,atan2:G$,atanh:H$,avgPool:Tm,avgPool3d:q$,basicLSTMCell:OL,batchNorm:Lh,batchNorm2d:j$,batchNorm3d:X$,batchNorm4d:K$,batchToSpaceND:$m,bincount:Y$,bitwiseAnd:UL,booleanMaskAsync:$4,broadcastArgs:GL,broadcastTo:Ol,buffer:Ht,cast:Nt,ceil:Z$,clipByValue:fs,clone:br,complex:li,concat:Ye,concat1d:Q$,concat2d:l1,concat3d:J$,concat4d:tk,conv1d:u1,conv2d:hi,conv2dTranspose:h1,conv3d:ek,conv3dTranspose:sk,cos:km,cosh:d1,cosineWindow:z1,cumprod:Qf,cumsum:f1,denseBincount:m0,depthToSpace:ak,depthwiseConv2d:zh,diag:fz,dilation2d:rk,div:Et,divNoNan:ik,dot:ok,dropout:Ok,einsum:Il,elu:Mh,enclosingPowerOfTwo:_k,ensureShape:Nz,equal:Na,erf:p1,euclideanNorm:ck,exp:ps,expandDims:On,expm1:hk,eye:g1,fft:Pm,fill:Jl,floor:Vh,floorDiv:r1,fused:X4,gather:Ph,gatherND:L4,greater:xs,greaterEqual:Ti,ifft:Ec,imag:Im,image:cs,inTopKAsync:V4,irfft:R1,isFinite:dk,isInf:fk,isNaN:pk,leakyRelu:Em,less:$c,lessEqual:Ao,linalg:Uk,linspace:Kz,localResponseNormalization:mk,log:As,log1p:Am,logSigmoid:gk,logSoftmax:y1,logSumExp:Rm,logicalAnd:Ga,logicalNot:Dm,logicalOr:b1,logicalXor:yk,losses:TP,lowerBound:hM,matMul:Zt,max:na,maxPool:Om,maxPool3d:bk,maxPoolWithArgmax:mM,maximum:kr,mean:ze,meshgrid:bM,min:Tc,minimum:So,mirrorPad:xk,mod:vk,moments:_m,movingAverage:E4,mul:G,multiRNNCell:CM,multinomial:$M,neg:Ee,norm:Bh,notEqual:Pl,oneHot:v1,ones:us,onesLike:Rs,op:U,outerProduct:RM,pad:$i,pad1d:_M,pad2d:LM,pad3d:MM,pad4d:VM,pool:wk,pow:vr,prelu:Lm,print:z$,prod:Sk,raggedGather:XM,raggedRange:YM,raggedTensorToTensor:QM,rand:tB,randomGamma:SB,randomNormal:S1,randomStandardNormal:TB,randomUniform:Ro,randomUniformInt:IB,range:Ul,real:kc,reciprocal:Nk,relu:ja,relu6:N1,reshape:q,reverse:aa,reverse1d:FB,reverse2d:zB,reverse3d:BB,reverse4d:PB,rfft:Um,round:C1,rsqrt:T1,scalar:Lt,scatterND:R4,searchSorted:x1,selu:$1,separableConv2d:k1,setdiff1dAsync:jB,sigmoid:wa,sign:Ck,signal:CP,sin:I1,sinh:E1,slice:Wt,slice1d:Mm,slice2d:A1,slice3d:Bm,slice4d:Ic,softmax:Vm,softplus:tu,spaceToBatchND:Fm,sparse:$P,sparseToDense:_4,spectral:NP,split:hs,sqrt:Tn,square:we,squaredDifference:D1,squeeze:Sr,stack:ms,step:eu,stridedSlice:Tk,string:kP,sub:kt,sum:At,tan:$k,tanh:wo,tensor:va,tensor1d:Nn,tensor2d:_l,tensor3d:kk,tensor4d:f4,tensor5d:p4,tensor6d:m4,tensorScatterUpdate:y4,tile:Qs,topk:Ek,transpose:ae,truncatedNormal:_1,unique:Ak,unsortedSegmentSum:F1,unstack:ra,upperBound:N4,variable:Rk,where:_n,whereAsync:Dk,zeros:en,zerosLike:re},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6=(n,t,e,s=In)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(k("a",n,t,e),k("b",n,t,e))];case"AddN":return[s.addN(k("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(k("a",n,t,e),k("b",n,t,e))];case"Mul":return[s.mul(k("a",n,t,e),k("b",n,t,e))];case"RealDiv":case"Div":return[s.div(k("a",n,t,e),k("b",n,t,e))];case"DivNoNan":return[s.divNoNan(k("a",n,t,e),k("b",n,t,e))];case"FloorDiv":return[s.floorDiv(k("a",n,t,e),k("b",n,t,e))];case"Sub":return[s.sub(k("a",n,t,e),k("b",n,t,e))];case"Minimum":return[s.minimum(k("a",n,t,e),k("b",n,t,e))];case"Maximum":return[s.maximum(k("a",n,t,e),k("b",n,t,e))];case"Pow":return[s.pow(k("a",n,t,e),k("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6=(n,t,e,s=In)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(k("x",n,t,e))];case"Acos":return[s.acos(k("x",n,t,e))];case"Acosh":return[s.acosh(k("x",n,t,e))];case"Asin":return[s.asin(k("x",n,t,e))];case"Asinh":return[s.asinh(k("x",n,t,e))];case"Atan":return[s.atan(k("x",n,t,e))];case"Atan2":return[s.atan2(k("x",n,t,e),k("y",n,t,e))];case"Atanh":return[s.atanh(k("x",n,t,e))];case"Ceil":return[s.ceil(k("x",n,t,e))];case"Complex":return[s.complex(k("real",n,t,e),k("imag",n,t,e))];case"Cos":return[s.cos(k("x",n,t,e))];case"Cosh":return[s.cosh(k("x",n,t,e))];case"Elu":return[s.elu(k("x",n,t,e))];case"Erf":return[s.erf(k("x",n,t,e))];case"Exp":return[s.exp(k("x",n,t,e))];case"Expm1":return[s.expm1(k("x",n,t,e))];case"Floor":return[s.floor(k("x",n,t,e))];case"Log":return[s.log(k("x",n,t,e))];case"Log1p":return[s.log1p(k("x",n,t,e))];case"Imag":return[s.imag(k("x",n,t,e))];case"Neg":return[s.neg(k("x",n,t,e))];case"Reciprocal":return[s.reciprocal(k("x",n,t,e))];case"Real":return[s.real(k("x",n,t,e))];case"Relu":return[s.relu(k("x",n,t,e))];case"Round":return[s.round(k("x",n,t,e))];case"Selu":return[s.selu(k("x",n,t,e))];case"Sigmoid":return[s.sigmoid(k("x",n,t,e))];case"Sin":return[s.sin(k("x",n,t,e))];case"Sign":return[s.sign(k("x",n,t,e))];case"Sinh":return[s.sinh(k("x",n,t,e))];case"Softplus":return[s.softplus(k("x",n,t,e))];case"Sqrt":return[s.sqrt(k("x",n,t,e))];case"Square":return[s.square(k("x",n,t,e))];case"Tanh":return[s.tanh(k("x",n,t,e))];case"Tan":return[s.tan(k("x",n,t,e))];case"ClipByValue":return[s.clipByValue(k("x",n,t,e),k("clipValueMin",n,t,e),k("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(k("x",n,t,e))];case"Rsqrt":return[s.rsqrt(wn(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(k("x",n,t,e),k("alpha",n,t,e))];case"Prelu":return[s.prelu(k("x",n,t,e),k("alpha",n,t,e))];case"IsNan":return[s.isNaN(wn(n.inputNames[0],t,e))];case"IsInf":return[s.isInf(wn(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite(wn(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){_(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const a=n[s],r=t[s];_(a<0||r<0||a===r,()=>e+` Shapes ${n} and ${t} must match`)}}}function e2(n){return!(typeof n=="number"||n.some(t=>t<0))}function pc(n,t,e){let s=V0(n,e);const a=!e2(s);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&t.forEach(r=>{s=V0(r.shape,s)}),!e2(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function V0(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const a=n[s],r=t[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=a>=0?a:r}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y6{constructor(t,e,s,a,r,i,l){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Lt(0),fn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Ys(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,fn(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,a)=>this.write(s,e[a]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let a=0;a<this.size();a++)t.push(a)}if(t.length===0)return va([],[0].concat(this.elementShape));const s=this.readMany(t);return Ys(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ms(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return va([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const s=this.readMany(e);return Ys(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Ye(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,ra(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const a=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:e.size/s,i=[];nt(()=>{e=q(e,[1,s,r]);for(let u=0;u<t.length;++u){const f=[0,u===0?0:a[u-1],0],p=[1,t[u],r];i[u]=q(Wt(e,f,p),this.elementShape)}return i});const l=[];for(let u=0;u<t.length;u++)l[u]=u;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class To{get id(){return this.idTensor.id}constructor(t,e,s,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);Ys(e,r.shape,"TensorList shape mismatch: "),fn(r)}),this.idTensor=Lt(0),this.maxNumElements=a,fn(this.idTensor)}copy(){return new To([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ys(t,this.elementShape,"TensorList shape mismatch: ");const a=pc(this.elementShape,this.tensors,t);return nt(()=>{const r=this.tensors.map(i=>q(i,a));return ms(r,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=pc(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,Ys(a.shape,t,"TensorList shape mismatch: "),q(a,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Ys(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");fn(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new To([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Ys(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=pc(this.elementShape,this.tensors,e);return q(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Ys(this.elementShape,e.shape,"TensorList shape mismatch: "),fn(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Ys(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=pc(this.elementShape,this.tensors,s);return t.length===0?va([],[0].concat(a)):nt(()=>{const r=t.map(i=>q(this.tensors[i],a));return ms(r,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Ys(this.elementShape,e,"TensorList shape mismatch: ");const s=pc(this.elementShape,this.tensors,e);return this.size()===0?va([],[0].concat(s)):nt(()=>{const a=this.tensors.map(r=>q(r,s));return Ye(a,0)})}}function Z6(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const a=n.shape.slice(1);Ys(a,t,"TensorList shape mismatch: ");const r=ra(n);return new To(r,t,s)}function Q6(n,t,e,s){return new To([],n,t,s)}function J6(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const a=Math.max(...t);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new To([],e,n.dtype,s),i=ra(n,0);return t.forEach((l,u)=>{r.setItem(l,i[u])}),r}function tq(n,t,e){let s=0;const a=t.map(f=>(s+=f,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),i=V0(r,e),l=s===0?0:n.size/s,u=nt(()=>{const f=[];n=q(n,[1,s,l]);for(let p=0;p<t.length;++p){const y=[0,p===0?0:a[p-1],0],b=[1,t[p],l];f[p]=q(Wt(n,y,b),i)}return n.dispose(),f}),h=new To([],e,n.dtype,t.length);for(let f=0;f<u.length;f++)h.setItem(f,u[f]);return h}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=k("thenBranch",n,t,e),a=k("elseBranch",n,t,e),r=k("cond",n,t,e),i=k("args",n,t,e);return(await r.data())[0]?e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[a].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",n,t,e),a=k("cond",n,t,e),r=k("args",n,t,e),i=await e.functionMap[a].executeFunctionAsync(r,e.tensorArrayMap,e.tensorListMap),l=r.map(f=>f.id);let u=await i[0].data();i.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&f.dispose()});let h=r;for(;u[0];){const f=h;h=await e.functionMap[s].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);const p=h.map(y=>y.id);f.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()});const m=await e.functionMap[a].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);u=await m[0].data(),m.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()})}return h}case"LoopCond":{const s=k("pred",n,t,e);return[mr(s)]}case"Switch":{const s=k("pred",n,t,e);let a=k("data",n,t,e);return a.kept||(a=mr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=n.inputNames.find(a=>wn(a,t,e)!==void 0);if(s){const a=wn(s,t,e);return[mr(a)]}return}case"Enter":{const s=k("frameName",n,t,e),a=k("tensor",n,t,e);return e.enterFrame(s),[mr(a)]}case"Exit":{const s=k("tensor",n,t,e);return e.exitFrame(),[mr(s)]}case"NextIteration":{const s=k("tensor",n,t,e);return e.nextIteration(),[mr(s)]}case"TensorArrayV3":{const s=k("size",n,t,e),a=k("dtype",n,t,e),r=k("elementShape",n,t,e),i=k("dynamicSize",n,t,e),l=k("clearAfterRead",n,t,e),u=k("identicalElementShapes",n,t,e),h=k("name",n,t,e),f=new Y6(h,a,s,r,u,i,l);return e.addTensorArray(f),[f.idTensor,Lt(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e);return[e.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("dtype",n,t,e);return[e.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id),r=k("dtype",n,t,e);return[a.concat(r)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",n,t,e),a=k("tensor",n,t,e),r=k("lengths",n,t,e),i=e.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return[Lt(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",n,t,e),a=k("tensor",n,t,e),r=k("elementShape",n,t,e),i=k("numElements",n,t,e),l=J6(a,s,r,i);return e.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",n,t,e),a=k("elementDType",n,t,e);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=k(r,n,t,e),l=n.op==="TensorListReserve"?-1:i,u=Q6(s,a,i,l);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=k("tensorListId",n,t,e),a=k("indices",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=k("numElements",n,t,e);return[e.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=Z6(s,a,r);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id),r=k("dtype",n,t,e),i=k("elementShape",n,t,e);return[a.concat(r,i)]}case"TensorListPushBack":{const s=k("tensorListId",n,t,e),a=k("tensor",n,t,e),r=e.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("lengths",n,t,e),i=tq(s,r,a);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id);return[Lt(a.size(),"int32")]}case"TensorListResize":{const s=k("tensorListId",n,t,e),a=k("size",n,t,e),i=e.getTensorList(s.id).resize(a);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,t,e){const[s,a]=k("fusedOps",n,t,e),r=s==="biasadd",i=!r,l=a==="prelu",u=s==="fusedbatchnorm",h=k("numArgs",n,t,e);if(r){if(l&&h!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&r&&h!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=k("strides",n,t,e),p=Pf(n,t,e),m=k("dataFormat",n,t,e).toUpperCase(),y=k("dilations",n,t,e);let[b,v]=k("args",n,t,e);i&&(v=b,b=void 0);const w=k("leakyreluAlpha",n,t,e);return{stride:f,pad:p,dataFormat:m,dilations:y,biasArg:b,preluArg:v,activationFunc:a,leakyreluAlpha:w}}const nq=(n,t,e,s=In)=>{switch(n.op){case"Conv1D":{const a=k("stride",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilation",n,t,e);return[s.conv1d(k("x",n,t,e),k("filter",n,t,e),a,r,i,l)]}case"Conv2D":{const a=k("strides",n,t,e),r=Pf(n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv2d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,i,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=n2(n,t,e);return[s.fused.conv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=n2(n,t,e);return[s.fused.depthwiseConv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=k("outputShape",n,t,e),r=k("strides",n,t,e),i=Pf(n,t,e);return[s.conv2dTranspose(k("x",n,t,e),k("filter",n,t,e),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=k("strides",n,t,e),r=Pf(n,t,e),i=k("dilations",n,t,e),l=k("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(k("input",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,l,[i[1],i[2]])]}case"Conv3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv3d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2],a[3]],r,i,[l[1],l[2],l[3]])]}case"AvgPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e),l=k("includeBatchInIndex",n,t,e),{result:u,indexes:h}=s.maxPoolWithArgmax(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r,l);return[u,h]}case"AvgPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dilations",n,t,e),l=a[1],u=a[2],h=i[1],f=i[2];return[s.dilation2d(k("x",n,t,e),k("filter",n,t,e),[l,u],r,[h,f],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sq=(n,t,e,s=In)=>{switch(n.op){case"Fill":{const a=k("shape",n,t,e),r=k("dtype",n,t,e),i=k("value",n,t,e);return[s.fill(a,i,r)]}case"LinSpace":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("num",n,t,e);return[s.linspace(a,r,i)]}case"Multinomial":{const a=k("logits",n,t,e),r=k("numSamples",n,t,e),i=k("seed",n,t,e);return[s.multinomial(a,r,i)]}case"OneHot":{const a=k("indices",n,t,e),r=k("depth",n,t,e),i=k("onValue",n,t,e),l=k("offValue",n,t,e),u=k("dtype",n,t,e);return[s.oneHot(a,r,i,l,u)]}case"Ones":return[s.ones(k("shape",n,t,e),k("dtype",n,t,e))];case"OnesLike":return[s.onesLike(k("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(k("shape",n,t,e),k("dtype",n,t,e),k("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("seed",n,t,e))];case"Range":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("step",n,t,e);return[s.range(a,r,i,k("dtype",n,t,e))]}case"TruncatedNormal":{const a=k("shape",n,t,e),r=k("mean",n,t,e),i=k("stdDev",n,t,e),l=k("seed",n,t,e);return[s.truncatedNormal(a,r,i,k("dtype",n,t,e),l)]}case"Zeros":return[s.zeros(k("shape",n,t,e),k("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n,t,e){const s=k("boxes",n,t,e),a=k("scores",n,t,e),r=k("maxOutputSize",n,t,e),i=k("iouThreshold",n,t,e),l=k("scoreThreshold",n,t,e),u=k("softNmsSigma",n,t,e);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}}const aq=async(n,t,e,s,a=In)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h,softNmsSigma:f}=Pb(n,t,e),p=await a.image.nonMaxSuppressionWithScoreAsync(r,i,l,u,h,f);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=Pb(n,t,e),f=k("padToMaxOutputSize",n,t,e),p=await a.image.nonMaxSuppressionPaddedAsync(r,i,l,u,h,f);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=Pb(n,t,e);return[await a.image.nonMaxSuppressionAsync(r,i,l,u,h)]}case"Where":{const r=a.cast(k("condition",n,t,e),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",n,t,e),k("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=(n,t,e,s=In)=>{switch(n.op){case"LowerBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.lowerBound(a,r)]}case"TopKV2":{const a=k("x",n,t,e),r=k("k",n,t,e),i=k("sorted",n,t,e),l=s.topk(a,r,i);return[l.values,l.indices]}case"UpperBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.upperBound(a,r)]}case"Unique":{const a=k("x",n,t,e),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=k("x",n,t,e),r=k("axis",n,t,e),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq=(n,t,e,s=In)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const a=k("default",n,t,e);return[wn(n.name,t,e)||a];case"Placeholder":return[wn(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const f=k("x",n,t,e);return[mr(f)]}case"IdentityN":return k("x",n,t,e).map(f=>mr(f));case"Snapshot":const r=k("x",n,t,e);return[mr(r)];case"Shape":return[s.tensor1d(k("x",n,t,e).shape,"int32")];case"ShapeN":return k("x",n,t,e).map(f=>s.tensor1d(f.shape));case"Size":return[s.scalar(k("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(k("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=k("x",n,t,e),l=k("data",n,t,e),u=k("message",n,t,e),h=k("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let f=0;f<l.length;f++)console.log(Array.prototype.slice.call(l[f].dataSync()).slice(0,h));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oq{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Lt(0),this.tensorMap=new Map,fn(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Lt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),nt(()=>{const a=ra(e),r=s.length,i=a.length;_(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let l=0;l<r;l++){const u=s[l],h=a[l];fn(h),this.tensorMap.set(u,h)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return nt(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],l=this.findWithDefault(i,e);a.push(l)}return ms(a)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(n.name);if(a!=null)return[a];{const r=k("keyDType",n,t,e),i=k("valueDType",n,t,e),l=new oq(r,i);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("values",n,t,e);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("defaultValue",n,t,e);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=k("tableHandle",n,t,e,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq=(n,t,e,s=In)=>{switch(n.op){case"ResizeBilinear":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(a,[r[0],r[1]],i,l)]}case"ResizeNearestNeighbor":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,l)]}case"CropAndResize":{const a=k("image",n,t,e),r=k("boxes",n,t,e),i=k("boxInd",n,t,e),l=k("cropSize",n,t,e),u=k("method",n,t,e),h=k("extrapolationValue",n,t,e);return[s.image.cropAndResize(a,r,i,l,u,h)]}case"ImageProjectiveTransformV3":{const a=k("images",n,t,e),r=k("transforms",n,t,e),i=k("outputShape",n,t,e),l=k("fillValue",n,t,e),u=k("interpolation",n,t,e),h=k("fillMode",n,t,e);return[s.image.transform(a,r,u.toLowerCase(),h.toLowerCase(),l,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq=(n,t,e,s=In)=>{switch(n.op){case"Equal":return[s.equal(k("a",n,t,e),k("b",n,t,e))];case"NotEqual":return[s.notEqual(k("a",n,t,e),k("b",n,t,e))];case"Greater":return[s.greater(k("a",n,t,e),k("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(k("a",n,t,e),k("b",n,t,e))];case"Less":return[s.less(k("a",n,t,e),k("b",n,t,e))];case"LessEqual":return[s.lessEqual(k("a",n,t,e),k("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(k("a",n,t,e),k("b",n,t,e))];case"LogicalNot":return[s.logicalNot(k("a",n,t,e))];case"LogicalOr":return[s.logicalOr(k("a",n,t,e),k("b",n,t,e))];case"Select":case"SelectV2":return[s.where(k("condition",n,t,e),k("a",n,t,e),k("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq=(n,t,e,s=In)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(k("a",n,t,e),k("b",n,t,e),k("transposeA",n,t,e),k("transposeB",n,t,e))];case"Einsum":return[s.einsum(k("equation",n,t,e),...k("tensors",n,t,e))];case"Transpose":return[s.transpose(k("x",n,t,e),k("perm",n,t,e))];case"_FusedMatMul":const[a,r]=k("fusedOps",n,t,e),i=a==="biasadd",l=r==="prelu",u=k("numArgs",n,t,e),h=k("leakyreluAlpha",n,t,e);if(i){if(l&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,p]=k("args",n,t,e);return[s.fused.matMul({a:k("a",n,t,e),b:k("b",n,t,e),transposeA:k("transposeA",n,t,e),transposeB:k("transposeB",n,t,e),bias:f,activation:r,preluActivationWeights:p,leakyreluAlpha:h})];case"MatrixBandPart":return[s.linalg.bandPart(k("a",n,t,e),k("numLower",n,t,e),k("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq=(n,t,e,s=In)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(k("x",n,t,e),k("axis",n,t,e),k("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(k("x",n,t,e),k("radius",n,t,e),k("bias",n,t,e),k("alpha",n,t,e),k("beta",n,t,e))];case"Softmax":return[s.softmax(k("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq=(n,t,e,s=In)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(k("paramsNestedSplits",n,t,e),k("paramsDenseValues",n,t,e),k("indices",n,t,e),k("outputRaggedRank",n,t,e));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(k("starts",n,t,e),k("limits",n,t,e),k("splits",n,t,e));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(k("shape",n,t,e),k("values",n,t,e),k("defaultValue",n,t,e),k("rowPartitionTensors",n,t,e),k("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=(n,t,e,s=In)=>{switch(n.op){case"Max":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.max(k("x",n,t,e),l,u)]}case"Mean":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.mean(k("x",n,t,e),l,u)]}case"Min":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.min(k("x",n,t,e),l,u)]}case"Sum":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.sum(k("x",n,t,e),l,u)]}case"All":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.all(k("x",n,t,e),l,u)]}case"Any":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.any(k("x",n,t,e),l,u)]}case"ArgMax":{const l=k("axis",n,t,e);return[s.argMax(k("x",n,t,e),l)]}case"ArgMin":{const l=k("axis",n,t,e);return[s.argMin(k("x",n,t,e),l)]}case"Prod":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.prod(k("x",n,t,e),l,u)]}case"Cumprod":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumprod(k("x",n,t,e),l,u,h)]}case"Cumsum":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumsum(k("x",n,t,e),l,u,h)]}case"Bincount":const a=k("x",n,t,e),r=k("weights",n,t,e),i=k("size",n,t,e);return[s.bincount(a,r,i)];case"DenseBincount":{const l=k("x",n,t,e),u=k("weights",n,t,e),h=k("size",n,t,e),f=k("binaryOutput",n,t,e);return[s.denseBincount(l,u,h,f)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq=(n,t,e,s=In)=>{switch(n.op){case"ConcatV2":case"Concat":{const a=k("n",n,t,e),r=k("axis",n,t,e);let i=k("tensors",n,t,e);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=k("axis",n,t,e),r=k("batchDims",n,t,e),i=k("x",n,t,e),l=k("indices",n,t,e);return[s.gather(i,s.cast(l,"int32"),a,r)]}case"Reverse":{const a=k("dims",n,t,e),r=[];for(let l=0;l<a.length;l++)a[l]&&r.push(l);const i=k("x",n,t,e);return[s.reverse(i,r)]}case"ReverseV2":{const a=k("axis",n,t,e),r=k("x",n,t,e);return[s.reverse(r,a)]}case"Slice":{const a=k("begin",n,t,e),r=k("size",n,t,e);return[s.slice(k("x",n,t,e),a,r)]}case"StridedSlice":{const a=k("begin",n,t,e),r=k("end",n,t,e),i=k("strides",n,t,e),l=k("beginMask",n,t,e),u=k("endMask",n,t,e),h=k("ellipsisMask",n,t,e),f=k("newAxisMask",n,t,e),p=k("shrinkAxisMask",n,t,e),m=k("x",n,t,e);return[s.stridedSlice(m,a,r,i,l,u,h,f,p)]}case"Pack":return nt(()=>{const a=k("axis",n,t,e),r=k("tensors",n,t,e),i=r[0].shape,l=s.squeeze(r[0]).shape,u=r.map(h=>{const f=te(h.shape,i);if(!f&&!te(s.squeeze(h).shape,l))throw new Error("the input tensors shape does not match");return f?h:s.reshape(h,i)});return[s.stack(u,a)]});case"Unpack":{const a=k("axis",n,t,e),r=k("tensor",n,t,e);return s.unstack(r,a)}case"Tile":{const a=k("reps",n,t,e);return[s.tile(k("x",n,t,e),a)]}case"Split":case"SplitV":{const a=k("axis",n,t,e),r=k("numOrSizeSplits",n,t,e),i=k("x",n,t,e);return s.split(i,r,a)}case"ScatterNd":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("shape",n,t,e);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gatherND(a,r)]}case"SparseToDense":{const a=k("sparseIndices",n,t,e),r=k("outputShape",n,t,e),i=k("sparseValues",n,t,e),l=k("defaultValue",n,t,e);return[s.sparseToDense(a,i,r,i.dtype===l.dtype?l:s.cast(l,i.dtype))]}case"TensorScatterUpdate":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("tensor",n,t,e);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq=(n,t,e,s=In)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(k("indices",n,t,e),k("values",n,t,e),k("denseShape",n,t,e),k("defaultValue",n,t,e));return[a,r,i,l]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(k("inputIndices",n,t,e),k("inputShape",n,t,e),k("newShape",n,t,e));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq=(n,t,e,s=In)=>{switch(n.op){case"FFT":return[s.fft(k("x",n,t,e))];case"IFFT":return[s.ifft(k("x",n,t,e))];case"RFFT":return[s.rfft(k("x",n,t,e))];case"IRFFT":return[s.irfft(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq=(n,t,e,s=In)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(k("input",n,t,e),k("pattern",n,t,e),k("rewrite",n,t,e),k("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(k("data",n,t,e),k("dataSplits",n,t,e),k("separator",n,t,e),k("nGramWidths",n,t,e),k("leftPad",n,t,e),k("rightPad",n,t,e),k("padWidth",n,t,e),k("preserveShortSequences",n,t,e));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(k("input",n,t,e),k("delimiter",n,t,e),k("skipEmpty",n,t,e));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(k("input",n,t,e),k("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq=(n,t,e,s=In)=>{switch(n.op){case"Cast":return[s.cast(k("x",n,t,e),k("dtype",n,t,e))];case"ExpandDims":{const a=k("axis",n,t,e);return[s.expandDims(k("x",n,t,e),a)]}case"Squeeze":{const a=k("axis",n,t,e);return[s.squeeze(k("x",n,t,e),a)]}case"Reshape":return[s.reshape(k("x",n,t,e),k("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(k("x",n,t,e),k("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(k("x",n,t,e),k("padding",n,t,e),k("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(k("x",n,t,e),k("padding",n,t,e),k("constantValue",n,t,e))];case"SpaceToBatchND":{const a=k("blockShape",n,t,e),r=k("paddings",n,t,e);return[s.spaceToBatchND(k("x",n,t,e),a,r)]}case"BatchToSpaceND":{const a=k("blockShape",n,t,e),r=k("crops",n,t,e);return[s.batchToSpaceND(k("x",n,t,e),a,r)]}case"DepthToSpace":{const a=k("blockSize",n,t,e),r=k("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(k("x",n,t,e),a,r)]}case"BroadcastTo":return[s.broadcastTo(k("x",n,t,e),k("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(k("s0",n,t,e),k("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n,t,e,s,a=nt){const r=((i,l,u)=>{switch(i.category){case"arithmetic":return a(()=>X6(i,l,u));case"basic_math":return a(()=>K6(i,l,u));case"control":return eq(i,l,u);case"convolution":return a(()=>nq(i,l,u));case"creation":return a(()=>sq(i,l,u));case"dynamic":return aq(i,l,u);case"evaluation":return a(()=>rq(i,l,u));case"image":return a(()=>uq(i,l,u));case"graph":return a(()=>iq(i,l,u));case"logical":return a(()=>cq(i,l,u));case"matrices":return a(()=>hq(i,l,u));case"normalization":return a(()=>dq(i,l,u));case"ragged":return a(()=>fq(i,l,u));case"reduction":return a(()=>pq(i,l,u));case"slice_join":return a(()=>mq(i,l,u));case"sparse":return a(()=>gq(i,l,u));case"spectral":return a(()=>yq(i,l,u));case"string":return a(()=>bq(i,l,u));case"transformation":return a(()=>xq(i,l,u));case"hash_table":return lq(i,l,u,s);case"custom":const h=ZA(i.op);if(h&&h.customExecutor)return h.customExecutor(new j6(i,l,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return mo(r)?r.then(i=>[].concat(i)):[].concat(r)}class a2{constructor(t={},e={},s={},a={},r){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n,t,e,s){const a=new Set,r=[];let i=null,l=null;const u=new Set,h=new Set(Object.keys(n).map(m=>os(m)[0]));s=s||[];const f=new Set(s.map(m=>os(m.name)[0])),p=[...t];for(;p.length>0;){const m=p.pop();if((io(m)||kq(m)||Iq(m))&&i==null&&(i=m,l=i.children.map(y=>y.name).filter(y=>a.has(y))),a.add(m.name),e[m.name]==null&&!h.has(m.name)&&!f.has(m.name)){if(m.inputs.length===0){r.push(m.name);continue}m.inputs.forEach(y=>{u.has(y.name)||(u.add(y.name),p.push(y))})}}return{inputs:n,outputs:t,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:l}}function vq(n,t){const{usedNodes:e,inputs:s}=t,a=Object.keys(s).map(w=>os(w)[0]).map(w=>n.nodes[w]),r=n.initNodes||[],i=w=>e.has(typeof w=="string"?w:w.name);function l(w){return[...new Map(w.map(S=>[S.name,S])).values()]}const u=l([...a,...n.weights,...r]).filter(i),h=l([...u,...Object.values(n.nodes)]).filter(i),f=new Map(h.map(w=>[w.name,w])),p={};for(const w of h){p[w.name]=p[w.name]||0;for(const S of w.children)i(S)||(p[S.name]=Number.POSITIVE_INFINITY),p[S.name]=(p[S.name]||0)+1}const m=Object.entries(p).filter(([,w])=>w===0).map(([w])=>w),y=[...m];for(;m.length>0;){const w=m.pop(),S=f.get(w);for(const C of S.children.filter(i))--p[C.name]===0&&(y.push(C.name),m.push(C.name))}const b=y.map(w=>f.get(w)),v=wq(b,u);return Sq(v,u),v}function wq(n,t){const e=new Map(n.map(i=>[i.name,i])),s=t.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),l=e.get(i);for(const u of l.children)!e.has(u.name)||a.has(u.name)||(a.add(u.name),s.push(u.name))}return n.filter(i=>a.has(i.name))}class Sf extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}function Sq(n,t){const e=new Map(n.map((l,u)=>[l.name,u])),s=new Set(t.map(l=>l.name)),a=l=>s.has(typeof l=="string"?l:l.name),r=new Set(n.map(l=>l.name)),i=l=>r.has(typeof l=="string"?l:l.name);for(const l of n){for(const u of l.children.filter(i)){if(!e.has(u.name))throw new Sf(`Child ${u.name} of node ${l.name} is unreachable.`);if(e.get(l.name)>e.get(u.name))throw new Sf(`Node ${l.name} is scheduled to run after its child ${u.name}.`)}if(!a(l))for(const u of l.inputs){if(!e.has(u.name))throw new Sf(`Input ${u.name} of node ${l.name} is unreachable.`);if(e.get(u.name)>e.get(l.name))throw new Sf(`Node ${l.name} is scheduled to run before its input ${u.name}.`)}}}function Nq(n){const t=new Map(n.map((l,u)=>[l.name,u])),e=Number.MAX_SAFE_INTEGER,s=n.map((l,u)=>io(l)?e:u),a=l=>{const u=s[t.get(l.name)];return u??-1},r=n.map((l,u)=>l.children.map(a).reduce((h,f)=>Math.max(h,f),s[u])),i=new Map;for(let l=0;l<n.length;++l){const u=r[l];if(u===e)continue;const h=n[l],f=n[u];i.has(f.name)||i.set(f.name,[]),i.get(f.name).push(h)}return i}const Cq=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Tq=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),$q=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function io(n){return Cq.has(n.op)}function kq(n){return Tq.has(n.op)}function Iq(n){return $q.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class up{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(a=>a.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new up(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(r=>r.name).sort(),a=e.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,e){const s=r2(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const h=e.map(p=>p.name),f=Object.keys(t);throw new Error(`Cannot compute the outputs [${h}] from the provided inputs [${f}]. Missing the following inputs: [${a}]`)}const l=vq(this.graph,s),u=Nq(l);return{orderedNodes:l,nodeLiveUntilMap:u}}cloneAndKeepTensor(t){if(t==null)return null;const e=t.clone();return fn(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=s.map(m=>this.graph.nodes[os(m)[0]]),r=e.map(m=>os(m)[0]),i=new Set(r);let l=r.map(m=>this.graph.nodes[m]);l.length===0&&(l=this._outputs);const u=this.getCompilationKey(a,l);let h=this.compiledMap.get(u);h==null&&(h=this.compile(t,l),this.compiledMap.set(u,h));try{this.keepIntermediateTensors=at().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const f={},p={};return nt(()=>{const m=new a2(this.weightMap,f,p,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(S=>{const[C,$]=os(S,m),T=[];T[$]=t[S],y[C]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[C]=this.cloneTensorList(T))});const b=this.getFrozenTensorIds(y),{orderedNodes:v,nodeLiveUntilMap:w}=h;for(const S of v){if(y[S.name])continue;const C=s2(S,y,m,this._resourceManager);if(mo(C))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);y[S.name]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[S.name]=this.cloneTensorList(C)),this.checkTensorForDisposalWithNodeLiveUntilInfo(S,y,m,b,i,w.get(S.name))}return this.parent==null&&m.dispose(b),e.map(S=>wn(S,y,m))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(a=>a.id)));return new Set(e)}checkTensorForDisposal(t,e,s,a,r,i,l){if(!(io(e)||i.has(t))){for(const u of s[t])u!=null&&(l[u.id]=(l[u.id]||0)+e.children.length);for(const u of e.inputs){if(io(u))continue;const h=QT(u.name,s,a);if(h!=null)for(const f of h){if(!f||f.kept||r.has(f.id))continue;const p=l[f.id];p===1?(f.dispose(),delete l[f.id]):p!=null&&l[f.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,a,r,i){function l(u){return io(u)||r.has(u.name)}if(!(io(t)||i==null))for(const u of i){if(l(u))continue;const h=QT(u.name,e,s);for(const f of h)!f||f.kept||a.has(f.id)||f.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=at().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const i=new a2(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(t,i,e,s),u=e.map(m=>wn(m,l,i)),h=u.map(m=>m.id),f=Object.keys(t).map(m=>t[m].id),p=new Set([...h,...f,...this.weightIds]);return Object.values(l).forEach(m=>{m.forEach(y=>{y&&!y.isDisposed&&!p.has(y.id)&&y.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,e,s){const a=t.reduce((r,i,l)=>(r[this.inputs[l].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,a){const r=Object.keys(t),i=r.map(T=>this.graph.nodes[os(T)[0]]),l=s.map(T=>os(T)[0]),u=new Set(l);let h=l.map(T=>this.graph.nodes[T]);h.length===0&&(h=this._outputs);const{usedNodes:f,missingInputs:p,dynamicNode:m,syncInputs:y}=r2(t,h,this.weightMap,this._initNodes),b=[...i,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:e.currentContext})),v=Object.assign({},this.weightMap);Object.keys(t).forEach(T=>{const[I,R]=os(T),F=[];F[R]=t[T],v[I]=F});const w={},S=this.getFrozenTensorIds(v),C={};for(;b.length>0;){const T=this.processStack(i,b,e,v,C,S,u,w,f);await Promise.all(T)}m==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=h.filter(T=>!io(T)&&!wn(T.name,v,e)).map(T=>T.name);if($.length>0){let T="";throw m!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${r}]. Consider providing the following inputs: [${p}]. ${T}`)}return v}processStack(t,e,s,a,r,i,l,u,h){const f=[];for(;e.length>0;){const p=e.pop();s.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&k("isConstant",p.node,a,s)&&([m]=pr(p.node.name,s)),a[p.node.name]==null){const y=s2(p.node,a,s,this._resourceManager);m||([m]=pr(p.node.name,s));const b=s.currentContext;mo(y)?f.push(y.then(v=>(a[m]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(v)),s.currentContext=b,this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h),v))):(a[m]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(y)),this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h))}else this.processChildNodes(p.node,e,s,a,r,h)}return f}processChildNodes(t,e,s,a,r,i){t.children.forEach(l=>{const[u]=pr(l.name,s);r[u]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(h=>!!wn(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})):l.inputNames.every(h=>!!wn(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[a]=os(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,l=i.length===s.shape.length&&s.shape.every((u,h)=>i[h]===-1||i[h]===u);_(l,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&_(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const a={};for(const r in t){const i=(s=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=t[r]:a[r]=t[r]}return a}checkInputs(t){const e=Object.keys(t).filter(s=>{const[a]=os(s);return this.graph.nodes[a]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[e];return r!=null?r.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=os(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class Eq{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq="?tfjs-format=file",Rq="model.json";class Dq{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=tI){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new Eq}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return mo(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const e=await T$(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new up(JT.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const r=JT.Instance.transformGraph(t.modelInitializer);this.initializer=new up(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof Ie?[t]:t,s={};return e.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(t,e){const s=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(t){var e;if(!(t instanceof Ie)&&!Array.isArray(t)){const r=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(r!=null)for(const i in r){const l=r[i];l.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[l.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var l,u,h;const f=(h=(u=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||u===void 0?void 0:u[i])===null||h===void 0?void 0:h.resourceId;return f!=null?r[i]=this.resourceIdToCapturedInput[f]:r[i]=t[a++],r},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let a=0;a<s.length;a++){const r=s[a],i=e[r];this.resourceIdToCapturedInput[i.resourceId]=t[a]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&jt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function tR(n,t={},e=tI){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=Oq(n));const s=new Dq(n,t,e);return await s.load(),s}function Oq(n){return n.endsWith("/")||(n=n+"/"),`${n}${Rq}${Aq}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var i2;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(i2||(i2={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&_(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=L1;class og extends j0{nextDataId(){return og.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Z2(this,Fa())}write(t,e,s){this.firstUse&&(this.firstUse=!1,at().get("IS_NODE")&&Is(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:s,refCount:1}),a}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Mc(s[0])){const r=s.map(i=>ai(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Nr(a,r)}return MF(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>oi(a));return Ht(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ht(t.shape,t.dtype,e)}makeOutput(t,e,s){return Fa().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Zn();return t(),{kernelMs:Zn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Rt([t],"where");const e=this.readSync(t.dataId);return _q(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}og.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const Fq=n=>{const{x:t}=n.inputs,e=n.backend;Rt(t,"abs");let s=new Float32Array(ht(t.shape));const a=e.data.get(t.dataId).values;return s=eR(a),e.makeOutput(s,t.shape,t.dtype)},Lq={kernelName:wp,backendName:"cpu",kernelFunc:Fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(n){return(t,e,s,a,r)=>{const i=Pt(t,e),l=i.length,u=Ft(i),h=ht(i),f=Cn(r,h),p=t.length,m=e.length,y=Ft(t),b=Ft(e),v=Vl(t,i),w=Vl(e,i);if(v.length+w.length===0)for(let S=0;S<f.length;++S)f[S]=n(s[S%s.length],a[S%a.length]);else for(let S=0;S<f.length;++S){const C=Zl(S,l,u),$=C.slice(-p);v.forEach(F=>$[F]=0);const T=Va($,p,y),I=C.slice(-m);w.forEach(F=>I[F]=0);const R=Va(I,m,b);f[S]=n(s[T],a[R])}return[f,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(l.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",r),imag:e.makeTensorInfo(a.shape,"float32",i)},l}const zq={kernelName:sx,backendName:"cpu",kernelFunc:ls};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(n,t,e="float32"){if(e==="complex64"){const a=cp(n,t,"float32"),r=cp(n,t,"float32");return ls({inputs:{real:a,imag:r},backend:n})}const s=Fn(ht(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qa(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Mq={kernelName:rh,backendName:"cpu",kernelFunc:qa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.real,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const Bq={kernelName:Fx,backendName:"cpu",kernelFunc:$o};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(n,t,e,s){if(s==="int32"){const a=Int32Array.from(n);return[t,"int32",a]}if(s==="bool"){const a=Eo([0],e),[r,i]=Xe((l,u)=>l!==u?1:0)(t,[],n,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function gi(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return qa({inputs:{x:a},backend:e});const f=cp(e,a.shape,a.dtype),p=gi({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),m=ls({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),m}if(a.dtype==="complex64"){const f=$o({inputs:{input:a},backend:e}),p=gi({inputs:{x:f},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(f),p}if(!J2(a.dtype,r)){const f=qa({inputs:{x:a},backend:e});return{dataId:f.dataId,shape:f.shape,dtype:r}}const i=e.data.get(a.dataId).values,[l,u,h]=nR(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}const Vq={kernelName:qc,backendName:"cpu",kernelFunc:gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(n,t,e,s){return e==null?({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;Rt([i,l],n);const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=i.dtype==="string"?Cr(h):h,m=i.dtype==="string"?Cr(f):f,y=s||i.dtype,[b,v]=t(i.shape,l.shape,p,m,y);return u.makeTensorInfo(v,y,b)}:({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;if(i.dtype==="complex64"||l.dtype==="complex64"){const h=gi({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),f=u.data.get(h.dataId),p=f.complexTensorInfos.real,m=f.complexTensorInfos.imag,y=u.data.get(p.dataId).values,b=u.data.get(m.dataId).values,v=gi({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),w=u.data.get(v.dataId),S=w.complexTensorInfos.real,C=w.complexTensorInfos.imag,$=u.data.get(S.dataId).values,T=u.data.get(C.dataId).values,[I,R,F]=e(i.shape,l.shape,y,b,$,T),M=u.makeTensorInfo(F,"float32",I),D=u.makeTensorInfo(F,"float32",R),O=ls({inputs:{real:M,imag:D},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(D),O}else{const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=s||i.dtype,[m,y]=t(i.shape,l.shape,h,f,p);return u.makeTensorInfo(y,p,m)}}}function Vv(n){return(t,e,s,a,r,i)=>{const l=Pt(t,e),u=ht(l),h=l.length,f=Ft(l),p=Cn("float32",u),m=Cn("float32",u),y=Vl(t,l),b=Vl(e,l),v=Nr(s,a),w=Nr(r,i),S=t.length,C=Ft(t),$=e.length,T=Ft(e);if(y.length+b.length===0)for(let I=0;I<p.length;I++){const R=I%v.length,F=I%w.length,M=n(v[R*2],v[R*2+1],w[F*2],w[F*2+1]);p[I]=M.real,m[I]=M.imag}else for(let I=0;I<p.length;I++){const R=Zl(I,h,f),F=R.slice(-S);y.forEach(W=>F[W]=0);const M=Va(F,S,C),D=R.slice(-$);b.forEach(W=>D[W]=0);const O=Va(D,$,T),A=n(v[M*2],v[M*2+1],w[O*2],w[O*2+1]);p[I]=A.real,m[I]=A.imag}return[p,m,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR=Xe((n,t)=>n+t),Pq=Vv((n,t,e,s)=>({real:n+e,imag:t+s})),Gl=un(Ql,sR,Pq),Uq={kernelName:Ql,backendName:"cpu",kernelFunc:Gl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n,t,e,s,a){const r=ht(s),i=Fn(a,e);for(let l=0;l<n.length;l++){const u=n[l];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(r>0?i[u]+=t[l]:i[u]+=1)}return i}function aR(n,t,e,s=!1){const a=n.shape[0],r=n.shape[1],i=Ht([a,e],t.dtype);for(let l=0;l<a;l++)for(let u=0;u<r;u++){const h=n.get(l,u);if(h<0)throw new Error("Input x must be non-negative!");h>=e||(s?i.set(1,l,h):t.size>0?i.set(i.get(l,h)+t.get(l,u),l,h):i.set(i.get(l,h)+1,l,h))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR=Xe((n,t)=>n&t),Wq=un(Ep,rR),Gq={kernelName:Ep,backendName:"cpu",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n){return(t,e,s)=>{const a=Ge(e,t.length);for(let r=0;r<t.length;++r)a[r]=n(t[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(n,t,e){const s=Xa(t);return Ei(n,s,e)}function Ei(n,t,e){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;Rt(i,n);const l=r,u=l.data.get(i.dataId).values;let h;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");h=Cr(u)}else h=u;const f=e||i.dtype,p=t(h,f,a);return l.makeTensorInfo(i.shape,f,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Xa(n=>Math.ceil(n)),Hq=Ei(jc,iR),qq={kernelName:jc,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(n,t,e,s){const a=Ge(e,ht(t));if(s&&e!=="string"){let r=0;n.forEach(i=>{const l=ht(i.shape);a.set(i.vals,r),r+=l})}else{let r=0;n.forEach(i=>{const l=e==="string"?Cr(i.vals):i.vals;let u=0;for(let h=0;h<i.shape[0];++h){const f=h*t[1]+r;for(let p=0;p<i.shape[1];++p)a[f+p]=l[u++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR=Xe((n,t)=>n===t?1:0),uR=un(Mp,lR,null,"bool"),jq={kernelName:Mp,backendName:"cpu",kernelFunc:uR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=Xa(n=>Math.exp(n)),hR=Ei(th,cR,"float32"),Xq={kernelName:th,backendName:"cpu",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=Xa(n=>Math.expm1(n)),Kq=Ei(eh,dR),Yq={kernelName:eh,backendName:"cpu",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR=Xa(n=>Math.floor(n)),Zq=Ei(nh,fR),Qq={kernelName:nh,backendName:"cpu",kernelFunc:Zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR=Xe((n,t)=>Math.floor(n/t)),Jq=un(sh,pR,null,"int32"),tj={kernelName:sh,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,t,e,s,a,r,i,l,u){const h=Ht([s,r],e);for(let f=0;f<s;f++){const p=[];let m=0;for(let y=0;y<a;y++){const b=n[f*a+y];m+=b*i[y],p.push(b)}if(m<0||m>=u/r)throw new Error(`Invalid indices: ${p} does not index into ${l}`);for(let y=0;y<r;y++)h.values[f*r+y]=t.get(...t.indexToLoc(m*r+y))}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,t,e){const s=Ht(e,n.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),l=i[0],u=i[2],h=t.locToIndex([l,u]);i[2]=t.values[h];const f=n.locToIndex(i);0<=f&&f<n.values.length&&(s.values[a]=n.values[f])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR=Xe((n,t)=>n>t?1:0),ej=un(Up,yR,null,"bool"),nj={kernelName:Up,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR=Xe((n,t)=>n>=t?1:0),sj=un(ah,bR,null,"bool"),aj={kernelName:ah,backendName:"cpu",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR=Xe((n,t)=>n<t?1:0),rj=un(Gp,xR,null,"bool"),ij={kernelName:Gp,backendName:"cpu",kernelFunc:rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR=Xe((n,t)=>n<=t?1:0),oj=un(Hp,vR,null,"bool"),lj={kernelName:Hp,backendName:"cpu",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(n,t,e){const s=(t-n)/(e-1),a=Fn(e,"float32");a[0]=n;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SR=Xa(n=>Math.log(n)),uj=Ei(uh,SR),cj={kernelName:uh,backendName:"cpu",kernelFunc:uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,t,e,s){const a=Cn(s,ht(e));for(let r=0;r<a.length;++r){const i=r*t;let l=n[i];for(let u=0;u<t;++u){const h=n[i+u];(Number.isNaN(h)||h>l)&&(l=h)}a[r]=l}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=Xe((n,t)=>Math.max(n,t)),hj=un(hh,CR),dj={kernelName:hh,backendName:"cpu",kernelFunc:hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR=Xe((n,t)=>Math.min(n,t)),fj=un(dh,TR),pj={kernelName:dh,backendName:"cpu",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uv=Xe((n,t)=>n*t),mj=Vv((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),lg=un(ph,Uv,mj),gj={kernelName:ph,backendName:"cpu",kernelFunc:lg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n,t,e){const s=vi(-1,e);return Uv([],t,s,n,e)}function yj(n){const{inputs:t,backend:e}=n,{x:s}=t;Rt(s,"neg");const a=e.data.get(s.dataId).values,[r,i]=$R(a,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,r)}const bj={kernelName:nm,backendName:"cpu",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR=Xe((n,t)=>n!==t?1:0),xj=un(sm,kR,null,"bool"),vj={kernelName:sm,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(n,t,e,s,a){const r=t.length,i=ht(t),l=Ft(t),u=Ft(a),h=Cn(e,ht(a));for(let f=0;f<i;++f){const p=Zl(f,r,l),m=new Array(p.length);for(let b=0;b<m.length;b++)m[b]=p[s[b]];const y=Va(m,r,u);h[y]=n[f]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(n){const{inputs:t,attrs:e,backend:s}=n,{x:a}=t,{perm:r}=e;Rt(a,"transpose");const i=a.shape.length,l=new Array(i);for(let p=0;p<l.length;p++)l[p]=a.shape[r[p]];const u=s.data.get(a.dataId).values,h=Wv(u,a.shape,a.dtype,r,l);return{dataId:s.write(h,l,a.dtype),shape:l,dtype:a.dtype}}const wj={kernelName:Al,backendName:"cpu",kernelFunc:es};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,t,e,s){const[a,r]=gn(n,s),i=ds(t,"int32"),l=Fn(ht(a),i),u=ht(r);for(let h=0;h<l.length;++h){const f=h*u;let p=1;for(let m=0;m<u;++m)p*=e[f+m];l[h]=p}return{outVals:l,outShape:a,outDtype:i}}function Sj(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"prod");const l=a.shape.length,u=Xt(r,a.shape),h=_e(u,l);let f=u,p=a;const m=[];h!=null&&(p=es({inputs:{x:a},backend:e,attrs:{perm:h}}),m.push(p),f=qe(f.length,l));const y=e.data.get(p.dataId).values,{outVals:b,outShape:v,outDtype:w}=IR(p.shape,p.dtype,y,f);let S=v;return i&&(S=He(v,u)),m.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.makeTensorInfo(S,w,b)}const Nj={kernelName:um,backendName:"cpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(n,t,e){n.forEach((s,a)=>{if(s<0||s>=e){const r=Zl(a,t.length,Ft(t)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${e})`)}})}function Tj(n,t){for(let e=0;e<n.length;++e){const s=n[e],a=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function $j(n,t,e,s){const a=[];let r=0;const i=t.length-1+e.length,l=new Array(i).fill(null).map(()=>[0]);Tj(e,s);let u=1;for(let h=0;h<t.length-1;++h){u*=t[h];const f=t[h+1];for(let p=1;p<u+1;++p)l[h].push(p*f)}for(let h=0;h<n.length;++h){let f=n[h],p=n[h]+1;for(let m=0;m<e.length;++m){const y=e[m],b=m+t.length-1;if(b>=0){const v=l[b],w=v[v.length-1]-y[f];for(let S=f;S<p;++S)l[b].push(y[S+1]+w)}f=y[f],p=y[p]}p!==f&&(a.push([f,p]),r+=p-f)}return{outSplits:l,valueSlices:a,numValues:r}}function kj(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,a=Ge("int32",s);t.push(a),n[e].forEach((r,i)=>a[i]=r)}return t}function o2(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function Ij(n,t,e,s,a,r){const i=o2(t,2)[1],l=o2(r,2)[1];let u=0;for(const h of e)for(let f=h[0];f<h[1];++f){for(let p=0;p<s;++p)a[u*l+p]=n[f*i+p];++u}}function Ej(n,t,e,s,a){const r=t.slice();r[0]=a;const i=Ge(e,ht(r)),l=n.length,u=l===0?0:l/t[0];return Ij(n,t,s,u,i,r),[i,r]}function ER(n,t,e,s,a,r,i,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(Cj(r,i,u),s.length===0)throw new Error("params.rank must be nonzero");const h=s[0],{outSplits:f,valueSlices:p,numValues:m}=$j(r,i,n,h),y=kj(f),b=Ej(e,s,a,p,m);return[y,b[0],b[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l2=2147483647;function AR(n,t,e,s,a,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const l=t.length===0,u=a.length===0,h=i.length===0,f=[];l||f.push(t[0]),u||f.push(a[0]),h||f.push(i[0]);for(let w=1;w<f.length;++w)if(f[w]!==f[w-1])throw new Error("starts, limits, and deltas must have the same shape");const p=f.length===0?1:f[0],m=Ge("int32",p+1);m[0]=0;for(let w=0;w<p;++w){const S=l?n[0]:n[w],C=u?s[0]:s[w],$=h?r[0]:r[w];if($===0)throw new Error("Requires delta != 0");let T;if($>0&&C<S||$<0&&C>S)T=0;else if(T=Math.ceil(Math.abs((C-S)/$)),T>l2)throw new Error(`Requires ((limit - start) / delta) <= ${l2}`);m[w+1]=m[w]+T}const y=m[p],b=Ge(e,y);let v=0;for(let w=0;w<p;++w){const S=m[w+1]-m[w];let C=l?n[0]:n[w];const $=h?r[0]:r[w];for(let T=0;T<S;++T)b[v++]=C,C+=$}return[m,b]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xs=xa;class hp{constructor(t,e,s,a,r,i,l,u,h,f){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=l,this.rowPartitionValues=u,this.rowPartitionValuesShapes=h,this.rowPartitionTypes=hI(f),this.raggedRank=dI(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Xs.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Xs.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Xs.VALUE_ROWIDS:return hp.getMaxWidthValueRowID(e);case Xs.ROW_SPLITS:return hp.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Xs[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let a=0;a<e-1;++a){const r=t[a+1]-t[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,a=t[0],r=0;for(let i=1;i<e;++i){const l=t[i];l!==a&&(a=l,r=Math.max(i-s,r),s=i)}return Math.max(e-s,r)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return c2(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;fI(s,e);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=cI(this.raggedRank,a,e);i[0]<0&&(i[0]=t);for(let l=1;l<=this.raggedRank;++l)i[l]<0&&(i[l]=this.getMaxWidth(l));return i}calculateFirstParentOutputIndex(t,e,s){const a=Math.min(t,s),r=[];let i=0;for(let l=0;l<a;++l,i+=e)r.push(i);for(let l=a;l<t;++l)r.push(-1);return _(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,s,a){const r=t.length,i=[];for(let l=0;l<r-1;++l){const u=t[l+1]-t[l];let h=Math.min(a,u),f=e[l];f===-1&&(h=0);for(let p=0;p<h;++p)i.push(f),f+=s;for(let p=0;p<u-h;++p)i.push(-1)}if(r>0&&i.length!==t[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,a){const r=t.length,i=[];if(r===0)return[];let l=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let h=e[u];i.push(h);for(let f=1;f<r;++f){const p=t[f];if(p===u)h>=0&&(++l,l<a?h+=s:h=-1);else{if(l=0,u=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);h=e[p]}i.push(h)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,a){const r=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Xs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,s,a);case Xs.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,s,a);default:throw new Error(`Unsupported partition type: ${Xs[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Xs.FIRST_DIM_SIZE:return t[0];case Xs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Xs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Xs[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let u=a.length-2;u>=0;--u)a[u]=a[u+1]*s[u+1];const r=c2(s,!1),i=Ge(this.valuesDType,ht(r));if(a[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,a[0],s[0]);for(let h=1;h<=this.raggedRank;++h)u=this.calculateOutputIndex(h-1,u,a[h],s[h]);this.setOutput(this.raggedRank,u,i,r)}return[r,i]}setOutput(t,e,s,a){if(s.length===0)return;const r=this.values,i=s;let l=a.slice();l=l.slice(t+1);const u=ht(l),h=e.length;let f=this.defaultValue;if(f.length!==u&&f.length!==1){const b=this.defaultValueShape;nt(()=>{const v=q(f,b);f=Ol(v,l).dataSync()})}let p=0,m=0,y=0;for(let b=0;b<=h;++b){let v=b<h?e[b]:-1;if(v===y){++y;continue}if(m<y){const w=r.subarray(p*u),S=i.subarray(m*u),C=(y-m)*u;u2(S,w,C)}if(b>=h){const w=s.length;v=Math.floor(w/u)}if(v>y)if(this.defaultValue.length===1)i.subarray(y*u,v*u).fill(this.defaultValue[0]),y=v;else for(;v>y;){const w=i.slice(y*u);u2(w,f,u),++y}v<0?(p=b+1,m=y):(p=b,m=y,y=m+1)}}}function u2(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function c2(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function RR(n,t,e,s,a,r,i,l,u,h){return new hp(n,t,e,s,a,r,i,l,u,h).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,t,e,s){const a=n===t,r=n<t&&e<0,i=t<n&&e>1;if(a||r||i)return Fn(0,s);const l=Math.abs(Math.ceil((t-n)/e)),u=Fn(l,s);t<n&&e===1&&(e=-1),u[0]=n;for(let h=1;h<u.length;h++)u[h]=u[h-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OR=Xa(n=>1/Math.sqrt(n)),Aj=Ei(vh,OR),Rj={kernelName:vh,backendName:"cpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(n,t,e,s,a,r,i,l,u,h){const f=[s/a,a],p=n.values,m=t.values;if(s===0)return Ht(e,t.dtype);const y=u instanceof an?u:Ht(f,t.dtype);typeof u=="string"||typeof u=="number"?y.values.fill(u):typeof u=="boolean"&&y.values.fill(+u);for(let b=0;b<r;b++){const v=[];let w=0;for(let S=0;S<i;S++){const C=p[b*i+S];v.push(C),w+=C*l[S]}if(w<0||w>=s/a)throw new Error(`Invalid indices: ${v} does not index into ${e}`);for(let S=0;S<a;S++)h?y.values[w*a+S]+=m[b*a+S]:y.values[w*a+S]=t.rank===0?m[0]:m[b*a+S]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=Xa(n=>1/(1+Math.exp(-n))),_R=me(Th,n=>1/(1+Math.exp(-n))),Oj={kernelName:Th,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,t,e,s,a){const r=K1(s,t,e),i=ht(e),l=Ft(s);if(r){const p=Y1(t,l);return a==="string"?n.slice(p,p+i):n.subarray(p,p+i)}const u=a==="string"?Cr(n):n,h=Ht(s,a,u),f=Ht(e,a);for(let p=0;p<f.size;++p){const m=f.indexToLoc(p),y=m.map((b,v)=>b+t[v]);f.set(h.get(...y),...m)}return a==="string"?OI(f.values):f.values}function ko(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s;Rt(a,"slice");const[l,u]=jm(a,r,i);j1(a,l,u);const h=e.data.get(a.dataId).values,f=FR(h,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,f)}const _j={kernelName:mm,backendName:"cpu",kernelFunc:ko};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,t,e,s,a,r,i){const l=t[0],u=r[0],h=new Array(u),f=new Array(l),p=t[1];if(u===0){if(l!==0)throw new Error(vI(l));const w=Ge(e,0),S=Ge(a,0);return[w,[0,p],S,h,f]}let m=!0,y=0;const b=new Array(u).fill(0);for(let w=0;w<l;++w){const S=n[w*p];if(S<0)throw new Error(wI(w,S));if(S>=u)throw new Error(SI(w,S,u));++b[S],m=m&&S>=y,y=S}let v=!0;for(let w=0;w<u;++w){const S=b[w]===0;h[w]=S,v=v&&!S,b[w]=Math.max(b[w],1),w>0&&(b[w]+=b[w-1])}if(v&&m){const w=n,S=s;for(let C=0;C<l;++C)f[C]=C;return[w,[l,p],S,h,f]}else{const w=b[u-1],S=Ge(e,w*p),C=Ge(a,w),$=new Array(u).fill(0);for(let T=0;T<l;++T){const I=n[T*p],R=$[I],F=(I===0?0:b[I-1])+R;$[I]++;for(let M=0;M<p;++M)S[F*p+M]=n[T*p+M];C[F]=s[T],f[T]=F}for(let T=0;T<u;++T)if($[T]===0){const R=T===0?0:b[T-1];S[R*p+0]=T;for(let F=1;F<p;++F)S[R*p+F]=0;C[R]=i}return[S,[w,p],C,h,f]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,t,e,s,a){const r=ht(s),i=t[0],l=a.length,u=[];let h=1,f=-1;for(let w=0;w<l;++w){const S=a[w];if(S===-1){if(f!==-1)throw new Error(NI(f,w));f=w,u.push(1)}else{if(S<0)throw new Error(CI(w,S));h*=S,u.push(S)}}if(f!==-1){if(h<=0)throw new Error(TI());const w=Math.trunc(r/h);if(h*w!==r)throw new Error($I(s,u));u[f]=w}if(ht(u)!==r)throw new Error(kI(s,u));const m=s.length,y=[];if(m>0){y[m-1]=1;for(let w=m-2;w>=0;--w)y[w]=y[w+1]*s[w+1]}const b=[];if(l>0){b[l-1]=1;for(let w=l-2;w>=0;--w)b[w]=b[w+1]*u[w+1]}const v=Ge(e,i*l);for(let w=0;w<i;++w){let S=0;for(let C=0;C<m;++C)S+=n[w*m+C]*y[C];for(let C=0;C<l;++C)v[w*l+C]=Math.trunc(S/b[C]),S%=b[C]}return[v,[i,l],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gv(n,t,e,s,a,r=!1,i=0){const l=s.length,u=[t[0],n.length/t[0]],h=u[1],p=l>0?a[l-1]+1:0;if(p<0)throw new Error(x0());const m=t.slice();m[0]=p;const y=m.reduce(($,T)=>$*T,1),b=Ge(e,y);if(l===0)return p>0&&b.fill(i),[b,m];if(p<=0)throw new Error(x0());let v=0,w=1,S=0,C=a[v];for(;;){let $=0;if(w<l){if($=a[w],C===$){++w;continue}if(C>=$)throw new Error(II())}if(C<0||C>=p)throw new Error(EI(C,p));C>S&&b.fill(i,S*h,C*h);for(let T=v;T<w;++T){const I=s[T];if(I<0||I>=u[0])throw new Error(AI(T,s[T],u[0]));for(let R=0;R<h;R++)b[C*h+R]+=n[I*h+R]}if(r)for(let T=0;T<h;T++)b[C*h+T]/=w-v;if(v=w,++w,S=C+1,C=$,w>l)break}return S<p&&b.fill(i,S*h,p*h),[b,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj=Xa(n=>Math.sqrt(n)),Lj=me(kh,n=>Math.sqrt(n)),zj={kernelName:kh,backendName:"cpu",kernelFunc:Lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR=Xe((n,t)=>{const e=n-t;return e*e}),Mj=un(Ih,MR),Bj={kernelName:Ih,backendName:"cpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BR=Xa((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:a}=t;return n.replace(new RegExp(e,s?"g":""),a)}),Vj=Ei(vm,BR),Pj={kernelName:vm,backendName:"cpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n,t,e,s){const a=Ht(n,t.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),l=new Array(i.length);for(let u=0;u<l.length;u++)l[u]=i[u]*e[u]+s[u];a.set(t.get(...l),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uj{constructor(t,e,s,a,r,i){this.separator=ai(t),this.nGramWidths=e,this.leftPad=ai(s),this.rightPad=ai(a),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,a,r,i){for(let l=0;l<r;++l){const u=this.getPadWidth(i),h=Math.max(0,u-l),f=Math.max(0,u-(r-(l+1))),p=i-(h+f),m=e+(h>0?0:l-u);let y=0;y+=h*this.leftPad.length;for(let C=0;C<p;++C)y+=t[m+C].length;y+=f*this.rightPad.length;const b=h+f+p-1;y+=b*this.separator.length,s[a+l]=new Uint8Array(y);const v=s[a+l];let w=0;const S=C=>C.forEach($=>v[w++]=$);for(let C=0;C<h;++C)S(this.leftPad),S(this.separator);for(let C=0;C<p-1;++C)S(t[m+C]),S(this.separator);if(p>0){S(t[m+p-1]);for(let C=0;C<f;++C)S(this.separator),S(this.rightPad)}else{for(let C=0;C<f-1;++C)S(this.rightPad),S(this.separator);S(this.rightPad)}}}compute(t,e){const s=t.length,a=e.length;if(a>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let h=1;h<a;++h){let f=e[h]>=u;if(f=f&&e[h]<=s,!f)throw new Error(`Invalid split value ${e[h]}, must be in [${u}, ${s}]`);u=e[h]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const r=a-1,i=Ge("int32",a);if(s===0||a===0){const u=new Array(s);for(let h=0;h<=r;++h)i[h]=0;return[u,i]}i[0]=0;for(let u=1;u<=r;++u){const h=e[u]-e[u-1];let f=0;this.nGramWidths.forEach(p=>{f+=this.getNumNGrams(h,p)}),this.preserveShort&&h>0&&f===0&&(f=1),i[u]=i[u-1]+f}const l=new Array(i[r]);for(let u=0;u<r;++u){const h=e[u];let f=i[u];if(this.nGramWidths.forEach(p=>{const m=e[u+1]-e[u],y=this.getNumNGrams(m,p);this.createNGrams(t,h,l,f,y,p),f+=y}),this.preserveShort&&f===i[u]){const p=e[u+1]-e[u];if(p===0)continue;const m=p+2*this.padWidth;this.createNGrams(t,h,l,f,1,m)}}return[l,i]}}function PR(n,t,e,s,a,r,i,l){return new Uj(e,s,a,r,i,l).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(n,t,e,s){if(!n.length)return;if(t.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(t.length===1){const r=t[0];let i=n.indexOf(r);for(;i!==-1;){const l=n.subarray(0,i);(!e||l.length!==0)&&s.push(l),n=n.subarray(i+1),i=n.indexOf(r)}(!e||n.length!==0)&&s.push(n);return}let a=0;for(let r=0;r<n.length+1;r++)if(r===n.length||t.indexOf(n[r])!==-1){const i=n.subarray(a,r);(!e||i.length!==0)&&s.push(i),a=r+1}}function UR(n,t,e){const s=n.length,a=[];let r=0,i=0;const l=new Array(s);for(let m=0;m<s;++m){const y=a.length;Wj(n[m],t,e,a);const b=a.length-y;l[m]=b,r+=b,i=Math.max(i,b)}const u=Ge("int32",r*2),h=new Array(r),f=[s,i];let p=0;for(let m=0;m<s;++m)for(let y=0;y<l[m];++y)u[p*2]=m,u[p*2+1]=y,h[p]=a[p],++p;return[u,h,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,t){const e=Ge("int32",n.length);for(let s=0;s<n.length;++s)e[s]=n3(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GR=Xe((n,t)=>n-t),Gj=Vv((n,t,e,s)=>({real:n-e,imag:t-s})),Hv=un(Eh,GR,Gj),Hj={kernelName:Eh,backendName:"cpu",kernelFunc:Hv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,t){const e=new Array(n.rank);for(let a=0;a<e.length;a++)e[a]=n.shape[a]*t[a];const s=Ht(e,n.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=r[u]%n.shape[u];const l=n.locToIndex(i);s.values[a]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xc=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function qR(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const l=s-e+1,u=t-e+1,h=Math.log(l),f=.5*Math.exp(2*h/3),p=.5*Math.sqrt(h*f*(l-f)/l)*Math.sign(u-l/2),m=Math.max(e,Math.floor(t-u*f/l+p)),y=Math.min(s,Math.floor(t+(l-u)*f/l+p));qR(n,t,m,y)}const a=n[t];let r=e,i=s;for(Tl(n,e,t),xc(n[s],a)>0&&Tl(n,e,s);r<i;){for(Tl(n,r,i),r++,i--;xc(n[r],a)<0;)r=r+1;for(;xc(n[i],a)>0;)i=i-1}xc(n[e],a)===0?Tl(n,e,i):(i=i+1,Tl(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function jR(n,t,e,s,a){const r=t[t.length-1],[i,l]=[n.length/r,r],u=Cn(e,i*s),h=Cn("int32",i*s);for(let p=0;p<i;p++){const m=p*l,y=n.subarray(m,m+l);let b=new Array(y.length);y.forEach((C,$)=>b[$]={value:C,index:$}),s<b.length&&(qR(b,s),b=b.slice(0,s)),a&&b.sort(xc);const v=p*s,w=u.subarray(v,v+s),S=h.subarray(v,v+s);for(let C=0;C<s;C++)w[C]=b[C].value,S[C]=b[C].index}const f=t.slice();return f[f.length-1]=s,[Ht(f,e,u),Ht(f,"int32",h)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,t,e,s){const a=Xt(t,e)[0],r=[1,e[0],1];for(let b=0;b<a;b++)r[0]*=e[b];r[1]=e[a];for(let b=a+1;b<e.length;b++)r[2]*=e[b];const i=new Map,l=new Int32Array(e[a]),u=new an(r,s,n),h=[],f=r[0]===1&&r[2]===1;for(let b=0;b<e[a];b++){let v;if(f)v=n[b].toString();else{const S=[];for(let C=0;C<r[0];C++)for(let $=0;$<r[2];$++)S.push(u.get(C,b,$));v=S.join(",")}const w=i.get(v);if(w!=null)l[b]=w;else{const S=i.size;i.set(v,S),l[b]=S,h.push(b)}}const p=r.slice();p[1]=i.size;const m=new an(p,s);h.forEach((b,v)=>{for(let w=0;w<r[0];w++)for(let S=0;S<r[2];S++)m.set(u.get(w,b,S),w,v,S)});const y=e.slice();return y[a]=p[1],{outputValues:m.values,outputShape:y,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj=Object.freeze(Object.defineProperty({__proto__:null,addImpl:sR,bincountImpl:Pv,bincountReduceImpl:aR,bitwiseAndImpl:rR,castImpl:nR,ceilImpl:iR,concatImpl:oR,equalImpl:lR,expImpl:cR,expm1Impl:dR,floorDivImpl:pR,floorImpl:fR,gatherNdImpl:mR,gatherV2Impl:gR,greaterEqualImpl:bR,greaterImpl:yR,lessEqualImpl:vR,lessImpl:xR,linSpaceImpl:wR,logImpl:SR,maxImpl:NR,maximumImpl:CR,minimumImpl:TR,multiplyImpl:Uv,negImpl:$R,notEqualImpl:kR,prodImpl:IR,raggedGatherImpl:ER,raggedRangeImpl:AR,raggedTensorToTensorImpl:RR,rangeImpl:DR,rsqrtImpl:OR,scatterImpl:uo,sigmoidImpl:Dj,simpleAbsImpl:eR,sliceImpl:FR,sparseFillEmptyRowsImpl:LR,sparseReshapeImpl:zR,sparseSegmentReductionImpl:Gv,sqrtImpl:Fj,squaredDifferenceImpl:MR,staticRegexReplaceImpl:BR,stridedSliceImpl:VR,stringNGramsImpl:PR,stringSplitImpl:UR,stringToHashBucketFastImpl:WR,subImpl:GR,tileImpl:HR,topKImpl:jR,transposeImpl:Wv,uniqueImpl:XR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */w$("cpu",()=>new og,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KR=me(Qc,n=>n>=0?n:Math.exp(n)-1),jj={kernelName:Qc,backendName:"cpu",kernelFunc:KR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s;Rt([a],"leakyRelu");const i=ht(a.shape),l=e.data.get(a.dataId).values,u=Cn("float32",i);for(let h=0;h<l.length;h++)u[h]=l[h]<0?r*l[h]:l[h];return e.makeTensorInfo(a.shape,"float32",u)}const Xj={kernelName:Wp,backendName:"cpu",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj=Xe((n,t)=>n<0?t*n:n);function ZR(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t;Rt([s,a],"prelu");const r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,[l,u]=Kj(s.shape,a.shape,r,i,"float32");return e.makeTensorInfo(u,"float32",l)}const Yj={kernelName:lm,backendName:"cpu",kernelFunc:ZR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR=me(yh,n=>Math.max(0,n)),Zj={kernelName:yh,backendName:"cpu",kernelFunc:QR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=me(bh,n=>Math.min(Math.max(0,n),6)),Qj={kernelName:bh,backendName:"cpu",kernelFunc:JR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(n,t,e,s,a){if(e==="linear")return qa({inputs:{x:t},backend:n});if(e==="relu")return QR({inputs:{x:t},backend:n});if(e==="elu")return KR({inputs:{x:t},backend:n});if(e==="relu6")return JR({inputs:{x:t},backend:n});if(e==="prelu")return ZR({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return YR({inputs:{x:t},backend:n,attrs:{alpha:a}});if(e==="sigmoid")return _R({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Te(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=ht(a.shape),l=Q2(r,i),u=ht(l);_(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(a.dataId);const h=e.data.get(a.dataId);if(h.complexTensorInfos!=null){const f=h.complexTensorInfos.real,p=h.complexTensorInfos.imag;f.shape=l,p.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const Jj={kernelName:cm,backendName:"cpu",kernelFunc:Te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;Rt([a,r],"matMul");const u=a.shape.length,h=r.shape.length,f=i?a.shape[u-2]:a.shape[u-1],p=l?r.shape[h-1]:r.shape[h-2],m=i?a.shape[u-1]:a.shape[u-2],y=l?r.shape[h-2]:r.shape[h-1],b=a.shape.slice(0,-2),v=r.shape.slice(0,-2),w=ht(b),S=ht(v),$=Pt(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([m,y]);_(f===p,()=>`Error in matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${l} must match.`);const T=i?[w,f,m]:[w,m,f],I=l?[S,y,p]:[S,p,y],R=Te({inputs:{x:a},backend:e,attrs:{shape:T}}),F=Te({inputs:{x:r},backend:e,attrs:{shape:I}}),M=i?R.shape[1]:R.shape[2],D=i?R.shape[2]:R.shape[1],O=l?F.shape[1]:F.shape[2],A=Math.max(w,S),W=e.data.get(R.dataId).values,K=e.data.get(F.dataId).values,tt=Ft(R.shape),Q=Ft(F.shape),[P,et,Y]=i?[tt[0],1,tt[1]]:[tt[0],tt[1],1],[rt,B,j]=l?[1,Q[1],Q[0]]:[Q[1],1,Q[0]],lt=D*O,ot=Ht([A,D,O],R.dtype),ut=ot.values,mt=e.blockSize;for(let bt=0;bt<A;bt++){const Ct=bt%w,wt=bt%S;for(let Tt=0;Tt<D;Tt+=mt){const It=Math.min(Tt+mt,D);for(let Mt=0;Mt<O;Mt+=mt){const ee=Math.min(Mt+mt,O);for(let ne=0;ne<M;ne+=mt){const ye=Math.min(ne+mt,M);for(let ce=Tt;ce<It;ce++)for(let se=Mt;se<ee;se++){let be=0;for(let fe=ne;fe<ye;fe++){const vs=W[Ct*P+ce*et+fe*Y],Be=K[fe*rt+se*B+wt*j];be+=vs*Be}ut[bt*lt+(ce*O+se)]+=be}}}}}return e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo(F),e.makeTensorInfo($,ot.dtype,ot.values)}const t5={kernelName:kp,backendName:"cpu",kernelFunc:tD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;let m,y,b;const v=[];m=tD({inputs:{a,b:r},attrs:{transposeA:u,transposeB:h},backend:e}),i&&(y=Gl({inputs:{a:m,b:i},backend:e}),v.push(m),m=y),f&&(b=dp(e,m,f,l,p),v.push(m),m=b);for(const S of v)e.disposeIntermediateTensorInfo(S);return m}const n5={kernelName:Hf,backendName:"cpu",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5=me(Bc,n=>Math.acos(n)),a5={kernelName:Bc,backendName:"cpu",kernelFunc:s5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5=me(Vc,n=>Math.acosh(n)),i5={kernelName:Vc,backendName:"cpu",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(n){const{inputs:t,backend:e}=n,s=t;Rt(t,"addN");const a=s.map(l=>e.data.get(l.dataId).values),r=Ht(s[0].shape,s[0].dtype),i=r.values;for(let l=0;l<s.length;l++){const u=a[l];for(let h=0;h<i.length;h++)i[h]+=u[h]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const l5={kernelName:Sp,backendName:"cpu",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"all");const l=Xt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=es({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),kn("all",u,f.shape.length);const[p,m]=gn(f.shape,u),y=ht(m),b=Fn(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=v[C];for(let T=0;T<y;++T){const I=v[C+T];$=$&&I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=He(p,l),C=Te({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),C}return w}const c5={kernelName:Z0,backendName:"cpu",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"any");const l=Xt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=es({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),kn("any",u,f.shape.length);const[p,m]=gn(f.shape,u),y=ht(m),b=Fn(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=v[C];for(let T=0;T<y;++T){const I=v[C+T];$=$||I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=He(p,l),C=Te({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),C}return w}const d5={kernelName:Q0,backendName:"cpu",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;Rt(a,"argMax");let i=Xt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=es({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),i=[i[0]],kn("argMax",i,u.shape.length);const[f,p]=gn(u.shape,i),m=ht(f),y=Fn(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let C=v[S],$=0;for(let T=0;T<b;++T){const I=v[S+T];I>C&&(C=I,$=T)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(f,"int32",y)}const p5={kernelName:Np,backendName:"cpu",kernelFunc:f5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;Rt(a,"argMin");let i=Xt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=es({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),i=[i[0]],kn("argMin",i,u.shape.length);const[f,p]=gn(u.shape,i),m=ht(f),y=Fn(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let C=v[S],$=0;for(let T=0;T<b;++T){const I=v[S+T];I<C&&(C=I,$=T)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(f,"int32",y)}const g5={kernelName:Cp,backendName:"cpu",kernelFunc:m5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5=me(Pc,n=>Math.asin(n)),b5={kernelName:Pc,backendName:"cpu",kernelFunc:y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5=me(Uc,n=>Math.asinh(n)),v5={kernelName:Uc,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=me(Wc,n=>Math.atan(n)),S5={kernelName:Wc,backendName:"cpu",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=Xe((n,t)=>Math.atan2(n,t)),C5=un(Hc,N5),T5={kernelName:Hc,backendName:"cpu",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=me(Gc,n=>Math.atanh(n)),k5={kernelName:Gc,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qv(n,t,e,s,a,r){const i=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,f=a.effectiveFilterHeight,p=a.effectiveFilterWidth,m=a.padInfo.top,y=a.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Ht(a.outShape,e),w=v.values,S=a.outShape[1]*a.outShape[2]*a.outShape[3],C=a.outShape[2]*a.outShape[3],$=a.outShape[3];for(let T=0;T<a.batchSize;++T){const I=T*S,R=T*s[0];for(let F=0;F<a.inChannels;++F)for(let M=0;M<a.outHeight;++M){const D=M*i-m,O=Math.max(0,D),A=Math.min(a.inHeight,f+D),W=I+M*C;for(let K=0;K<a.outWidth;++K){const tt=K*l-y,Q=Math.max(0,tt),P=Math.min(a.inWidth,p+tt);let et=b,Y=0,rt=0;for(let j=O;j<A;j+=u){const lt=R+j*s[1];for(let ot=Q;ot<P;ot+=h){const ut=lt+ot*s[2],mt=n[ut+F];r==="max"&&mt>et?et=mt:r==="avg"&&(Y+=mt,rt++)}if(isNaN(et))break}const B=W+K*$+F;w[B]=r==="avg"?Y/rt:et}}}return v}function eD(n,t,e,s,a=!1,r=!1){const i=Ht(s.outShape,"int32"),l=s.strideHeight,u=s.strideWidth,h=s.dilationHeight,f=s.dilationWidth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,y=s.padInfo.top,b=s.padInfo.left,v=Ht(t,e,n);for(let w=0;w<s.batchSize;++w)for(let S=0;S<s.inChannels;++S)for(let C=0;C<s.outHeight;++C){const $=C*l-y;let T=$;for(;T<0;)T+=h;const I=Math.min(s.inHeight,p+$);for(let R=0;R<s.outWidth;++R){const F=R*u-b;let M=F;for(;M<0;)M+=f;const D=Math.min(s.inWidth,m+F);let O=Number.NEGATIVE_INFINITY,A=-1;for(let W=T;W<I;W+=h){const K=W-$;for(let tt=M;tt<D;tt+=f){const Q=tt-F,P=v.get(w,W,tt,S);P>O&&(O=P,a?A=r?((w*s.inHeight+W)*s.inWidth+tt)*s.inChannels+S:(W*s.inWidth+tt)*s.inChannels+S:A=K*m+Q)}}i.set(A,w,C,R,S)}}return i}function nD(n,t,e,s,a,r){const i=a.strideDepth,l=a.strideHeight,u=a.strideWidth,h=a.dilationDepth,f=a.dilationHeight,p=a.dilationWidth,m=a.effectiveFilterDepth,y=a.effectiveFilterHeight,b=a.effectiveFilterWidth,v=a.padInfo.front,w=a.padInfo.top,S=a.padInfo.left,C=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Ht(a.outShape,e),T=$.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],R=a.outShape[2]*a.outShape[3]*a.outShape[4],F=a.outShape[3]*a.outShape[4],M=a.outShape[4];for(let D=0;D<a.batchSize;++D){const O=D*I,A=D*s[0];for(let W=0;W<a.inChannels;++W)for(let K=0;K<a.outDepth;++K){const tt=K*i-v;let Q=tt;for(;Q<0;)Q+=h;const P=Math.min(a.inDepth,m+tt),et=O+K*R;for(let Y=0;Y<a.outHeight;++Y){const rt=Y*l-w;let B=rt;for(;B<0;)B+=f;const j=Math.min(a.inHeight,y+rt),lt=et+Y*F;for(let ot=0;ot<a.outWidth;++ot){const ut=ot*u-S;let mt=ut;for(;mt<0;)mt+=p;const bt=Math.min(a.inWidth,b+ut),Ct=lt+ot*M;let wt=C,Tt=0,It=0;for(let ee=Q;ee<P;ee+=h){const ne=A+ee*s[1];for(let ye=B;ye<j;ye+=f){const ce=ne+ye*s[2];for(let se=mt;se<bt;se+=p){const be=ce+se*s[3],fe=n[be+W];if(r==="max"&&fe>wt?wt=fe:r==="avg"&&(Tt+=fe,It++),isNaN(wt))break}if(isNaN(wt))break}if(isNaN(wt))break}const Mt=Ct+W;T[Mt]=r==="avg"?Tt/Math.max(It,1):wt}}}}return $}function I5(n,t){const e=Ht(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;for(let v=0;v<t.batchSize;++v)for(let w=0;w<t.inChannels;++w)for(let S=0;S<t.outDepth;++S){const C=S*s-m;let $=C;for(;$<0;)$+=i;const T=Math.min(t.inDepth,h+C);for(let I=0;I<t.outHeight;++I){const R=I*a-y;let F=R;for(;F<0;)F+=l;const M=Math.min(t.inHeight,f+R);for(let D=0;D<t.outWidth;++D){const O=D*r-b;let A=O;for(;A<0;)A+=u;const W=Math.min(t.inWidth,p+O);let K=Number.NEGATIVE_INFINITY,tt=-1;for(let Q=$;Q<T;Q+=i){const P=Q-C;for(let et=F;et<M;et+=l){const Y=et-R;for(let rt=A;rt<W;rt+=u){const B=rt-O,j=n.get(v,Q,et,rt,w);j>=K&&(K=j,tt=P*f*p+Y*f+B)}}}e.set(tt,v,S,I,D,w)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rt(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;_($n(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ia(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&te(f.inShape,f.outShape))p=qa({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ft(a.shape),b=qv(m,a.shape,a.dtype,y,f,"avg");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const A5={kernelName:Tp,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;Rt(a,"avgPool3d");const f=Tr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=nD(p,a.shape,a.dtype,Ft(a.shape),f,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}const D5={kernelName:$p,backendName:"cpu",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;Rt([a,r],"avgPool3DGrad");const f=Tr(r.shape,i,l,1,u,h),p=f.strideDepth,m=f.strideHeight,y=f.strideWidth,b=f.filterDepth,v=f.filterHeight,w=f.filterWidth,S=f.dilationDepth,C=f.dilationHeight,$=f.dilationWidth,T=f.effectiveFilterDepth,I=f.effectiveFilterHeight,R=f.effectiveFilterWidth,F=T-1-f.padInfo.front,M=R-1-f.padInfo.left,D=I-1-f.padInfo.top,O=Ht(r.shape,"float32"),A=1/(b*v*w),W=e.bufferSync(a);for(let K=0;K<f.batchSize;++K)for(let tt=0;tt<f.inChannels;++tt)for(let Q=0;Q<f.inDepth;++Q)for(let P=0;P<f.inHeight;++P)for(let et=0;et<f.inWidth;++et){const Y=Q-F,rt=P-D,B=et-M;let j=0;for(let lt=0;lt<T;lt+=S){const ot=(Y+lt)/p;if(!(ot<0||ot>=f.outDepth||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=C){const mt=(rt+ut)/m;if(!(mt<0||mt>=f.outHeight||Math.floor(mt)!==mt))for(let bt=0;bt<R;bt+=$){const Ct=(B+bt)/y;if(Ct<0||Ct>=f.outWidth||Math.floor(Ct)!==Ct)continue;const wt=W.get(K,ot,mt,Ct,tt);j+=wt}}}O.set(j*A,K,Q,P,et,tt)}return e.makeTensorInfo(O.shape,O.dtype,O.values)}const _5={kernelName:tx,backendName:"cpu",kernelFunc:O5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;Rt([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=ia(i.shape,l,u,1,h),p=f.strideHeight,m=f.strideWidth,y=f.filterHeight,b=f.filterWidth,v=f.dilationHeight,w=f.dilationWidth,S=f.effectiveFilterHeight,C=f.effectiveFilterWidth,$=C-1-f.padInfo.left,T=S-1-f.padInfo.top,I=Ht(i.shape,"float32"),R=1/(y*b),F=e.data.get(a.dataId).values,M=Ht(a.shape,"float32",F);for(let D=0;D<f.batchSize;++D)for(let O=0;O<f.inChannels;++O)for(let A=0;A<f.inHeight;++A)for(let W=0;W<f.inWidth;++W){const K=A-T,tt=W-$;let Q=0;for(let P=0;P<S;P+=v){const et=(K+P)/p;if(!(et<0||et>=f.outHeight||Math.floor(et)!==et))for(let Y=0;Y<C;Y+=w){const rt=(tt+Y)/m;if(rt<0||rt>=f.outWidth||Math.floor(rt)!==rt)continue;const B=M.get(D,et,rt,O);Q+=B}}I.set(Q*R,D,A,W,O)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const L5={kernelName:J0,backendName:"cpu",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,scale:r,offset:i,mean:l,variance:u}=t;_(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(r==null||l.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Rt([a,l,u,r,i],"batchNorm");let{varianceEpsilon:h}=s;h==null&&(h=.001);const f=e.data.get(a.dataId).values,p=e.data.get(l.dataId).values,m=e.data.get(u.dataId).values,y=r?e.data.get(r.dataId).values:new Float32Array([1]),b=i?e.data.get(i.dataId).values:new Float32Array([0]),v=new Float32Array(f.length),w=b.length,S=y.length,C=m.length,$=p.length;let T=0,I=0,R=0,F=0;for(let M=0;M<f.length;++M)v[M]=b[T++]+(f[M]-p[I++])*y[R++]/Math.sqrt(m[F++]+h),T>=w&&(T=0),I>=$&&(I=0),R>=S&&(R=0),F>=C&&(F=0);return e.makeTensorInfo(a.shape,a.dtype,v)}const M5={kernelName:Vp,backendName:"cpu",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;Rt([a],"batchToSpaceND");const l=r.reduce((S,C)=>S*C),u=Uh(a.shape,r,l),h=Wh(u.length,r.length),f=Gh(a.shape,r,l),p=ev(i,r.length),m=nv(f,i,r.length),y=Te({inputs:{x:a},backend:e,attrs:{shape:u}}),b=es({inputs:{x:y},backend:e,attrs:{perm:h}}),v=Te({inputs:{x:b},backend:e,attrs:{shape:f}}),w=ko({inputs:{x:v},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const V5={kernelName:Ip,backendName:"cpu",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=Pv(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const U5={kernelName:ex,backendName:"cpu",kernelFunc:P5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const G5={kernelName:nx,backendName:"cpu",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5=me(Xc,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),q5={kernelName:Xc,backendName:"cpu",kernelFunc:H5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ht(t.shape)),a=e.data.get(t.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values;for(let h=0;h<l.length;h++){const f=l[h],p=u[h];s[h]=Math.hypot(f,p)}return e.makeOutput(s,t.shape,"float32")},X5={kernelName:Ap,backendName:"cpu",kernelFunc:j5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.imag,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const K5={kernelName:wx,backendName:"cpu",kernelFunc:Hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ql(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Xt(a,t[0].shape)[0],i=t.map(v=>v.shape);Q1(i,r);let l=Pa(t.map(v=>v.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(v=>ht(v.shape)>0);if(u.length===1)return qa({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const v=u.map(T=>$o({inputs:{input:T},backend:e})),w=u.map(T=>Hl({inputs:{input:T},backend:e})),S=ql({inputs:v,backend:e,attrs:{axis:r}}),C=ql({inputs:w,backend:e,attrs:{axis:r}}),$=ls({inputs:{real:S,imag:C},backend:e});return v.forEach(T=>e.disposeIntermediateTensorInfo(T)),w.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),$}const h=u.map(v=>{const S=[-1,ht(v.shape.slice(r))];return Te({inputs:{x:v},backend:e,attrs:{shape:S}})}),f=h.map(v=>({vals:e.data.get(v.dataId).values,shape:v.shape}));l=Pa(h.map(v=>v.shape),1);const p=h[0].shape[0]===1,m=oR(f,l,t[0].dtype,p),y=Pa(u.map(v=>v.shape),r),b=e.makeTensorInfo(y,t[0].dtype,m);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const Y5={kernelName:Rp,backendName:"cpu",kernelFunc:ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s;Rt([a,r],"conv2d");const p=$r(u),m=mn(a.shape,r.shape,i,h,l,f,!1,p),y=m.filterHeight,b=m.filterWidth,v=m.dilationHeight,w=m.dilationWidth,S=m.padInfo.left,C=m.padInfo.top,$=m.dataFormat==="channelsLast",T=new an(m.outShape,a.dtype),I=Ft(a.shape),R=Ft(r.shape),F=I[0],M=$?I[1]:I[2],D=$?I[2]:1,O=$?1:I[1],A=T.strides[0],W=$?T.strides[1]:T.strides[2],K=$?T.strides[2]:1,tt=$?1:T.strides[1],Q=e.data.get(a.dataId).values,P=e.data.get(r.dataId).values,et=T.values;for(let Y=0;Y<m.batchSize;++Y){const rt=Y*F,B=Y*A;for(let j=0;j<m.outHeight;++j){const lt=B+j*W,ot=j*m.strideHeight-C;for(let ut=0;ut<y;++ut){const mt=ot+ut*v;if(mt<0||mt>=m.inHeight)continue;const bt=ut*R[0],Ct=rt+mt*M;for(let wt=0;wt<m.outWidth;++wt){const Tt=lt+wt*K,It=wt*m.strideWidth-S;for(let Mt=0;Mt<b;++Mt){const ee=It+Mt*w;if(ee<0||ee>=m.inWidth)continue;const ne=bt+Mt*R[1],ye=Ct+ee*D;let ce=ne;for(let se=0;se<m.inChannels;++se){const be=Q[ye+se*O];for(let fe=0;fe<m.outChannels;++fe)et[Tt+fe*tt]+=be*P[ce+fe];ce+=m.outChannels}}}}}}return e.makeTensorInfo(T.shape,T.dtype,et)}const Z5={kernelName:Dp,backendName:"cpu",kernelFunc:sD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s;Rt([a,r],"conv2dBackpropFilter");const p=$r(u),m=mn(a.shape,f,i,1,l,h,!1,p),{strideHeight:y,strideWidth:b,filterHeight:v,filterWidth:w}=m,S=m.dataFormat==="channelsLast",C=new an(m.filterShape,"float32"),$=m.padInfo.left,T=m.padInfo.top,I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,F=new an(a.shape,a.dtype,I),M=new an(r.shape,r.dtype,R);for(let D=0;D<v;++D){const O=Math.max(0,Math.ceil((T-D)/y)),A=Math.min(m.outHeight,(m.inHeight+T-D)/y);for(let W=0;W<w;++W){const K=Math.max(0,Math.ceil(($-W)/b)),tt=Math.min(m.outWidth,(m.inWidth+$-W)/b);for(let Q=0;Q<m.inChannels;++Q)for(let P=0;P<m.outChannels;++P){let et=0;for(let Y=0;Y<m.batchSize;++Y)for(let rt=O;rt<A;++rt){const B=D+rt*y-T;for(let j=K;j<tt;++j){const lt=W+j*b-$;S?et+=F.get(Y,B,lt,Q)*M.get(Y,rt,j,P):et+=F.get(Y,Q,B,lt)*M.get(Y,P,rt,j)}}C.set(et,D,W,Q,P)}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const J5={kernelName:ax,backendName:"cpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s;Rt([a,r],"conv2dBackpropInput");const p=Ft(r.shape),m=Ft(a.shape);let y=$r(h);const b=mn(i,r.shape,l,1,u,f,!1,y),v=new an(b.inShape,"float32"),w=v.values,S=e.data.get(a.dataId).values,C=e.data.get(r.dataId).values,[$,T,I]=p,{batchSize:R,filterHeight:F,filterWidth:M,inChannels:D,inHeight:O,inWidth:A,outChannels:W,outHeight:K,outWidth:tt,strideHeight:Q,strideWidth:P}=b;y=b.dataFormat;const et=F-1-b.padInfo.top,Y=M-1-b.padInfo.left,rt=y==="channelsLast",B=v.strides[0],j=rt?v.strides[1]:v.strides[2],lt=rt?v.strides[2]:1,ot=rt?1:v.strides[1],ut=m[0],mt=rt?m[1]:m[2],bt=rt?m[2]:1,Ct=rt?1:m[1];for(let wt=0;wt<R;++wt)for(let Tt=0;Tt<D;++Tt)for(let It=0;It<O;++It){const Mt=It-et,ee=Math.max(0,Math.ceil(Mt/Q)),ne=Math.min(K,(F+Mt)/Q);for(let ye=0;ye<A;++ye){const ce=ye-Y,se=Math.max(0,Math.ceil(ce/P)),be=Math.min(tt,(M+ce)/P);let fe=0;for(let Be=ee;Be<ne;++Be){const _s=Be*Q-Mt;for(let jn=se;jn<be;++jn){const Ka=jn*P-ce,Ve=ut*wt+mt*Be+bt*jn,ua=$*(F-1-_s)+T*(M-1-Ka)+I*Tt;for(let ca=0;ca<W;++ca){const ha=S[Ve+Ct*ca],ws=C[ua+ca];fe+=ha*ws}}}const vs=B*wt+j*It+lt*ye+ot*Tt;w[vs]=fe}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const e8={kernelName:Op,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s;Rt([a,r],"conv3d");const h=Ni(a.shape,r.shape,i,u,l),{filterDepth:f,filterHeight:p,filterWidth:m,dilationDepth:y,dilationHeight:b,dilationWidth:v,padInfo:w}=h,S=w.front,C=w.left,$=w.top,T=new an(h.outShape,a.dtype),I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,F=T.values,M=Ft(a.shape),D=Ft(r.shape);for(let O=0;O<h.batchSize;++O){const A=O*M[0],W=O*T.strides[0];for(let K=0;K<h.outDepth;++K){const tt=W+K*T.strides[1],Q=K*h.strideDepth-S;for(let P=0;P<f;++P){const et=Q+P*y;if(et<0||et>=h.inDepth)continue;const Y=P*D[0],rt=A+et*M[1];for(let B=0;B<h.outHeight;++B){const j=tt+B*T.strides[2],lt=B*h.strideHeight-$;for(let ot=0;ot<p;++ot){const ut=lt+ot*b;if(ut<0||ut>=h.inHeight)continue;const mt=Y+ot*D[1],bt=rt+ut*M[2];for(let Ct=0;Ct<h.outWidth;++Ct){const wt=j+Ct*h.outChannels,Tt=Ct*h.strideWidth-C;for(let It=0;It<m;++It){const Mt=Tt+It*v;if(Mt<0||Mt>=h.inWidth)continue;const ee=mt+It*D[2],ne=bt+Mt*h.inChannels;let ye=ee;for(let ce=0;ce<h.inChannels;++ce){const se=I[ne+ce];for(let be=0;be<h.outChannels;++be)F[wt+be]+=se*R[ye+be];ye+=h.outChannels}}}}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const s8={kernelName:_p,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s;Rt([a,r],"conv3dBackpropFilterV2");const h=Ft(a.shape),f=Ft(r.shape),p=Ni(a.shape,u,i,1,l),m=p.strideDepth,y=p.strideHeight,b=p.strideWidth,v=p.filterDepth,w=p.filterHeight,S=p.filterWidth,C=new an(p.filterShape,"float32"),$=C.values,[T,I,R,F]=C.strides,M=e.data.get(r.dataId).values,[D,O,A,W]=f,K=e.data.get(a.dataId).values,[tt,Q,P,et]=h,Y=p.padInfo.front,rt=p.padInfo.left,B=p.padInfo.top;for(let j=0;j<v;++j){const lt=Math.max(0,Math.ceil((Y-j)/m)),ot=Math.min(p.outDepth,(p.inDepth+Y-j)/m),ut=j*T;for(let mt=0;mt<w;++mt){const bt=Math.max(0,Math.ceil((B-mt)/y)),Ct=Math.min(p.outHeight,(p.inHeight+B-mt)/y),wt=mt*I+ut;for(let Tt=0;Tt<S;++Tt){const It=Math.max(0,Math.ceil((rt-Tt)/b)),Mt=Math.min(p.outWidth,(p.inWidth+rt-Tt)/b),ee=Tt*R+wt;for(let ne=0;ne<p.inChannels;++ne){const ye=ne*F+ee;for(let ce=0;ce<p.outChannels;++ce){let se=0;for(let be=0;be<p.batchSize;++be){const fe=be*tt,vs=be*D;for(let Be=lt;Be<ot;++Be){const jn=(j+Be*m-Y)*Q+fe,Ka=Be*O+vs;for(let Ve=bt;Ve<Ct;++Ve){const ca=(mt+Ve*y-B)*P+jn,ha=Ve*A+Ka;for(let ws=It;ws<Mt;++ws){const Bo=(Tt+ws*b-rt)*et+ca,fu=ws*W+ha;se+=K[Bo+ne]*M[fu+ce]}}}}$[ye+ce]=se}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const r8={kernelName:rx,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s;Rt([a],"conv3dBackpropInputV2");const h=Ft(a.shape),f=Ft(r.shape),p=Ni(u,r.shape,l,1,i),m=new an(p.inShape,"float32"),y=m.values,[b,v,w,S]=m.strides,C=e.data.get(a.dataId).values,[$,T,I,R]=h,F=e.data.get(r.dataId).values,[M,D,O,A]=f,{batchSize:W,filterDepth:K,filterHeight:tt,filterWidth:Q,inChannels:P,inDepth:et,inHeight:Y,inWidth:rt,outChannels:B,outDepth:j,outHeight:lt,outWidth:ot,strideDepth:ut,strideHeight:mt,strideWidth:bt}=p,Ct=K-1-p.padInfo.front,wt=tt-1-p.padInfo.top,Tt=Q-1-p.padInfo.left;for(let It=0;It<W;++It)for(let Mt=0;Mt<P;++Mt)for(let ee=0;ee<et;++ee){const ne=ee-Ct,ye=Math.max(0,Math.ceil(ne/ut)),ce=Math.min(j,(K+ne)/ut);for(let se=0;se<Y;++se){const be=se-wt,fe=Math.max(0,Math.ceil(be/mt)),vs=Math.min(lt,(tt+be)/mt);for(let Be=0;Be<rt;++Be){const _s=Be-Tt,jn=Math.max(0,Math.ceil(_s/bt)),Ka=Math.min(ot,(Q+_s)/bt);let Ve=0;for(let ua=ye;ua<ce;++ua){const ca=ua*ut-ne;for(let ha=fe;ha<vs;++ha){const ws=ha*mt-be;for(let Ri=jn;Ri<Ka;++Ri){const Bo=Ri*bt-_s,fu=$*It+T*ua+I*ha+R*Ri,pg=M*(K-1-ca)+D*(tt-1-ws)+O*(Q-1-Bo)+A*Mt;for(let Ea=0;Ea<B;++Ea){const Xn=C[fu+Ea],mg=F[pg+Ea];Ve+=Xn*mg}}}}y[b*It+v*ee+w*se+S*Be+Mt]=Ve}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const o8={kernelName:ix,backendName:"cpu",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8=me(Kc,n=>Math.cos(n)),u8={kernelName:Kc,backendName:"cpu",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=me(Yc,n=>Math.cosh(n)),h8={kernelName:Yc,backendName:"cpu",kernelFunc:c8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d8(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,[f,p,m,y]=a.shape,b=r.shape[0],[v,w]=l,S=Ht([b,v,w,y],"float32"),C=e.data.get(r.dataId).values,$=e.data.get(i.dataId).values,T=e.data.get(a.dataId).values,I=Ft(a.shape),R=Ft(S.shape);for(let F=0;F<b;F++){const M=F*4,D=C[M],O=C[M+1],A=C[M+2],W=C[M+3],K=$[F];if(K>=f)continue;const tt=v>1?(A-D)*(p-1)/(v-1):0,Q=w>1?(W-O)*(m-1)/(w-1):0;for(let P=0;P<v;P++){const et=v>1?D*(p-1)+P*tt:.5*(D+A)*(p-1);if(et<0||et>p-1){for(let Y=0;Y<w;Y++)for(let rt=0;rt<y;rt++){const B=rt+Y*R[2]+P*R[1]+F*R[0];S.values[B]=h}continue}if(u==="bilinear"){const Y=Math.floor(et),rt=Math.ceil(et),B=et-Y;for(let j=0;j<w;j++){const lt=w>1?O*(m-1)+j*Q:.5*(O+W)*(m-1);if(lt<0||lt>m-1){for(let bt=0;bt<y;bt++){const Ct=bt+j*R[2]+P*R[1]+F*R[0];S.values[Ct]=h}continue}const ot=Math.floor(lt),ut=Math.ceil(lt),mt=lt-ot;for(let bt=0;bt<y;bt++){let Ct=bt+ot*I[2]+Y*I[1]+K*I[0];const wt=T[Ct];Ct=bt+ut*I[2]+Y*I[1]+K*I[0];const Tt=T[Ct];Ct=bt+ot*I[2]+rt*I[1]+K*I[0];const It=T[Ct];Ct=bt+ut*I[2]+rt*I[1]+K*I[0];const Mt=T[Ct],ee=wt+(Tt-wt)*mt,ne=It+(Mt-It)*mt;Ct=bt+j*R[2]+P*R[1]+F*R[0],S.values[Ct]=ee+(ne-ee)*B}}}else for(let Y=0;Y<w;++Y){const rt=w>1?O*(m-1)+Y*Q:.5*(O+W)*(m-1);if(rt<0||rt>m-1){for(let lt=0;lt<y;lt++){const ot=lt+Y*R[2]+P*R[1]+F*R[0];S.values[ot]=h}continue}const B=Math.round(rt),j=Math.round(et);for(let lt=0;lt<y;lt++){const ot=lt+B*I[2]+j*I[1]+K*I[0],ut=lt+Y*R[2]+P*R[1]+F*R[0];S.values[ut]=T[ot]}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const f8={kernelName:lx,backendName:"cpu",kernelFunc:d8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;Rt(a,"cumprod");const u=_e([r],a.shape.length);let h=a;u!=null&&(h=es({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=qe(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=ds(h.dtype,"int32"),m=K0(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,C)=>S+b-C-1:(S,C)=>S+C;for(let S=0;S<y.length;S+=b)for(let C=0;C<b;C++){const $=v(S,C);if(C===0)m[$]=i?1:y[$];else{const T=v(S,C-1);m[$]=i?y[T]*m[T]:y[$]*m[T]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Ci(u),C=es({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),C}return w}const m8={kernelName:ox,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;Rt(a,"cumsum");const u=_e([r],a.shape.length);let h=a;u!=null&&(h=es({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=qe(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=ds(h.dtype,"int32"),m=Fn(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,C)=>S+b-C-1:(S,C)=>S+C;for(let S=0;S<y.length;S+=b)for(let C=0;C<b;C++){const $=v(S,C);if(C===0)m[$]=i?0:y[$];else{const T=v(S,C-1);m[$]=i?y[T]+m[T]:y[$]+m[T]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Ci(u),C=es({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),C}return w}const y8={kernelName:Fp,backendName:"cpu",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=Pv(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=aR(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const x8={kernelName:ux,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s;_(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const l=a.shape[0],u=a.shape[1],h=a.shape[2],f=a.shape[3],p=u*r,m=h*r,y=f/(r*r),b=e.data.get(a.dataId).values,v=new Float32Array(l*p*m*y);let w=0;for(let S=0;S<l;++S)for(let C=0;C<p;++C){const $=Math.floor(C/r),T=C%r;for(let I=0;I<m;++I){const R=Math.floor(I/r),F=I%r,M=(T*r+F)*y;for(let D=0;D<y;++D){const A=D+M+f*(R+h*($+u*S));v[w++]=b[A]}}}return e.makeTensorInfo([l,p,m,y],a.dtype,v)}const w8={kernelName:cx,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;Rt([a,r],"depthwiseConv2DNative");const f=Ft(a.shape),p=Ft(r.shape);let m=u;m==null&&(m=[1,1]),_($n(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);const y=mn(a.shape,r.shape,i,m,l,h,!0),{filterHeight:b,filterWidth:v,dilationHeight:w,dilationWidth:S,padInfo:C}=y,$=C.left,T=C.top,I=y.outChannels/y.inChannels,R=new an(y.outShape,a.dtype),F=e.data.get(a.dataId).values,M=e.data.get(r.dataId).values,D=R.values;for(let O=0;O<y.batchSize;++O){const A=O*f[0],W=O*R.strides[0];for(let K=0;K<y.outHeight;++K){const tt=W+K*R.strides[1],Q=K*y.strideHeight-T;for(let P=0;P<b;++P){const et=Q+P*w;if(et<0||et>=y.inHeight)continue;const Y=P*p[0],rt=A+et*f[1];for(let B=0;B<y.outWidth;++B){const j=tt+B*R.strides[2],lt=B*y.strideWidth-$;for(let ot=0;ot<v;++ot){const ut=lt+ot*S;if(ut<0||ut>=y.inWidth)continue;const mt=Y+ot*p[1],bt=rt+ut*y.inChannels;let Ct=j,wt=mt;for(let Tt=0;Tt<y.inChannels;++Tt){const It=F[bt+Tt];for(let Mt=0;Mt<I;++Mt)D[Ct+Mt]+=It*M[wt+Mt];Ct+=I,wt+=I}}}}}}return e.makeTensorInfo(R.shape,R.dtype,R.values)}const S8={kernelName:Lp,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s;Rt([a,r],"depthwiseConv2dNativeBackpropFilter");const p=mn(a.shape,f,i,l,u,h,!0),{strideHeight:m,strideWidth:y,filterHeight:b,filterWidth:v}=p,w=new an(p.filterShape,"float32"),S=p.padInfo.left,C=p.padInfo.top,$=p.outChannels/p.inChannels,T=e.data.get(a.dataId).values,I=new an(a.shape,a.dtype,T),R=e.data.get(r.dataId).values,F=new an(r.shape,r.dtype,R);for(let M=0;M<b;++M){const D=Math.max(0,Math.ceil((C-M)/m)),O=Math.min(p.outHeight,(p.inHeight+C-M)/m);for(let A=0;A<v;++A){const W=Math.max(0,Math.ceil((S-A)/y)),K=Math.min(p.outWidth,(p.inWidth+S-A)/y);for(let tt=0;tt<p.outChannels;++tt){const Q=Math.trunc(tt/$),P=tt%$;let et=0;for(let Y=0;Y<p.batchSize;++Y)for(let rt=D;rt<O;++rt){const B=M+rt*m-C;for(let j=W;j<K;++j){const lt=A+j*y-S;et+=I.get(Y,B,lt,Q)*F.get(Y,rt,j,tt)}}w.set(et,M,A,Q,P)}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const C8={kernelName:hx,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s;Rt([a,r],"depthwiseConv2DNativeBackpropInput");const p=Ft(a.shape),m=Ft(r.shape),y=mn(f,r.shape,i,l,u,h,!0),b=new an(y.inShape,"float32"),v=b.values,[w,S,C]=b.strides,$=e.data.get(a.dataId).values,[T,I,R]=p,F=e.data.get(r.dataId).values,[M,D,O]=m,{batchSize:A,filterHeight:W,filterWidth:K,inChannels:tt,inHeight:Q,inWidth:P,outChannels:et,outHeight:Y,outWidth:rt,strideHeight:B,strideWidth:j}=y,lt=W-1-y.padInfo.top,ot=K-1-y.padInfo.left,ut=et/tt;for(let mt=0;mt<A;++mt)for(let bt=0;bt<tt;++bt)for(let Ct=0;Ct<Q;++Ct){const wt=Ct-lt,Tt=Math.max(0,Math.ceil(wt/B)),It=Math.min(Y,(W+wt)/B);for(let Mt=0;Mt<P;++Mt){const ee=Mt-ot,ne=Math.max(0,Math.ceil(ee/j)),ye=Math.min(rt,(K+ee)/j);let ce=0;for(let se=Tt;se<It;++se){const be=se*B-wt;for(let fe=ne;fe<ye;++fe){const vs=fe*j-ee,Be=T*mt+I*se+R*fe,_s=M*(W-1-be)+D*(K-1-vs)+O*bt;for(let jn=0;jn<ut;++jn){const Ka=bt*ut+jn,Ve=$[Be+Ka],ua=F[_s+jn];ce+=Ve*ua}}}v[w*mt+S*Ct+C*Mt+bt]=ce}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const $8={kernelName:dx,backendName:"cpu",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n){const{inputs:t,backend:e}=n,{x:s}=t,a=ht(s.shape),r=e.data.get(s.dataId).values,i=Ht([a,a],s.dtype),l=i.values;for(let h=0;h<r.length;h++)l[h*a+h]=r[h];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,i.dtype,i.values)}const I8={kernelName:fx,backendName:"cpu",kernelFunc:k8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8={kernelName:zp,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a}=n,{strides:r,pad:i,dilations:l}=e,u=t,h=u.data.get(s.dataId).values,f=s.shape.length,p=u.data.get(a.dataId).values,m=a.shape.length,{batchSize:y,inHeight:b,inWidth:v,inChannels:w,outHeight:S,outWidth:C,padInfo:$,strideHeight:T,strideWidth:I,filterHeight:R,filterWidth:F,dilationHeight:M,dilationWidth:D,outShape:O}=Fh(s.shape,a.shape,r,i,"NHWC",l),A=ht(O),W=O.length,K=Ge(s.dtype,A);for(let Q=0;Q<y;++Q)for(let P=0;P<S;++P){const et=P*T-$.top;for(let Y=0;Y<C;++Y){const rt=Y*I-$.left;for(let B=0;B<w;++B){let j=Number.MIN_SAFE_INTEGER;for(let ot=0;ot<R;++ot){const ut=et+ot*M;if(ut>=0&&ut<b)for(let mt=0;mt<F;++mt){const bt=rt+mt*D;if(bt>=0&&bt<v){const Ct=Va([Q,ut,bt,B],f,Ft(s.shape)),wt=Va([ot,mt,B],m,Ft(a.shape)),Tt=h[Ct]+p[wt];Tt>j&&(j=Tt)}}}const lt=Va([Q,P,Y,B],W,Ft(O));K[lt]=j}}}return{dataId:u.write(Eo(K,s.dtype),O,s.dtype),shape:O,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8={kernelName:t0,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=ea(s.shape,h.data.get(s.dataId).values),p=ea(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:C,strideHeight:$,strideWidth:T,filterHeight:I,filterWidth:R,dilationHeight:F,dilationWidth:M,outShape:D}=Fh(s.shape,a.shape,i,l,"NHWC",u);_(r.rank===D.length,()=>`Error in ${t0}, dy must have the same rank as output ${D.length}, but got ${r.rank}`);const O=ea(D,h.data.get(r.dataId).values),A=e$(a.shape,a.dtype);for(let K=0;K<m;++K)for(let tt=0;tt<w;++tt){const Q=tt*$-C.top;for(let P=0;P<S;++P){const et=P*T-C.left;for(let Y=0;Y<v;++Y){let rt=Number.MIN_SAFE_INTEGER,B=0,j=0;for(let lt=0;lt<I;++lt){const ot=Q+lt*F;if(ot>=0&&ot<y)for(let ut=0;ut<R;++ut){const mt=et+ut*M;if(mt>=0&&mt<b){const bt=f[K][ot][mt][Y]+p[lt][ut][Y];bt>rt&&(rt=bt,B=lt,j=ut)}}}A[B][j][Y]+=O[K][tt][P][Y]}}}return{dataId:h.write(Eo(A,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8={kernelName:Jb,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=ea(s.shape,h.data.get(s.dataId).values),p=ea(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:C,strideHeight:$,strideWidth:T,filterHeight:I,filterWidth:R,dilationHeight:F,dilationWidth:M,outShape:D}=Fh(s.shape,a.shape,i,l,"NHWC",u);_(r.rank===D.length,()=>`Error in ${Jb}, dy must have the same rank as output ${D.length}, but got ${r.rank}`);const O=ea(D,h.data.get(r.dataId).values),A=e$(s.shape,s.dtype);for(let K=0;K<m;++K)for(let tt=0;tt<w;++tt){const Q=tt*$-C.top;for(let P=0;P<S;++P){const et=P*T-C.left;for(let Y=0;Y<v;++Y){let rt=Number.MIN_SAFE_INTEGER,B=Q<0?0:Q,j=et<0?0:et;for(let lt=0;lt<I;++lt){const ot=Q+lt*F;if(ot>=0&&ot<y)for(let ut=0;ut<R;++ut){const mt=et+ut*M;if(mt>=0&&mt<b){const bt=f[K][ot][mt][Y]+p[lt][ut][Y];bt>rt&&(rt=bt,B=ot,j=mt)}}}A[K][B][j][Y]+=O[K][tt][P][Y]}}}return{dataId:h.write(Eo(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:t,backend:e,attrs:s}=n,{image:a}=t,{canvas:r,options:i}=s,{contextOptions:l,imageOptions:u}=i||{},h=(u==null?void 0:u.alpha)||1,f=(l==null?void 0:l.contextType)||"2d";if(f!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const p=r.getContext(f,(l==null?void 0:l.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${f} type.`);const[m,y]=a.shape.slice(0,2),b=a.shape.length===2?1:a.shape[2],v=e.data.get(a.dataId).values,w=a.dtype==="float32"?255:1,S=new Uint8ClampedArray(y*m*4);for(let $=0;$<m*y;++$){const T=[0,0,0,255*h];for(let R=0;R<b;R++){const F=v[$*b+R];if(a.dtype==="float32"){if(F<0||F>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${F}.`)}else if(a.dtype==="int32"&&(F<0||F>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${F}.`);b===1?(T[0]=F*w,T[1]=F*w,T[2]=F*w):T[R]=F*w}const I=$*4;S[I+0]=Math.round(T[0]),S[I+1]=Math.round(T[1]),S[I+2]=Math.round(T[2]),S[I+3]=Math.round(T[3])}r.width=y,r.height=m;const C=new ImageData(S,y,m);return p.putImageData(C,0,0),a}const O8={kernelName:qF,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jh(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"sum");let l;a.dtype==="bool"?l=gi({inputs:{x:a},backend:e,attrs:{dtype:"int32"}}):l=qa({inputs:{x:a},backend:e});const u=l.shape.length,h=Xt(r,l.shape),f=_e(h,u);let p=h,m=l;f!=null&&(m=es({inputs:{x:l},backend:e,attrs:{perm:f}}),p=qe(p.length,u)),kn("sum",p,m.shape.length);const[y,b]=gn(m.shape,p),v=ds(m.dtype,"int32");let w=cp(e,y,v);const S=ht(b),C=e.data.get(w.dataId).values,$=e.data.get(m.dataId).values;for(let T=0;T<C.length;++T){const I=T*S;let R=0;for(let F=0;F<S;++F)R+=$[I+F];C[T]=R}if(i){const T=He(w.shape,h),I=w;w=Te({inputs:{x:w},backend:e,attrs:{shape:T}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(l),f!=null&&e.disposeIntermediateTensorInfo(m),w}const _8={kernelName:gm,backendName:"cpu",kernelFunc:Jh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=cv(a,r.length);dv(i.length,u,r);const{path:h,steps:f}=fv(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of f[v]){const{permutationIndices:S,expandDims:C}=hv(y,u[w]);let $;pv(S)?$=r[w]:($=es({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const T=$.shape.slice();for(let I=0;I<C.length;++I)T.splice(C[I],0,1);te($.shape,T)||($=Te({inputs:{x:$},backend:e,attrs:{shape:T}}),b.push($)),m===null?m=$:(m=lg({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=Jh({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const L8={kernelName:px,backendName:"cpu",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(n){const{inputs:t,backend:e}=n,{dy:s,y:a}=t;Rt([s,a],"eluGrad");const r=new Float32Array(ht(a.shape)),i=e.data.get(a.dataId).values,l=e.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const h=i[u];h>=0?r[u]=l[u]:r[u]=l[u]*(h+1)}return e.makeTensorInfo(a.shape,"float32",r)}const M8={kernelName:mx,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8=sv,V8=av,P8=rv,U8=iv,W8=ov,G8=lv,H8=me(Jc,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+B8*e);return t*(1-((((G8*s+W8)*s+U8)*s+P8)*s+V8)*s*Math.exp(-e*e))}),q8={kernelName:Jc,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(n){const{inputs:t,backend:e,attrs:s}=n,{input:a}=t,{dim:r}=s,i=a.shape.length,l=a.shape.slice();let u=r;return r<0&&(_(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),l.splice(u,0,1),Te({inputs:{x:a},backend:e,attrs:{shape:l}})}const j8={kernelName:Bp,backendName:"cpu",kernelFunc:fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=Xe((n,t)=>n/t),jv=un(Zc,X8),P0={kernelName:Zc,backendName:"cpu",kernelFunc:jv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,t,e){const s=n.shape,a=s[0],r=s[1],i=e.data.get(n.dataId),l=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,h=[a,r],f=ht(h),p=Cn("float32",f),m=Cn("float32",f);for(let w=0;w<a;w++){const S=ko({inputs:{x:l},backend:e,attrs:{begin:[w,0],size:[1,r]}}),C=ko({inputs:{x:u},backend:e,attrs:{begin:[w,0],size:[1,r]}}),$=ls({inputs:{real:S,imag:C},backend:e}),{real:T,imag:I}=K8($,t,e),R=Nr(T,I);for(let F=0;F<r;F++){const M=uv(R,F);p[w*r+F]=M.real,m[w*r+F]=M.imag}e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo($)}const y=e.makeTensorInfo(h,"float32",p),b=e.makeTensorInfo(h,"float32",m),v=ls({inputs:{real:y,imag:b},backend:e});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),v}function K8(n,t,e){const s=ht(n.shape),a=e.data.get(n.dataId),r=e.data.get(a.complexTensorInfos.real.dataId).values,i=e.data.get(a.complexTensorInfos.imag.dataId).values;if(Y8(s)){const l=U0(r,i,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const h=e.makeTensorInfo(u,"float32",l.real),f=e.makeTensorInfo(u,"float32",l.imag),p=e.makeTensorInfo([],"float32",vi(s,"float32")),m=qa({inputs:{x:p},backend:e}),y=P0.kernelFunc({inputs:{a:h,b:p},backend:e}),b=P0.kernelFunc({inputs:{a:f,b:m},backend:e}),v=e.data.get(y.dataId).values,w=e.data.get(b.dataId).values;return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),{real:v,imag:w}}return l}else{const l=Nr(r,i),u=Z8(l,s,t);return pI(u)}}function Y8(n){return(n&n-1)===0}function U0(n,t,e,s,a){if(e===1)return{real:n,imag:t};const r=Nr(n,t),i=e/2,l=mI(r),u=l.real,h=l.imag,f=[u.length],p=a.makeTensorInfo(f,"float32",u),m=a.makeTensorInfo(f,"float32",h),y=ls({inputs:{real:p,imag:m},backend:a}),b=gI(r),v=b.real,w=b.imag,S=[v.length],C=a.makeTensorInfo(S,"float32",v),$=a.makeTensorInfo(S,"float32",w),T=ls({inputs:{real:C,imag:$},backend:a}),I=U0(u,h,i,s,a),R=I.real,F=I.imag,M=[R.length],D=a.makeTensorInfo(M,"float32",R),O=a.makeTensorInfo(M,"float32",F),A=ls({inputs:{real:D,imag:O},backend:a}),W=U0(v,w,i,s,a),K=W.real,tt=W.imag,Q=[K.length],P=a.makeTensorInfo(Q,"float32",K),et=a.makeTensorInfo(Q,"float32",tt),Y=ls({inputs:{real:P,imag:et},backend:a}),rt=bI(e,s),B=[rt.real.length],j=a.makeTensorInfo(B,"float32",rt.real),lt=a.makeTensorInfo(B,"float32",rt.imag),ot=ls({inputs:{real:j,imag:lt},backend:a}),ut=lg({inputs:{a:ot,b:Y},backend:a}),mt=Gl({inputs:{a:A,b:ut},backend:a}),bt=Hv({inputs:{a:A,b:ut},backend:a}),Ct=$o({inputs:{input:mt},backend:a}),wt=$o({inputs:{input:bt},backend:a}),Tt=Hl({inputs:{input:mt},backend:a}),It=Hl({inputs:{input:bt},backend:a}),Mt=ql({inputs:[Ct,wt],backend:a,attrs:{axis:0}}),ee=ql({inputs:[Tt,It],backend:a,attrs:{axis:0}}),ne=a.data.get(Mt.dataId).values,ye=a.data.get(ee.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(et),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(lt),a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(ut),a.disposeIntermediateTensorInfo(mt),a.disposeIntermediateTensorInfo(bt),a.disposeIntermediateTensorInfo(Ct),a.disposeIntermediateTensorInfo(Tt),a.disposeIntermediateTensorInfo(wt),a.disposeIntermediateTensorInfo(It),a.disposeIntermediateTensorInfo(Mt),a.disposeIntermediateTensorInfo(ee),{real:ne,imag:ye}}function Z8(n,t,e){const s=new Float32Array(t*2);for(let a=0;a<t;a++){let r=0,i=0;for(let l=0;l<t;l++){const u=xI(a*l,t,e),h=uv(n,l);r+=h.real*u.real-h.imag*u.imag,i+=h.real*u.imag+h.imag*u.real}e&&(r/=t,i/=t),yI(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=rD(l,!1,e),h=Te({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const J8={kernelName:gx,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n){const{backend:t,attrs:e}=n,{shape:s,value:a,dtype:r}=e,i=r||Yl(a),l=Ge(i,ht(s));return eX(l,a,i),t.makeTensorInfo(s,i,l)}const tX={kernelName:yx,backendName:"cpu",kernelFunc:Xv};function eX(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX={kernelName:bx,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,a=e,r=Cn(s.dtype,ht(s.shape)),[i,l,u,h]=s.shape,f=a.data.get(s.dataId).values;for(let m=0;m<i;m++){const y=m*u*l*h;for(let b=0;b<l;b++){const v=b*(u*h);for(let w=0;w<u;w++){const S=w*h;for(let C=0;C<h;C++){const $=Math.round(u-w-1),T=y+v+S+C;let I=f[T];if($>=0&&$<u){const R=$*h,F=y+v+R+C;I=f[F]}r[T]=I}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=sD({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const w=v;if(f==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const S=Te({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});v=Gl({inputs:{a:v,b:S},backend:e}),e.disposeIntermediateTensorInfo(S)}else v=Gl({inputs:{a:v,b:i},backend:e});e.disposeIntermediateTensorInfo(w)}if(y){const w=v;if(f==="NCHW"&&y==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const S=Te({inputs:{x:l},backend:e,attrs:{shape:[l.shape[0],1,1]}});v=dp(e,v,y,S,b),e.disposeIntermediateTensorInfo(S)}else v=dp(e,v,y,l,b);e.disposeIntermediateTensorInfo(w)}return v}const aX={kernelName:qf,backendName:"cpu",kernelFunc:sX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=aD({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const w=v;v=Gl({inputs:{a:v,b:i},backend:e}),e.disposeIntermediateTensorInfo(w)}if(y){const w=v;v=dp(e,v,y,l,b),e.disposeIntermediateTensorInfo(w)}return v}const iX={kernelName:jf,backendName:"cpu",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=ht(s.shape),i=a.shape,l=i[i.length-1],[u,h,f,p]=q1(s,a);if(h===0)return e.makeTensorInfo(u,s.dtype,[]);const m=e.data.get(a.dataId).values,y=e.bufferSync(s),b=mR(m,y,s.dtype,h,l,f,p,s.shape,r);return e.makeTensorInfo(u,s.dtype,b.values)}const lX={kernelName:xx,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s;Rt([a,r],"gatherV2");const u=Xt(i,a.shape)[0],h=e.data.get(r.dataId).values,f=a.shape[u];for(let T=0;T<h.length;++T){const I=h[T];_(I<=f-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${f-1}]`)}let p=l;l==null&&(p=0);const m=ht(r.shape),y=gv(a,r,u,p),b=Te({inputs:{x:a},backend:e,attrs:{shape:[y.batchSize,y.outerSize,y.dimSize,y.sliceSize]}}),v=Te({inputs:{x:r},backend:e,attrs:{shape:[y.batchSize,m/y.batchSize]}}),w=[y.batchSize,y.outerSize,m/y.batchSize,y.sliceSize],S=e.bufferSync(v),C=e.bufferSync(b),$=gR(C,S,w);return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.makeTensorInfo(y.outputShape,$.dtype,$.values)}const cX={kernelName:Pp,backendName:"cpu",kernelFunc:uX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=rD(l,!0,e),h=Te({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const dX={kernelName:vx,backendName:"cpu",kernelFunc:hX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=me(ih,n=>Number.isFinite(n)?1:0,"bool"),pX={kernelName:ih,backendName:"cpu",kernelFunc:fX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=me(oh,n=>Math.abs(n)===1/0?1:0,"bool"),gX={kernelName:oh,backendName:"cpu",kernelFunc:mX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=me(lh,n=>Number.isNaN(n)?1:0,"bool"),bX={kernelName:lh,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=wR(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const vX={kernelName:Sx,backendName:"cpu",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX=me(ch,n=>Math.log1p(n)),SX={kernelName:ch,backendName:"cpu",kernelFunc:wX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX=Xe((n,t)=>n&&t),CX=un(qp,NX,null,"bool"),TX={kernelName:qp,backendName:"cpu",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X=me(jp,n=>n?0:1,"bool"),kX={kernelName:jp,backendName:"cpu",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=Xe((n,t)=>n||t),EX=un(Xp,IX,null,"bool"),AX={kernelName:Xp,backendName:"cpu",kernelFunc:EX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s;Rt(a,"LRN");const h=a.shape[3],f=h-1,p=e.data.get(a.dataId).values,m=ht(a.shape),y=new Float32Array(m);function b(v){const w=v%h;let S=v-w+Math.max(0,w-r);const C=v-w+Math.min(w+r,f);let $=0;for(;S<=C;S++){const T=p[S];$+=T*T}return $}for(let v=0;v<m;v++){const w=b(v),S=p[v]*Math.pow(i+l*w,-u);y[v]=S}return e.makeTensorInfo(a.shape,a.dtype,y)}const DX={kernelName:Kp,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s;Rt(i,"LRNGrad");const p=ht(i.shape),m=i.shape[3],y=e.data.get(i.dataId).values,b=e.data.get(a.dataId).values,v=e.data.get(r.dataId).values,w=new Float32Array(p),S=p;for(let C=0;C<S;C++){const $=C%m,T=C-$+Math.max(0,$-l),I=C-$+Math.min(m,$+l+1);let R=0;for(let F=T;F<I;F++)R+=Math.pow(b[F],2);R=h*R+u;for(let F=T;F<I;F++){let M=-2*h*f*b[F]*v[C]/R;C===F&&(M+=Math.pow(R,-f)),M*=y[C],w[F]+=M}}return e.makeTensorInfo(i.shape,a.dtype,w)}const _X={kernelName:Nx,backendName:"cpu",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=e;let u=a.shape;const h=u.length,f=Xt(r,u);let p=f;const m=_e(p,h);let y=l.data.get(a.dataId).values;if(m!=null){const T=new Array(h);for(let I=0;I<T.length;I++)T[I]=u[m[I]];y=Wv(y,u,a.dtype,m,T),p=qe(p.length,h),u=T}Rt(a,"max"),kn("max",p,h);const[b,v]=gn(u,p),w=ht(v),S=NR(y,w,b,a.dtype),C=l.write(S,b,a.dtype);let $=b;return i&&($=He(b,f)),{dataId:C,shape:$,dtype:a.dtype}}const FX={kernelName:Yp,backendName:"cpu",kernelFunc:iD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rt(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;_($n(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ia(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&te(f.inShape,f.outShape))p=qa({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ft(a.shape),b=qv(m,a.shape,a.dtype,y,f,"max");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const zX={kernelName:Zp,backendName:"cpu",kernelFunc:LX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;Rt(a,"maxPool3d");const f=Tr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=nD(p,a.shape,a.dtype,Ft(a.shape),f,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}const BX={kernelName:Qp,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;Rt([a,r],"maxPool3DGrad");const f=Tr(r.shape,i,l,1,u,h),p=e.bufferSync(r),m=I5(p,f),y=f.strideDepth,b=f.strideHeight,v=f.strideWidth,w=f.dilationDepth,S=f.dilationHeight,C=f.dilationWidth,$=f.effectiveFilterDepth,T=f.effectiveFilterHeight,I=f.effectiveFilterWidth,R=$-1-f.padInfo.front,F=I-1-f.padInfo.left,M=T-1-f.padInfo.top,D=Ht(r.shape,"float32"),O=e.bufferSync(a);for(let A=0;A<f.batchSize;++A)for(let W=0;W<f.inChannels;++W)for(let K=0;K<f.inDepth;++K)for(let tt=0;tt<f.inHeight;++tt)for(let Q=0;Q<f.inWidth;++Q){const P=K-R,et=tt-M,Y=Q-F;let rt=0;for(let B=0;B<$;B+=w){const j=(P+B)/y;if(!(j<0||j>=f.outDepth||Math.floor(j)!==j))for(let lt=0;lt<T;lt+=S){const ot=(et+lt)/b;if(!(ot<0||ot>=f.outHeight||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=C){const mt=(Y+ut)/v;if(mt<0||mt>=f.outWidth||Math.floor(mt)!==mt)continue;const bt=$*T*I-1-m.get(A,j,ot,mt,W),Ct=B*T*I+lt*I+ut,wt=bt===Ct?1:0;if(wt===0)continue;const Tt=O.get(A,j,ot,mt,W);rt+=Tt*wt}}}D.set(rt,A,K,tt,Q,W)}return e.makeTensorInfo(D.shape,D.dtype,D.values)}const PX={kernelName:Tx,backendName:"cpu",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;Rt([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=ia(l.shape,u,h,1,f,p),y=e.data.get(l.dataId).values,b=Ht(m.outShape,l.dtype,eD(y,l.shape,l.dtype,m).values),v=m.strideHeight,w=m.strideWidth,S=m.dilationHeight,C=m.dilationWidth,$=m.effectiveFilterHeight,T=m.effectiveFilterWidth,I=T-1-m.padInfo.left,R=$-1-m.padInfo.top,F=Ht(l.shape,"float32"),M=e.data.get(a.dataId).values,D=Ht(a.shape,"float32",M);for(let O=0;O<m.batchSize;++O)for(let A=0;A<m.inChannels;++A)for(let W=0;W<m.inHeight;++W)for(let K=0;K<m.inWidth;++K){const tt=W-R,Q=K-I;let P=0;for(let et=0;et<$;et+=S){const Y=(tt+et)/v;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let rt=0;rt<T;rt+=C){const B=(Q+rt)/w;if(B<0||B>=m.outWidth||Math.floor(B)!==B)continue;const j=$*T-1-b.get(O,Y,B,A),lt=et*T+rt,ot=j===lt?1:0;if(ot===0)continue;const ut=D.get(O,Y,B,A);P+=ut*ot}}F.set(P,O,W,K,A)}return e.makeTensorInfo(F.shape,F.dtype,F.values)}const WX={kernelName:Cx,backendName:"cpu",kernelFunc:UX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n,t,e,s,a){const r=Ft(t),i=qv(n,t,e,r,a,"max"),l=eD(n,t,e,a,!0,s);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX={kernelName:$x,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;Rt(s,"MaxPoolWithArgmax");const h=u.data.get(s.dataId).values,f=ia(s.shape,a,r,[1,1],i),[p,m]=GX(h,s.shape,s.dtype,l,f),y=u.write(p,f.outShape,s.dtype),b=u.write(m,f.outShape,s.dtype);return[{dataId:y,shape:f.outShape,dtype:s.dtype},{dataId:b,shape:f.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=Xt(r,a.shape),h=gn(a.shape,l)[1],f=ht(h),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([f]));p.push(m);const y=gi({inputs:{x:a},backend:e,attrs:{dtype:"float32"}});p.push(y);const b=jv({inputs:{a:y,b:m},backend:e});p.push(b);const v=Jh({inputs:{x:b},backend:e,attrs:{axis:r,keepDims:i}});return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),v}const jX={kernelName:Jp,backendName:"cpu",kernelFunc:qX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"min");const l=Xt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=es({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),kn("min",u,f.shape.length);const[p,m]=gn(f.shape,u),y=ht(m),b=Fn(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=v[C];for(let T=0;T<y;++T){const I=v[C+T];(Number.isNaN(I)||I<$)&&($=I)}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=He(p,l),C=Te({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),C}return w}const KX={kernelName:tm,backendName:"cpu",kernelFunc:XX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,mode:i}=s;Rt(a,"mirrorPad");const l=r.map(($,T)=>$[0]+a.shape[T]+$[1]),u=r.map($=>$[0]),h=r.map(($,T)=>$[0]+a.shape[T]),f=i==="reflect"?0:1,p=e.data.get(a.dataId).values,m=a.shape.length,y=Ft(a.shape),b=ht(l),v=l.length,w=Ft(l),S=Cn(a.dtype,b);for(let $=0;$<b;$++){let T=Zl($,v,w);for(let R=0;R<v;R++)T[R]<u[R]?T[R]=u[R]*2-T[R]-f:T[R]>=h[R]&&(T[R]=(h[R]-1)*2-T[R]+f);T=T.map((R,F)=>R-u[F]);const I=Va(T,m,y);S[$]=p[I]}return{dataId:e.write(S,l,a.dtype),shape:l,dtype:a.dtype}}const ZX={kernelName:em,backendName:"cpu",kernelFunc:YX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=Xe((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),JX=un(fh,QX),tK={kernelName:fh,backendName:"cpu",kernelFunc:JX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=a.shape.length;let l=r;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const u=Xt([l],a.shape),h=iD({inputs:{x:a},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),f=He(h.shape,u),p=Te({inputs:{x:h},backend:e,attrs:{shape:f}}),m=Hv({inputs:{a,b:p},backend:e}),y=hR({inputs:{x:m},backend:e}),b=Jh({inputs:{x:y},backend:e,attrs:{axis:u,keepDims:!1}}),v=Te({inputs:{x:b},backend:e,attrs:{shape:f}}),w=jv({inputs:{a:y,b:v},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const eK={kernelName:xm,backendName:"cpu",kernelFunc:oD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s;Rt(a,"multinomial");const u=l?a:oD({inputs:{logits:a},backend:e,attrs:{dim:-1}}),h=u.shape[0],f=u.shape[1],p=e.data.get(u.dataId).values,m=[h,r],y=Fn(ht(m),"int32");for(let b=0;b<h;++b){const v=b*f,w=new Float32Array(f-1);w[0]=p[v];for(let $=1;$<w.length;++$)w[$]=w[$-1]+p[v+$];const S=zm.alea(i.toString()),C=b*r;for(let $=0;$<r;++$){const T=S();y[C+$]=w.length;for(let I=0;I<w.length;I++)if(T<w[I]){y[C+$]=I;break}}}return l||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(m,"int32",y)}const sK={kernelName:kx,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK=B1;function rK(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s;Rt(a,"NonMaxSuppression");const h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,{selectedIndices:p}=aK(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const iK={kernelName:Ix,backendName:"cpu",kernelFunc:rK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK=V1;function lK(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s;Rt(a,"NonMaxSuppressionPadded");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,{selectedIndices:m,validOutputs:y}=oK(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const uK={kernelName:Ex,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=P1;function hK(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s;Rt(a,"NonMaxSuppressionWithScore");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=cK(f,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const dK={kernelName:Ax,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s;Rt(a,"oneHot");const h=ht(a.shape),f=new Float32Array(h*i);f.fill(u);const p=e.data.get(a.dataId).values;for(let m=0;m<h;++m)p[m]>=0&&p[m]<i&&(f[m*i+p[m]]=l);return e.makeTensorInfo([...a.shape,i],r,f)}const pK={kernelName:rm,backendName:"cpu",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=$o({inputs:{input:s},backend:e}),r=pp({inputs:{x:a},backend:e}),i=Hl({inputs:{input:s},backend:e}),l=pp({inputs:{x:i},backend:e}),u=ls({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Xv({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const mK={kernelName:Nm,backendName:"cpu",kernelFunc:pp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=$o({inputs:{input:s},backend:e}),r=lD({inputs:{x:a},backend:e}),i=Hl({inputs:{input:s},backend:e}),l=pp({inputs:{x:i},backend:e}),u=ls({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Xv({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const gK={kernelName:am,backendName:"cpu",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return fp({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{bs(r,f.shape,"All tensors passed to stack must have matching shapes"),_(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=fp({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=ql({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const yK={kernelName:im,backendName:"cpu",kernelFunc:uD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;Rt(a,"pad");const l=r.map((C,$)=>C[0]+a.shape[$]+C[1]),u=r.map(C=>C[0]),h=e.data.get(a.dataId).values,f=ht(a.shape),p=a.shape.length,m=Ft(a.shape),y=ht(l),b=l.length,v=Ft(l),w=Cn(a.dtype,y);i!==0&&w.fill(i);for(let C=0;C<f;C++){const T=Zl(C,p,m).map((R,F)=>R+u[F]),I=Va(T,b,v);w[I]=h[C]}return{dataId:e.write(w,l,a.dtype),shape:l,dtype:a.dtype}}const cD={kernelName:om,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK=Xe((n,t)=>Math.pow(n,t)),vK=un(mh,xK),wK={kernelName:mh,backendName:"cpu",kernelFunc:vK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.data.get(S.dataId).values),h=a.map(S=>S.shape),f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,[m,y,b]=ER(u,h,f,r.shape,r.dtype,p,i.shape),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const NK={kernelName:Rx,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CK(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=AR(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const TK={kernelName:Dx,backendName:"cpu",kernelFunc:CK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,m=l.map(w=>e.data.get(w.dataId).values),y=l.map(w=>w.shape),[b,v]=RR(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const kK={kernelName:Ox,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n){const{backend:t,attrs:e}=n,{start:s,stop:a,dtype:r,step:i}=e,l=DR(s,a,i,r);return t.makeTensorInfo([l.length],r,l)}const EK={kernelName:_x,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=me(gh,n=>1/n),RK={kernelName:gh,backendName:"cpu",kernelFunc:AK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;Rt(a,"resizeBilinear");const u=Ft(a.shape),[h,f]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(ht([p,h,f,b])),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],C=[r&&h>1?h-1:h,r&&f>1?f-1:f];let $=0;const T=S[0]/C[0],I=S[1]/C[1];for(let R=0;R<p;R++)for(let F=0;F<h;F++){let M;i?M=T*(F+.5)-.5:M=T*F;const D=Math.max(0,Math.floor(M)),O=M-D,A=Math.min(m-1,Math.ceil(M)),W=R*u[0]+D*u[1],K=R*u[0]+A*u[1];for(let tt=0;tt<f;tt++){let Q;i?Q=I*(tt+.5)-.5:Q=I*tt;const P=Math.max(0,Math.floor(Q)),et=Q-P,Y=Math.min(y-1,Math.ceil(Q)),rt=W+P*u[2],B=K+P*u[2],j=W+Y*u[2],lt=K+Y*u[2];for(let ot=0;ot<b;ot++){const ut=v[rt+ot],mt=v[B+ot],bt=v[j+ot],Ct=v[lt+ot],wt=ut+(bt-ut)*et,Tt=mt+(Ct-mt)*et,It=wt+(Tt-wt)*O;w[$++]=It}}}return e.makeTensorInfo([p,h,f,b],"float32",w)}const OK={kernelName:dm,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;Rt([r,a],"resizeBilinearGrad");const l=Ft(a.shape),[u,h,f,p]=a.shape,[,m,y]=r.shape,b=new Float32Array(u*h*f*p),v=[i&&m>1?h-1:h,i&&y>1?f-1:f],w=[i&&m>1?m-1:m,i&&y>1?y-1:y],S=v[0]/w[0],C=v[1]/w[1],$=e.data.get(r.dataId).values;let T=0;for(let I=0;I<u;I++){const R=I*l[0];for(let F=0;F<m;F++){const M=F*S,D=Math.floor(M),O=Math.min(Math.ceil(M),h-1),A=R+D*l[1],W=R+O*l[1],K=M-D,tt=1-K;for(let Q=0;Q<y;Q++){const P=Q*C,et=Math.floor(P),Y=Math.min(Math.ceil(P),f-1),rt=P-et,B=1-rt,j=A+et*l[2],lt=A+Y*l[2],ot=W+et*l[2],ut=W+Y*l[2],mt=tt*B,bt=tt*rt,Ct=K*B,wt=K*rt;for(let Tt=0;Tt<p;Tt++){const It=$[T++];b[j+Tt]+=It*mt,b[lt+Tt]+=It*bt,b[ot+Tt]+=It*Ct,b[ut+Tt]+=It*wt}}}}return e.makeTensorInfo([u,f,h,p],"float32",b)}const FK={kernelName:zx,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;Rt(a,"resizeNearestNeighbor");const u=Ft(a.shape),[h,f]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(p*h*f*b),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],C=[r&&h>1?h-1:h,r&&f>1?f-1:f],$=S[0]/C[0],T=S[1]/C[1];let I=0;for(let R=0;R<p;R++){const F=R*u[0];for(let M=0;M<h;M++){const D=i?$*(M+.5):$*M;let O=Math.min(m-1,r?Math.round(D):Math.floor(D));i&&(O=Math.max(0,O));const A=F+O*u[1];for(let W=0;W<f;W++){const K=i?T*(W+.5):T*W;let tt=Math.min(y-1,r?Math.round(K):Math.floor(K));i&&(tt=Math.max(0,tt));const Q=A+tt*u[2];for(let P=0;P<b;P++){const et=v[Q+P];w[I++]=et}}}}return e.makeTensorInfo([p,h,f,b],a.dtype,w)}const zK={kernelName:hm,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;Rt([r,a],"resizeNearestNeighborGrad");const l=Ft(a.shape),u=Ft(r.shape),[h,f,p,m]=a.shape,[,y,b]=r.shape,v=new Float32Array(h*f*p*m),w=e.data.get(r.dataId).values,S=[i&&y>1?f-1:f,i&&b>1?p-1:p],C=[i&&y>1?y-1:y,i&&b>1?b-1:b],$=S[0]/C[0],T=S[1]/C[1],I=1/$,R=1/T,F=Math.ceil(I)*2+2,M=Math.ceil(R)*2+2;for(let D=0;D<h;D++){const O=D*l[0];for(let A=0;A<f;A++){const W=O+A*l[1],K=Math.floor(A*I),tt=Math.floor(K-F/2);for(let Q=0;Q<p;Q++){const P=W+Q*l[2],et=Math.floor(Q*R),Y=Math.floor(et-M/2);for(let rt=0;rt<m;rt++){let B=0;for(let j=0;j<F;j++){const lt=j+tt;if(lt<0||lt>=y)continue;const ot=O+lt*u[1],ut=lt*$,mt=Math.min(f-1,i?Math.round(ut):Math.floor(ut));if(A===mt)for(let bt=0;bt<M;bt++){const Ct=bt+Y;if(Ct<0||Ct>=b)continue;const wt=ot+Ct*u[2],Tt=Ct*T,It=Math.min(p-1,i?Math.round(Tt):Math.floor(Tt));Q===It&&(B+=w[wt+rt])}}v[P+rt]=B}}}}return e.makeTensorInfo(a.shape,a.dtype,v)}const BK={kernelName:Lx,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s;Rt(a,"reverse");const i=a.shape.length,l=Xt(r,a.shape);if(i===0)return qa({inputs:{x:a},backend:e});const u=new an(a.shape,a.dtype),h=e.bufferSync(a);for(let f=0;f<u.size;f++){const p=u.indexToLoc(f),m=p.slice();l.forEach(y=>m[y]=a.shape[y]-1-m[y]),u.set(h.get(...m),...p)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const PK={kernelName:fm,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK={kernelName:t1,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=Cn(s.dtype,ht(s.shape)),[h,f,p,m]=s.shape,[y,b]=tv(i,f,p),v=255,w=Math.sin(a),S=Math.cos(a),C=l.data.get(s.dataId).values;for(let T=0;T<h;T++){const I=T*p*f*m;for(let R=0;R<f;R++){const F=R*(p*m);for(let M=0;M<p;M++){const D=M*m;for(let O=0;O<m;O++){const A=[h,R,M,O],W=A[2],K=A[1];let tt=(W-y)*S-(K-b)*w,Q=(W-y)*w+(K-b)*S;tt=Math.round(tt+y),Q=Math.round(Q+b);let P=r;if(typeof r!="number"&&(O===3?P=v:P=r[O]),tt>=0&&tt<p&&Q>=0&&Q<f){const Y=Q*(p*m),rt=tt*m,B=I+Y+rt+O;P=C[B]}const et=I+F+D+O;u[et]=P}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=me(xh,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),GK={kernelName:xh,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Do(r,a,i),m=!0,y=e.bufferSync(a),b=e.bufferSync(r),v=uo(y,b,i,p,h,u,l,f,0,m);return e.makeTensorInfo(i,v.dtype,v.values)}const qK={kernelName:Mx,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<t?e=a+1:s=a;return s}function XK(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<=t?e=a+1:s=a;return s}function KK(n,t,e,s,a,r){const i=Ge("int32",e*a);for(let l=0;l<e;++l){const u=n.slice(l*s,(l+1)*s),h=l*a;for(let f=0;f<a;++f)i[h+f]=r==="left"?jK(u,t[f+h]):XK(u,t[f+h])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=KK(l,u,a.shape[0],a.shape[1],r.shape[1],i);return e.makeTensorInfo(r.shape,"int32",h)}const ZK={kernelName:Vx,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t;Rt([s,a,r],"select");const i=s.shape.length,l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=ds(a.dtype,r.dtype),p=Fn(ht(a.shape),f);let m=0;const y=i===0||i>1||a.shape.length===1?1:ht(a.shape.slice(1));for(let b=0;b<l.length;b++)for(let v=0;v<y;v++)l[b]===1?p[m++]=u[b]:p[m++]=h[b];return e.makeTensorInfo(a.shape,f,p)}const JK={kernelName:pm,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=Km,e7=Ym,n7=me(wh,n=>n>=0?e7*n:t7*(Math.exp(n)-1)),s7={kernelName:wh,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7=me(Ch,n=>n<0?-1:n>0?1:0),r7={kernelName:Ch,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7=me(Sh,n=>Math.sin(n)),o7={kernelName:Sh,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=me(Nh,n=>Math.sinh(n)),u7={kernelName:Nh,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=11920928955078125e-23,h2=Math.log(c7)+2,h7=me($h,n=>{const t=n>-h2,e=n<h2,s=Math.exp(n);let a;return e?a=s:t?a=n:a=Math.log(1+s),a}),d7={kernelName:$h,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;Rt([a],"spaceToBatchND");const l=ht(r),u=[[0,0]];u.push(...i);for(let R=1+r.length;R<a.shape.length;++R)u.push([0,0]);const h=cD.kernelFunc({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),f=Uh(h.shape,r,l,!1),p=Wh(f.length,r.length,!1),m=Gh(h.shape,r,l,!1),v=Te({inputs:{x:h},backend:e,attrs:{shape:f}}),C=es({inputs:{x:v},backend:e,attrs:{perm:p}}),I=Te({inputs:{x:C},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(C),I}const p7={kernelName:ym,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=e.data.get(i.dataId).values[0],[p,m,y,b,v]=LR(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const g7={kernelName:Px,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.data.get(a.dataId).values),l=e.data.get(s.dataId).values,u=Array.from(e.data.get(r.dataId).values),[h,f,p]=zR(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const b7={kernelName:Ux,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=Gv(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const v7={kernelName:Wx,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=Gv(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const S7={kernelName:Gx,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Do(r,a,l),y=!1,b=e.bufferSync(a);let v;switch(r.dtype){case"bool":{const w=e.bufferSync(r),S=!!e.data.get(i.dataId).values[0];v=uo(b,w,l,m,f,h,u,p,S,y);break}case"float32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=uo(b,w,l,m,f,h,u,p,S,y);break}case"int32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=uo(b,w,l,m,f,h,u,p,S,y);break}case"string":{const w=e.bufferSync(r),S=oi(e.data.get(i.dataId).values[0]);v=uo(b,w,l,m,f,h,u,p,S,y);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(l,v.dtype,v.values)}const C7={kernelName:Hx,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Xt(i,a.shape)[0],u=mv(a,r,l),h=new Array(a.shape.length).fill(0),f=a.shape.slice();return u.map(p=>{const m=[...f];m[l]=p;const y=ko({inputs:{x:a},backend:e,attrs:{begin:h,size:m}});return h[l]+=p,y})}const $7={kernelName:bm,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7={kernelName:qx,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Rt(e,"square");const a=s.data.get(e.dataId).values,r=new Float32Array(a.length);for(let l=0;l<a.length;++l){const u=a[l];r[l]=u*u}return{dataId:s.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=me(Oh,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),E7={kernelName:Oh,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s;Rt(a,"stridedSlice");const{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:C,end:$,strides:T}=Z1(a.shape,r,i,l,u,h,f,p,m);let I;if(v)I=Te({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){_(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const R=X1(C,$,T),F=ko({inputs:{x:a},backend:e,attrs:{begin:C,size:R}});I=Te({inputs:{x:F},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(F)}else{const R=e.bufferSync(a),F=VR(y,R,T,C);I=e.makeTensorInfo(b,F.dtype,F.values)}return I}const R7={kernelName:jx,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.data.get(f.dataId).values,y=e.data.get(p.dataId).values,[b,v]=PR(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const O7={kernelName:Xx,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values[0],[h,f,p]=UR(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const F7={kernelName:Kx,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(r.dataId).values,l=WR(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const z7={kernelName:Yx,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7=me(Ah,n=>Math.tan(n)),B7={kernelName:Ah,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=me(Rh,n=>Math.tanh(n)),P7={kernelName:Rh,backendName:"cpu",kernelFunc:V7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n){const{inputs:t,backend:e}=n,{tensor:s,indices:a,updates:r}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:h,outputSize:f}=Do(r,a,s.shape),p=!1,m=e.bufferSync(a),y=e.bufferSync(r),b=e.bufferSync(s),v=uo(m,y,s.shape,f,u,l,i,h,b,p);return e.makeTensorInfo(s.shape,v.dtype,v.values)}const W7={kernelName:Bx,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;Rt(a,"tile");const i=HR(e.bufferSync(a),r);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const H7={kernelName:Dh,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s;Rt(a,"topk");const l=e.data.get(a.dataId).values,[u,h]=jR(l,a.shape,a.dtype,r,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(h.shape,h.dtype,h.values)]}const j7={kernelName:Zx,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:t,attrs:e,backend:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=e,[f,p,m,y]=a.shape,[b,v]=h??[p,m],w=[f,b,v,y],S=Ft(a.shape),C=S[0],$=S[1],T=S[2],I=Ft(w),R=I[0],F=I[1],M=I[2],D=Cn(a.dtype,ht(w));D.fill(u);const O=s.data.get(a.dataId).values,A=s.data.get(r.dataId).values;for(let K=0;K<f;++K){const tt=r.shape[0]===1?A:A.subarray(K*8,K*8+8);for(let Q=0;Q<b;++Q)for(let P=0;P<v;++P)for(let et=0;et<y;++et){let Y;const rt=tt[6]*P+tt[7]*Q+1;if(rt===0)continue;const B=(tt[0]*P+tt[1]*Q+tt[2])/rt,j=(tt[3]*P+tt[4]*Q+tt[5])/rt,lt=d2(B,m,l),ot=d2(j,p,l);switch(i){case"nearest":Y=t9(O,p,m,C,$,T,K,ot,lt,et,u);break;case"bilinear":Y=e9(O,p,m,C,$,T,K,ot,lt,et,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ut=K*R+Q*F+P*M+et;D[ut]=Y}return s.makeTensorInfo(w,a.dtype,D)}return{dataId:s.write(D,w,a.dtype),shape:a.shape,dtype:a.dtype}}const K7={kernelName:Qx,backendName:"cpu",kernelFunc:X7};function d2(n,t,e){switch(e){case"reflect":return Y7(n,t);case"wrap":return Z7(n,t);case"nearest":return J7(n,t);case"constant":default:return Q7(n)}}function Y7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return po(0,e,t-1)}function Z7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return po(0,e,t-1)}function Q7(n,t){return n}function J7(n,t){return po(0,n,t-1)}function vc(n,t,e,s,a,r,i,l,u,h,f){const p=i*s+l*a+u*r+h;return 0<=l&&l<t&&0<=u&&u<e?n[p]:f}function t9(n,t,e,s,a,r,i,l,u,h,f){const p=Math.round(l),m=Math.round(u);return vc(n,t,e,s,a,r,i,p,m,h,f)}function e9(n,t,e,s,a,r,i,l,u,h,f){const p=Math.floor(l),m=Math.floor(u),y=p+1,b=m+1,v=(b-u)*vc(n,t,e,s,a,r,i,p,m,h,f)+(u-m)*vc(n,t,e,s,a,r,i,p,b,h,f),w=(b-u)*vc(n,t,e,s,a,r,i,y,m,h,f)+(u-m)*vc(n,t,e,s,a,r,i,y,b,h,f);return(y-l)*v+(l-p)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;Rt(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:l,outputShape:u,indices:h}=XR(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const s9={kernelName:Jx,backendName:"cpu",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,l=a.shape[r],u=new Array(i-1);let h=0;for(let y=0;y<i;y++)y!==r&&(u[h++]=a.shape[y]);const f=new Array(i).fill(0),p=a.shape.slice();p[r]=1;const m=new Array(l);for(let y=0;y<m.length;y++){f[r]=y;const b=ko({inputs:{x:a},backend:e,attrs:{begin:f,size:p}});m[y]=Te({inputs:{x:b},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(b)}return m}const r9={kernelName:wm,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s;Rt(a,"unsortedSegmentSum");const l=a.shape.length,u=r.shape.length,h=[],f=[],p=l-u;let m=r;for(let b=0;b<p;++b){const v=fp({inputs:{input:m},backend:e,attrs:{dim:b+1}});m=v,f.push(v)}for(let b=0;b<i;++b){const v=vi(b,"int32"),w=e.makeTensorInfo([],"int32",v),S=uR({inputs:{a:w,b:m},backend:e}),C=gi({inputs:{x:S},backend:e,attrs:{dtype:"float32"}}),$=lg({inputs:{a:C,b:a},backend:e}),T=Jh({inputs:{x:$},backend:e,attrs:{axis:0,keepDims:!1}});h.push(T),f.push(w),f.push(S),f.push(C),f.push($),f.push(T)}const y=uD({inputs:h,backend:e,attrs:{axis:0}});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const o9={kernelName:Sm,backendName:"cpu",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=[n5,Lq,a5,i5,Uq,l5,c5,d5,p5,g5,b5,v5,S5,T5,k5,A5,D5,_5,L5,t5,M5,V5,U5,Gq,G5,Vq,qq,q5,zq,X5,Y5,Z5,J5,e8,s8,r8,o8,u8,h8,f8,m8,y8,x8,w8,S8,C8,$8,I8,E8,A8,R8,O8,L8,jj,M8,jq,q8,Xq,j8,Yq,J8,tX,nX,Qq,tj,aX,iX,lX,cX,nj,aj,Mq,dX,K5,pX,gX,bX,Xj,ij,lj,vX,cj,SX,TX,kX,AX,DX,_X,FX,dj,zX,BX,PX,WX,HX,jX,KX,pj,ZX,tK,sK,gj,bj,iK,uK,dK,vj,pK,gK,yK,cD,wK,Yj,Nj,NK,TK,kK,EK,Bq,P0,RK,Zj,Qj,Jj,OK,FK,zK,BK,PK,UK,GK,Rj,qK,ZK,JK,s7,Oj,r7,o7,u7,_j,eK,d7,p7,g7,b7,v7,S7,C7,$7,zj,k7,Bj,Pj,E7,R7,O7,F7,z7,Hj,_8,B7,P7,W7,H7,j7,K7,wj,s9,r9,o9,mK];for(const n of l9)a$(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo={},Nf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function u9(n,t){oo[n]=t}function $a(n,t){if(!(n in oo)||t!=null){const s=h9(n,t);if(s!==null)oo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=oo[n];return e==null||e.isContextLost()?(delete oo[n],$a(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),oo[n])}function c9(n){if(!at().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function h9(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??c9(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete oo[n]},!1),at().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nf.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",Nf)||e.getContext("experimental-webgl",Nf):e.getContext("webgl2",Nf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _c;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(_c||(_c={}));var Es;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Es||(Es={}));var Sn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Sn||(Sn={}));function td(n,t){return[t,n]}function d9(n,t){return n*t}function Cf(n){const t=ht(n),e=Math.ceil(t/4);return Kb(e)}function ru(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function f9(n,t){const[e,s]=ru(n,t);return e*s*4}function Kv(n,t){const e=n;let s,a,r,i,l,u,h,f,p,m;return at().getNumber("WEBGL_VERSION")===2?(s=e.R32F,a=e.R16F,r=e.RGBA16F,i=e.RGBA32F,l=e.RED,h=4,f=1,p=e.HALF_FLOAT,m=e.FLOAT,u=e.RGBA8):(s=n.RGBA,a=n.RGBA,r=n.RGBA,i=e.RGBA,l=n.RGBA,h=4,f=4,p=t!=null?t.HALF_FLOAT_OES:null,m=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:h,defaultNumChannels:f,textureTypeHalfFloat:p,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,t){const e=t();return at().getBool("DEBUG")&&p9(n),e}function p9(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+b9(n,t))}const m9=596e-10,g9=65504;function y9(n){return!!(at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||m9<Math.abs(n)&&Math.abs(n)<g9)}function b9(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Tf(n,t){return Er(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function x9(n,t){const e=Er(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function v9(n,t){const e=Er(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),at().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw hD(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const w9=/ERROR: [0-9]+:([0-9]+):/g;function hD(n,t){const e=w9.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],a=n.split(`
`),r=a.length.toString().length+2,i=a.map((p,m)=>El((m+1).toString(),r)+p);let l=0;for(let p=0;p<i.length;p++)l=Math.max(i[p].length,l);const u=i.slice(0,s-1),h=i.slice(s-1,s),f=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${El(h[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(f.join(`
`))}function S9(n){return Er(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function N9(n,t){if($t(n,()=>n.linkProgram(t)),!at().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Ub(n,t){if($t(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function C9(n,t){const e=Er(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function T9(n,t){const e=Er(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function $9(n){return Er(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function k9(n,t){const e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,a=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function I9(n){return Er(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function f2(n,t,e,s,a,r,i){const l=n.getAttribLocation(t,e);return l===-1?!1:($t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),$t(n,()=>n.vertexAttribPointer(l,a,n.FLOAT,!1,r,i)),$t(n,()=>n.enableVertexAttribArray(l)),!0)}function E9(n,t,e){_9(n,e),$t(n,()=>n.activeTexture(n.TEXTURE0+e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function A9(n,t,e){return Er(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function R9(n,t,e){return n.getUniformLocation(t,e)}function D9(n,t,e,s){$t(n,()=>E9(n,t,s)),$t(n,()=>n.uniform1i(e,s))}function Wb(n,t,e){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function p2(n,t){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function $f(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+O9(n,t))}function O9(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Er(n,t,e){const s=$t(n,()=>t());if(s==null)throw new Error(e);return s}function _9(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const a=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${a}.`)}}function jl(n,t=2){return ht(n.slice(0,n.length-t))}function Xl(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function kf(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[jl(n),...Xl(n)]),t}function F9(n,t=!1){let e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=at().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&at().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((l,u)=>u>=n.length-2?X0(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=xi(n).newShape);let a=ht(n),r=null;n.length<=1&&a<=e?r=[1,a]:n.length===2&&n[0]<=e&&n[1]<=e?r=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||i)if(t){const l=jl(n);let u=2,h=2;n.length&&([u,h]=Xl(n)),a=l*(u/2)*(h/2),r=Kb(a).map(f=>f*2)}else r=Kb(a);return r}function If(n){return n%2===0}function mp(n,t){if(n=n.slice(-2),t=t.slice(-2),te(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||If(e)&&If(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&If(n[0])&&If(t[0])}let Gb,Hb;function L9(n){if(Gb==null){const t=$a(n);Gb=t.getParameter(t.MAX_TEXTURE_SIZE)}return Gb}function z9(n){if(Hb==null){const t=$a(n);Hb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Hb)}function M9(n){if(n===0)return 0;let t;const e=$a(n);return ta(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:ta(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function ta(n,t){return n.getExtension(t)!=null}function m2(n){try{if($a(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function B9(n){if(n===0)return!1;const t=$a(n);if(n===1){if(!ta(t,"OES_texture_float"))return!1}else if(!ta(t,"EXT_color_buffer_float"))return!1;return W0(t)}function V9(n){if(n===0)return!1;const t=$a(n);if(n===1){if(!ta(t,"OES_texture_float")||!ta(t,"WEBGL_color_buffer_float"))return!1}else{if(ta(t,"EXT_color_buffer_float"))return W0(t);const s="EXT_color_buffer_half_float";if(ta(t,s)){const a=t.getExtension(s);return P9(t,a)}return!1}return W0(t)}function W0(n){const t=Kv(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),i}function P9(n,t){const e=Kv(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),l}function U9(n){return n!==2?!1:$a(n).fenceSync!=null}function ed(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&_(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=at();Ot.registerFlag("HAS_WEBGL",()=>Ot.getNumber("WEBGL_VERSION")>0);Ot.registerFlag("WEBGL_VERSION",()=>m2(2)?2:m2(1)?1:0);Ot.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ot.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ot.get("WEBGL_VERSION")===2);Ot.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ot.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ot.registerFlag("WEBGL_PACK",()=>Ot.getBool("HAS_WEBGL"));Ot.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CLIP",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_REDUCE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_CONV_IM2COL",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>L9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>z9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ot.getNumber("WEBGL_VERSION");return n===0?0:M9(n)});Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ot.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!y$());Ot.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>B9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ot.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ot.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ot.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>V9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_FENCE_API_ENABLED",()=>U9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ot.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ot.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ot.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>y$()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ot.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ot.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ot.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_EXP_CONV",()=>!1);Ot.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ot.getBool("IS_TEST"));Ot.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ot.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ot.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ot.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qn(){let n,t,e,s,a,r,i,l,u,h;return at().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",l=at().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",h=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",a="texture2D",r="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,h=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(n,t,e="index"){const s=Ft(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / ${a}`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${a}`:`index -= ${n[r]} * ${a}`;return`${i}; ${l};`}).join("")}function ug(n,t,e="index"){const s=Ft(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / outShapeStrides[${r}]`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${l};`}).join("")}function W9(n,t){const e=n.length,s=n.map(r=>`${t}[${r}]`),a=new Array(e-1);a[e-2]=s[e-1];for(let r=e-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function G9(n,t,e="index"){const s=n.map((r,i)=>i),a=W9(s,t);return a.map((r,i)=>{const l=`int ${n[i]} = ${e} / ${a[i]}`,u=i===a.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${a[i]}`:`index -= ${n[i]} * ${a[i]}`;return`${l}; ${u};`}).join("")}function Yv(n){const t=Ft(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Zv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const dD=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:fD}=oU;function H9(n,t,e){const s=[];if(n.forEach(y=>{const b=ht(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${b>1?`[${b}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),e.enableShapeUniforms){const{uniformShape:v}=Qv(e.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(v.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`);break}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const a=s.join(`
`),r=n.map(y=>q9(y,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,l=qn(),u=K9(l);let h,f,p=Q9(l);return t.isPacked?(h=j9(t.logicalShape,i,e.enableShapeUniforms),f=Z9(l)):(h=X9(t.logicalShape,i,e.enableShapeUniforms),f=Y9(l)),e.packedInputs&&(p+=nY),[p,u,f,a,h,r,e.userCode].join(`
`)}function iu(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return pY(n,t);case 1:return gY(n,t);case 2:return bY(n,t);case 3:return vY(n,t);case 4:return SY(n,t);case 5:return NY(n);case 6:return CY(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function pD(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return fY(n);case 1:return mY(n,t);case 2:return yY(n,t);case 3:return xY(n,t);default:return wY(n,t)}}function q9(n,t,e=!1,s){let a="";e?a+=pD(n,s):a+=iu(n,s);const r=n.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(e?a+=TY(n,t):a+=$Y(n,t)),a}function j9(n,t,e){switch(n.length){case 0:return mD();case 1:return sY(n,t,e);case 2:return hY(n,t,e);case 3:return rY(n,t,e);default:return oY(n,t,e)}}function X9(n,t,e){switch(n.length){case 0:return mD();case 1:return aY(n,t,e);case 2:return dY(n,t,e);case 3:return iY(n,t,e);case 4:return lY(n,t,e);case 5:return uY(n,t);case 6:return cY(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function K9(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Y9(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function Z9(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function Q9(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${J9}
    ${tY}
    ${eY}
  `}const J9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tY=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,eY=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nY=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function mD(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function sY(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function aY(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function rY(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[2]/2),r=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function iY(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ug(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Fo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function oY(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[n.length-1]/2),r=a*Math.ceil(n[n.length-2]/2);let i=r,l="",u="b, r, c";for(let h=2;h<n.length-1;h++)i*=n[n.length-h-1],l=`
      int b${h} = index / ${i};
      index -= b${h} * ${i};
    `+l,u=`b${h}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${u});
    }
  `}function lY(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ug(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Fo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function uY(n,t){const e=Fo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function cY(n,t){const e=Fo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function hY(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(te(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function dY(n,t,e){return te(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Lo(n){return`offset${n}`}function fY(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=qn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function pY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[a,r]=n.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=Lo(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[l,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function mY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=n.shapeInfo.texShape,r=qn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function gY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ou(n)}
      }
    `;const a=n.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const l=Lo(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${l});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${l});
      return sampleTexture(${e}, uv);
    }
  `}function yY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],l=r[1],u=qn();if(r!=null&&te(e,r))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const h=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],f=Math.ceil(e[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${f}, ${h[0]}, ${h[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function bY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&te(e,r)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const m=r[0],y=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${m}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:l}=xi(e),u=i;if(u.length<e.length){const m=lu(n,u),y=["row","col"];return`
      ${iu(m,t)}
      float ${a}(int row, int col) {
        return ${a}(${uu(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${ou(n)}
      }
    `;const h=r[0],f=r[1],p=Lo(s);return f===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `:h===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${h}, ${f}, index);
    return sampleTexture(${s}, uv);
  }
`}function xY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const m=e.slice(1),y=[1,2],b=lu(n,m),v=["b","row","col"];return`
        ${pD(b,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${uu(v,y)});
        }
      `}const l=qn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=i[0],h=i[1],f=Math.ceil(e[2]/2),p=f*Math.ceil(e[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${p}, ${f}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function vY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[1]*e[2],i=e[2],{newShape:l,keptDims:u}=xi(e),h=l;if(h.length<e.length){const v=lu(n,h),w=["row","col","depth"];return`
        ${iu(v,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${uu(w,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${ou(n)}
      }
    `;const f=n.shapeInfo.texShape,p=f[0],m=f[1],y=n.shapeInfo.flatOffset;if(m===r&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(m===i&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const b=Lo(s);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${b};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${b};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${s}, uv);
      }
  `}function wY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=qn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${e}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,l=n.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],h=u[0],f=u[1],p=Math.ceil(r[i-1]/2);let m=p*Math.ceil(r[i-2]/2),y="int b, int row, int col",b=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let v=2;v<i-1;v++)y=`int b${v}, `+y,m*=r[i-v-1],b=`b${v} * ${m} + `+b;return`
    vec4 ${s}(${y}) {
      int index = ${b};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${h});
      return ${a.texture2D}(${e}, uv);
    }
  `}function SY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[3],i=e[2]*r,l=e[1]*i,{newShape:u,keptDims:h}=xi(e);if(u.length<e.length){const C=lu(n,u),$=["row","col","depth","depth2"];return`
      ${iu(C,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${uu($,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${r}, 1)));
        ${ou(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1],b=`int stride2 = ${s}Shape[3];`,v=`int stride1 = ${s}Shape[2] * stride2;`,w=`int stride0 = ${s}Shape[1] * stride1;`;if(y===l&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${b}
        ${v}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(y===r&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;const S=Lo(s);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${b}
      ${v}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${S});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${m}, ${y}, index + ${S});
      return sampleTexture(${s}, uv);
    }
  `}function NY(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t[4],r=t[3]*a,i=t[2]*r,l=t[1]*i,{newShape:u,keptDims:h}=xi(t);if(u.length<t.length){const v=lu(n,u),w=["row","col","depth","depth2","depth3"];return`
      ${iu(v)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${uu(w,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${r}, ${a})) +
          depth3;
        ${ou(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1];if(y===l&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(y===a&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;const b=Lo(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${b};
      vec2 uv = uvFromFlat(${m}, ${y}, index);
      return sampleTexture(${e}, uv);
    }
  `}function CY(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:a,keptDims:r}=xi(t);if(a.length<t.length){const w=lu(n,a),S=["row","col","depth","depth2","depth3","depth4"];return`
      ${iu(w)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${uu(S,r)});
      }
    `}const i=t[5],l=t[4]*i,u=t[3]*l,h=t[2]*u,f=t[1]*h;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${f}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ou(n)}
      }
    `;const p=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,y=m[0],b=m[1];if(b===f&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(b===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;const v=Lo(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${f} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${v};
      vec2 uv = uvFromFlat(${y}, ${b}, index);
      return sampleTexture(${e}, uv);
    }
  `}function ou(n){const t=n.name,e=ht(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function TY(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=fD(n.shapeInfo.logicalShape,t.logicalShape),u=ge(i),h=i-r;let f;const p=["x","y","z","w","u","v"];r===0?f="":i<2&&l.length>=1?f="coords = 0;":f=l.map(C=>`coords.${p[C+h]} = 0;`).join(`
`);let m="";i<2&&r>0?m="coords":m=n.shapeInfo.logicalShape.map((C,$)=>`coords.${p[$+h]}`).join(", ");let y="return outputValue;";const v=ht(n.shapeInfo.logicalShape)===1,S=ht(t.logicalShape)===1;if(r===1&&!v&&!S)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(v&&!S)i===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(l.length){const C=r-2,$=r-1;l.indexOf(C)>-1&&l.indexOf($)>-1?y="return vec4(outputValue.x);":l.indexOf(C)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf($)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${f}
      vec4 outputValue = get${s}(${m});
      ${y}
    }
  `}function $Y(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,i=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&l===u&&n.shapeInfo.flatOffset==null&&te(i,r))return`
      float ${a}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const h=ge(u),f=fD(n.shapeInfo.logicalShape,t.logicalShape),p=u-l;let m;const y=["x","y","z","w","u","v"];l===0?m="":u<2&&f.length>=1?m="coords = 0;":m=f.map(v=>`coords.${y[v+p]} = 0;`).join(`
`);let b="";return u<2&&l>0?b="coords":b=n.shapeInfo.logicalShape.map((v,w)=>`coords.${y[w+p]}`).join(", "),`
    float ${a}() {
      ${h} coords = getOutputCoords();
      ${m}
      return get${s}(${b});
    }
  `}function ge(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Qv(n,t,e){const{newShape:s,keptDims:a}=xi(t),r=t.length,i=n&&r===3&&t[0]===1,l=i?t.slice(1):s,u=!n&&r>1&&!te(t,e)&&s.length<r||i;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function lu(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function uu(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(n,t,e,s){const a=e.map((f,p)=>{const m={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(m.flatOffset=f.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),r=a.map(f=>f.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=H9(a,i,t),u=v9(n.gl,l),h=n.createProgram(u);return at().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(h),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i},gD(n,t,h)))}function gD(n,t,e){const s=[],a=[];let r,i,l,u=null,h=null;h=n.getUniformLocation(e,"NAN",!1),at().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const f=!1;for(const p of t.variableNames){const m={name:p,uniform:n.getUniformLocation(e,p,f),offset:n.getUniformLocation(e,`offset${p}`,f)};t.enableShapeUniforms&&(m.shape=n.getUniformLocation(e,`${p}Shape`,f),m.texShape=n.getUniformLocation(e,`${p}TexShape`,f)),s.push(m)}if(t.enableShapeUniforms&&(r=n.getUniformLocation(e,"outShape",f),l=n.getUniformLocation(e,"outShapeStrides",f),i=n.getUniformLocation(e,"outTexShape",f)),t.customUniforms)for(const p of t.customUniforms)a.push(n.getUniformLocation(e,p.name,f));return{variablesLocations:s,customUniformLocations:a,infLoc:u,nanLoc:h,outShapeLocation:r,outShapeStridesLocation:l,outTexShapeLocation:i}}function g2(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const a=e.logicalShape,r=t[s],i=r.shape;if(!te(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const l=e.texShape,u=r.isUniform?null:r.texData.texShape;if(!te(l,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${u} must match`)})}function IY(n,t,e,s,a){t.program.enableShapeUniforms||(g2(t.inShapeInfos,e),g2([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),at().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const h=e[u],{uniform:f,offset:p,shape:m,texShape:y}=t.variablesLocations[u];if(m){const{uniformShape:b}=Qv(t.program.packedInputs,h.shape,h.texData.texShape);switch(b.length){case 1:n.gl.uniform1iv(m,new Int32Array(b));break;case 2:n.gl.uniform2iv(m,new Int32Array(b));break;case 3:n.gl.uniform3iv(m,new Int32Array(b));break;case 4:n.gl.uniform4iv(m,new Int32Array(b));break}}if(y&&n.gl.uniform2i(y,h.texData.texShape[0],h.texData.texShape[1]),f!=null){if(h.isUniform){if(ht(h.shape)<2)n.gl.uniform1f(f,h.uniformValues[0]);else{let b=h.uniformValues;b instanceof Float32Array||(b=new Float32Array(b)),n.gl.uniform1fv(f,b)}continue}h.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,h.texData.slice.flatOffset),n.setInputMatrixTexture(h.texData.texture.texture,f,u)}}const l=t.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=Ft(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){const h=t.program.customUniforms[u],f=t.customUniformLocations[u],p=a[u];if(h.type==="float")n.gl.uniform1fv(f,p);else if(h.type==="vec2")n.gl.uniform2fv(f,p);else if(h.type==="vec3")n.gl.uniform3fv(f,p);else if(h.type==="vec4")n.gl.uniform4fv(f,p);else if(h.type==="int")n.gl.uniform1iv(f,p);else if(h.type==="ivec2")n.gl.uniform2iv(f,p);else if(h.type==="ivec3")n.gl.uniform3iv(f,p);else if(h.type==="ivec4")n.gl.uniform4iv(f,p);else throw Error(`uniform type ${h.type} is not supported yet.`)}n.executeProgram()}function EY(n,t,e){let s="";t.concat(e).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:h,uniformShape:f,keptDims:p}=Qv(n.packedInputs,i.shape,u);let m="",y="",b="";if(f.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(f.length===2&&!n.packedInputs)y=`${f[0]>1}_${f[1]>1}`;else if(f.length>2&&!n.packedInputs){const I=Ft(f);b=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const v=i.shape.length,w=f.length===2&&te(i.shape,u),S=ht(i.shape)===1,C=Vl(i.shape,e.shape),$=!n.packedInputs&&v===e.shape.length&&te(u,e.texData.texShape),T=n.packedInputs||f.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${v}_${$}_${h?p:""}_${f.length}_${S}_${C}_${w}_${m}_${y}_${b}_${T}_${l}`}else{const u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${l}`}});const a=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+a+`${at().getNumber("WEBGL_VERSION")}`,r}function zn(n){return at().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AY{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=qn();this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ug(["r","c","d"],t):Fo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=qn();this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ug(["r","c","d"],t):Fo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DY{constructor(t){this.variableNames=["A"],this.outTexUsage=Es.DOWNLOAD;const e=qn();this.outputShape=t,this.userCode=`
      ${dD}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Es.DOWNLOAD;const e=qn();this.outputShape=t,this.userCode=`
      ${dD}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y={R:0,G:1,B:2,A:3};class y2{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=qn();this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let i="";for(let l=0;l<s.length;l++){const u=s[l];i+=`
          if(offset == ${l}) {
            result = values[${_Y[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Zv():Yv(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FY{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=qn();this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length);let a="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const u=i*2+l;a+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Zv():Yv(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const t=qn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return x9(n,e)}function zY(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return C9(n,t)}function MY(n){const t=new Uint16Array([0,1,2,2,1,3]);return T9(n,t)}function nd(n,t,e,s,a,r){k9(t,e);const i=$9(n),l=n.TEXTURE_2D;return $t(n,()=>n.bindTexture(l,i)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),at().getNumber("WEBGL_VERSION")===1?$t(n,()=>n.texImage2D(l,0,s,t,e,0,a,r,null)):$t(n,()=>n.texStorage2D(l,1,s,t,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function yD(n){return n.internalFormatFloat}function BY(n,t,e,s){const[a,r]=td(t,e);return nd(n,a,r,yD(s),s.textureFormatFloat,n.FLOAT)}function bD(n){return n.internalFormatHalfFloat}function VY(n,t,e,s){const[a,r]=td(t,e);return nd(n,a,r,bD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function xD(n){return n.downloadTextureFormat}function PY(n,t,e,s){const[a,r]=td(t,e);return nd(n,a,r,xD(s),n.RGBA,n.UNSIGNED_BYTE)}function vD(n){return n.internalFormatPackedFloat}function UY(n,t,e,s){const[a,r]=ru(t,e);return nd(n,a,r,vD(s),n.RGBA,n.FLOAT)}function wD(n){return n.internalFormatPackedHalfFloat}function WY(n,t,e,s){const[a,r]=ru(t,e);return nd(n,a,r,wD(s),n.RGBA,s.textureTypeHalfFloat)}function GY(n,t,e){return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),f2(n,t,"clipSpacePos",e,3,20,0)&&f2(n,t,"uv",e,2,20,12)}function HY(n,t,e,s,a,r){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,l,u;a instanceof Uint8Array?(i=new Uint8Array(e*s*4),l=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(e*s*4),l=n.FLOAT,u=r.internalFormatPackedFloat),i.set(a),at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,l,i)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,l,i)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function qY(n,t,e){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function jY(n,t,e,s){const a=n.createBuffer();$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const l=4*4*t*e;return $t(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),$t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function XY(n,t,e){const s=n,a=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function KY(n,t,e,s){const[a,r]=td(t,e),i=4,l=new Uint8Array(d9(t*e,i));return $t(n,()=>n.readPixels(0,0,a,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function YY(n,t,e,s,a,r,i,l){const u=n,h=new Float32Array(f9(r,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,h),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),h}function ZY(n,t,e){const s=new Float32Array(t*e*4);return $t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qb{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=at().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,u9(e,t)):this.gl=$a(e),t=this.gl,at().getNumber("WEBGL_VERSION")===2){const r=t;this.createVertexArray=()=>$t(r,()=>r.createVertexArray()),this.bindVertexArray=i=>$t(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>$t(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>$t(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(t!=null){const r=t.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>$t(t,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>$t(t,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>$t(t,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>$t(t,()=>t.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),at().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Tf(this.gl,r),ta(this.gl,i))this.textureHalfFloatExtension=Tf(this.gl,i);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ta(this.gl,a))this.colorBufferHalfFloatExtension=Tf(this.gl,a);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ta(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ta(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=zY(this.gl),this.indexBuffer=MY(this.gl),this.framebuffer=I9(this.gl),this.textureConfig=Kv(this.gl,this.textureHalfFloatExtension)}get debug(){return at().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;$t(t,()=>t.finish()),$t(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),$t(t,()=>t.deleteFramebuffer(this.framebuffer)),$t(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),$t(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),$t(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),BY(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),VY(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),PY(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),qY(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,a){this.throwIfDisposed(),HY(this.gl,t,e,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),WY(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),UY(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(p2(this.gl,this.framebuffer),this.outputTexture=null),$t(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>KY(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,a,r,i){return YY(this.gl,t,e,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return XY(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const a=jY(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(at().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},e=r}else at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>ZY(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=LY(e));const s=S9(e);$t(e,()=>e.attachShader(s,this.vertexShader)),$t(e,()=>e.attachShader(s,t)),N9(e,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Ub(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;$t(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),GY(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&($t(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Ub(this.gl,this.program),$t(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?A9(this.gl,t,e):R9(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),$t(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),D9(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[a,r]=ru(e,s);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,s,a){this.setOutputMatrixWriteRegionDriver(s,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Ub(this.gl,this.program),$f(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}$t(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$t(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Tf(this.gl,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await XC(()=>this.disposed||this.isQueryAvailable(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=QY(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in at().platform&&(s=at().platform.setTimeoutCustom.bind(at().platform)),XC(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Wb(this.gl,t,this.framebuffer),this.debug&&$f(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Wb(this.gl,this.outputTexture,this.framebuffer),this.debug&&$f(this.gl)):p2(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const a=this.gl;Wb(a,t,this.framebuffer),this.debug&&$f(a),this.outputTexture=t,$t(a,()=>a.viewport(0,0,e,s)),$t(a,()=>a.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,a){this.throwIfDisposed(),$t(this.gl,()=>this.gl.scissor(t,e,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function QY(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:JY,bincountImpl:SD,bincountReduceImpl:tZ,bitwiseAndImpl:eZ,castImpl:nZ,ceilImpl:sZ,concatImpl:aZ,equalImpl:rZ,expImpl:iZ,expm1Impl:oZ,floorImpl:lZ,gatherNdImpl:uZ,gatherV2Impl:cZ,greaterImpl:hZ,greaterEqualImpl:dZ,lessImpl:fZ,lessEqualImpl:pZ,linSpaceImpl:mZ,logImpl:gZ,maxImpl:yZ,maximumImpl:bZ,minimumImpl:xZ,multiplyImpl:vZ,negImpl:wZ,notEqualImpl:SZ,prodImpl:NZ,raggedGatherImpl:CZ,raggedRangeImpl:TZ,raggedTensorToTensorImpl:$Z,rangeImpl:kZ,rsqrtImpl:IZ,scatterImpl:EZ,sigmoidImpl:AZ,simpleAbsImpl:ND,sliceImpl:RZ,sparseFillEmptyRowsImpl:DZ,sparseReshapeImpl:OZ,sparseSegmentReductionImpl:CD,sqrtImpl:_Z,staticRegexReplaceImpl:FZ,stridedSliceImpl:LZ,stringNGramsImpl:zZ,stringSplitImpl:MZ,stringToHashBucketFastImpl:BZ,subImpl:VZ,tileImpl:PZ,topKImpl:UZ,transposeImpl:Jv,uniqueImpl:WZ}=qj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Wn(n,t){return t===1?[n]:TD(n,t)}function GZ(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HZ{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=zn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Wn("rc",this.rank),s=ge(this.rank),a=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${t[t.length-1-i]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $D{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${qZ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Zv():Yv(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function qZ(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?G9(["r","c","d"],"inputShape"):Fo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jZ{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const a=x2(e,s),r=v2(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=b2(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[r].pop();return this.usedTextures[r].push(u),u}let l;return a===Sn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===Sn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===Sn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===Sn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===Sn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,e,s,a){if(this.freeTextures==null)return;const r=x2(s,a),i=v2(e,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const l=b2(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=at().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const h=this.usedTextures[i],f=h&&h.indexOf(t);if(f==null||f<0)throw new Error("Cannot release a texture that was never provided by this texture manager");h[f]=h[h.length-1],h.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function XZ(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function b2(n,t,e,s,a){const r=KZ(t,s);let i;if(a){const[u,h]=ru(n[0],n[1]);i=u*h}else{const[u,h]=td(n[0],n[1]);i=u*h}const l=XZ(e,r);return i*l}function KZ(n,t){switch(n){case Sn.PACKED_2X2_FLOAT32:return vD(t);case Sn.PACKED_2X2_FLOAT16:return wD(t);case Sn.UNPACKED_FLOAT32:return yD(t);case Sn.UNPACKED_FLOAT16:return bD(t);case Sn.PACKED_4X1_UNSIGNED_BYTE:return xD(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function YZ(n){return at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Sn.PACKED_2X2_FLOAT32:Sn.UNPACKED_FLOAT32:n?Sn.PACKED_2X2_FLOAT16:Sn.UNPACKED_FLOAT16}function x2(n,t){if(n===Es.UPLOAD)return Sn.PACKED_2X2_FLOAT32;if(n===Es.RENDER||n==null)return YZ(t);if(n===Es.DOWNLOAD||n===Es.PIXELS)return Sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function v2(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ba{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const la="if (isnan(x)) return x;",ZZ="return x;",w2="return abs(x);",QZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",JZ=la+`
  return (x < 0.0) ? 0.0 : x;
`,tQ=la+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Jr="return x;",eQ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ="return x;",sQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,aQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iQ="return 1.0 / (1.0 + exp(-1.0 * x));";class ni{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length);const e=t.length,s=Wn("rc",e),a=ge(e),r=GZ(e,s),i=s.slice(-2),l=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lQ=L1,uQ=1e-7,cQ=1e-4,Ef={};function hQ(n){return n in Ef||(Ef[n]={}),Ef[n]}const dQ=at().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),fQ=600;function pQ(){return at().global.screen==null?1024:at().global.screen.height*at().global.screen.width*window.devicePixelRatio*fQ/1024/1024}class cg extends j0{nextDataId(){return cg.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!at().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof qb)e=t;else{const s=$a(at().getNumber("WEBGL_VERSION"),t);e=new qb(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=$a(at().getNumber("WEBGL_VERSION"));e=new qb(s),this.binaryCache=hQ(at().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new jZ(this.gpgpu),this.numMBBeforeWarning=pQ(),this.texData=new Z2(this,Fa())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,a,r,i){const l=this.makeTensorInfo(e,s),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[a,r]},u.texShape=[a,r];const h=kf(e),f=new y2(h,!1,i),p=this.runWebGLProgram(f,[l],s,[[a,r]]);return p.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(t,e,s){if((at().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||at().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:s,values:t,usage:Es.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,a,r){if(at().getBool("DEBUG")&&this.checkNumericalProblems(e),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:a,values:e,usage:Es.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:l,isPacked:u}=e;if(i!=null){let m;u?m=new ni(l,Jr):m=new Ba(l,Jr);const y=this.runWebGLProgram(m,[{dataId:t,shape:l,dtype:a}],a),b=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),b}if(s!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return s;const h=this.activeTimers!=null;let f;h&&(f=Zn());let p;if(a==="complex64"){const m=this.readSync(r.real.dataId),y=this.readSync(r.imag.dataId);p=Nr(m,y)}else p=this.getValuesFromTexture(t);return h&&(this.downloadWaitMs+=Zn()-f),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){const b=this.pendingRead.get(t);return new Promise(v=>b.push(v))}const e=this.texData.get(t),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:l,isPacked:u}=e;if(r!=null){let b;u?b=new ni(a,Jr):b=new Ba(a,Jr);const v=this.runWebGLProgram(b,[{dataId:t,shape:a,dtype:i}],i),w=this.read(v.dataId);return this.disposeIntermediateTensorInfo(v),w}if(s!=null)return this.convertAndCacheOnCPU(t);if(at().getBool("DEBUG")&&!at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&at().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h=null,f;if(i!=="complex64"&&at().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(t);const b=this.texData.get(f.dataId);h=this.gpgpu.createBufferFromTexture(b.texture.texture,...Cf(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){const b=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),v=b[0],w=b[1];p=Nr(v,w)}else if(h==null)p=this.getValuesFromTexture(t);else{const b=ht(a);p=this.gpgpu.downloadFloat32MatrixFromBuffer(h,b)}if(f!=null&&this.disposeIntermediateTensorInfo(f),h!=null){const b=this.gpgpu.gl;$t(b,()=>b.deleteBuffer(h))}const m=this.convertAndCacheOnCPU(t,p),y=this.pendingRead.get(t);return this.pendingRead.delete(t),y.forEach(b=>b(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Fa().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){const s=this.texData.get(t),{values:a,shape:r,slice:i,dtype:l,isPacked:u,texture:h}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let y;u?y=new ni(r,Jr):y=new Ba(r,Jr);const b=this.runWebGLProgram(y,[{dataId:t,shape:r,dtype:l}],l),v=this.readToGPU(b,e);return this.disposeIntermediateTensorInfo(b),v}if(h==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const f=this.decode(t,e.customTexShape),p=Fa().makeTensorFromTensorInfo(f),m=this.texData.get(f.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>oi(a));return Ht(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ht(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!y9(s))throw at().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:a}=this.texData.get(t),r=ht(e);if(at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(t),y=this.texData.get(m.dataId),b=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...Cf(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(m),b}const i=at().getBool("WEBGL_PACK")&&a===!0,l=i?kf(e):e,u=i?new OY(l):new DY(l),h=this.runWebGLProgram(u,[{shape:l,dtype:s,dataId:t}],"float32"),f=this.texData.get(h.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}timerAvailable(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,t();const r=go(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=go(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,a&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(r);l.kernelMs=DF(u),l.getExtraProfileInfo=()=>u.map((h,f)=>({name:i[f],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zn(),endMs:null}}endTimer(t){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Zn(),t)}async getQueryTime(t){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:a,usage:r,isPacked:i,slice:l}=this.texData.get(t),u=l&&l.origDataId||t,h=this.dataRefCount.get(u);h>1?this.dataRefCount.set(u,h-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(e,a,r,i)));const f=this.texData.get(t);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=dQ){return at().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&ht(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Is("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return lQ(t.shape,e)}packedUnaryOp(t,e,s){const a=new ni(t.shape,e),r=this.compileAndRun(a,[t],s);return Fa().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const a=ND(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(at().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,w2,t.dtype);const e=new Ba(t.shape,w2),s=this.compileAndRun(e,[t]);return Fa().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Mc(s[0])){const r=s.map(i=>ai(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,s){return Fa().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new oQ(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new HZ(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[jl(t.shape),...Xl(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[jl(e),...Xl(e)],i=new $D(r,s),l=!0,u=[s],h=this.runWebGLProgram(i,[a],t.dtype,u,l);return{dataId:h.dataId,shape:e,dtype:h.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:a,shape:r,dtype:i}=s;if(e!=null){const m=ht(r),y=e[0]*e[1]*4;_(m<=y,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=kf(r);let u;a?u=new RY(l):u=new AY(l);const h=!0,f=[e??Cf(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:t}],i,f,h,e);return{dtype:i,shape:r,dataId:p.dataId}}runWebGLProgram(t,e,s,a,r=!1,i){const l=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(l.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===_c.DENSE){const S=i??Cf(t.outputShape);u.texShape=S.map(C=>C*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),ht(l.shape)===0)return u.values=Cn(l.dtype,0),l;const h=[],f=e.map(S=>{if(S.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let C=this.texData.get(S.dataId);if(C.texture==null){if(!t.packedInputs&&ht(S.shape)<=at().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:S.shape,texData:null,isUniform:!0,uniformValues:C.values};t.packedInputs&&(C.isPacked=!0,C.shape=S.shape)}if(this.uploadToGPU(S.dataId),!!C.isPacked!=!!t.packedInputs)S=C.isPacked?this.unpackTensor(S):this.packTensor(S),h.push(S),C=this.texData.get(S.dataId);else if(C.isPacked&&!mp(C.shape,S.shape)){const $=S,T=S.shape;S.shape=C.shape,S=this.packedReshape(S,T),h.push(S),C=this.texData.get(S.dataId),$.shape=T}return{shape:S.shape,texData:C,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:u,isUniform:!1},m=EY(t,f,p),y=this.getAndSaveBinary(m,()=>kY(this.gpgpu,t,f,p)),b=this.activeTimers!=null;let v;b&&(v=this.startTimer()),at().get("ENGINE_COMPILE_ONLY")||IY(this.gpgpu,y,f,p,a),h.forEach(S=>this.disposeIntermediateTensorInfo(S)),b&&(v=this.endTimer(v),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(v)}));const w=at().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const S=Zn();S-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=S)}if(!at().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&r===!1){const S=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),S}return l}compileAndRun(t,e,s,a,r=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(at().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=nt(()=>{if(!at().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=at().getBool("DEBUG");at().set("DEBUG",!1);const e=this.abs(Lt(1e-8)).dataSync()[0];if(at().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?uQ:cQ}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:a,values:r,texture:i,usage:l,isPacked:u}=e;if(i!=null)return;const h=this.activeTimers!=null;let f;h&&(f=Zn());let p=e.texShape;if(p==null&&(p=F9(s,u),e.texShape=p),r!=null){const m=kf(s);let y,b=p[1],v=p[0];const w=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(u||!w)&&([b,v]=ru(p[0],p[1])),u?y=new FY(m,w):y=new y2(m,w);const S=w?[v,b]:p,C=this.makeTensorInfo(S,a),$=this.texData.get(C.dataId);w?$.usage=Es.PIXELS:$.usage=Es.UPLOAD,$.texShape=S,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(C.dataId),b,v,r);const T=[[v,b]],R=this.runWebGLProgram(y,[C],a,T,!0),F=this.texData.get(R.dataId);e.texShape=F.texShape,e.isPacked=F.isPacked,e.usage=F.usage,at().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(e.texture=F.texture,e.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(C),h&&(this.uploadWaitMs+=Zn()-f)}else{const m=this.acquireTexture(p,l,a,u);e.texture=m}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:a}=s;return e!=null&&(s.values=mQ(e,a)),s.values}acquireTexture(t,e,s,a){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*Gf(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(e),a(!0)}catch(r){throw r}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await uI(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(hD(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=gD(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=a,t.nanLoc=r,t.outShapeLocation=i,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:i,channels:l}=t,u=Fa().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const h=u.writeTexture(a,e,s,r,i,l);return Fa().makeTensorFromDataId(h,e,s,u)}}cg.nextDataId=0;function mQ(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */b$()&&w$("webgl",()=>new cg,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Io{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Pt(e,s),this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class cu{constructor(t,e,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pt(e,s);const r=this.outputShape.length;this.enableShapeUniforms=zn(r);let i="";if(a)if(r===0||ht(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${ge(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Wn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const gQ={kernelName:rh,backendName:"webgl",kernelFunc:ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ai(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(r.dataId),l=ys({inputs:{x:s},backend:e}),u=ys({inputs:{x:a},backend:e});return i.complexTensorInfos={real:l,imag:u},r}const yQ={kernelName:sx,backendName:"webgl",kernelFunc:Ai};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kD="return (a < 0.) ? b * a : a;",ID=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function bQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s,i=e.makeTensorInfo([],"float32",vi(r,"float32")),l=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu(ID,a.shape,i.shape):new Io(kD,a.shape,i.shape),u=e.runWebGLProgram(l,[a,i],"float32");return e.disposeIntermediateTensorInfo(i),u}const xQ={kernelName:Wp,backendName:"webgl",kernelFunc:bQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED="return (a < 0.) ? b * a : a;",AD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function vQ(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu(AD,s.shape,a.shape):new Io(ED,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],"float32")}const wQ={kernelName:lm,backendName:"webgl",kernelFunc:vQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hu="if (isnan(x)) return x;";function oe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,l=r,u=s||i.dtype;if(l.shouldExecuteOnCPU([i])&&e!=null){const p=l.texData.get(i.dataId),m=e(p.values,u);return l.makeTensorInfo(i.shape,u,m)}const h=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let f;return h?f=new ni(i.shape,t):f=new Ba(i.shape,n),l.runWebGLProgram(f,[i],u)}}function En({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:l})=>{const{a:u,b:h}=i,f=l;if(s&&u.dtype==="complex64"){const b=f.texData.get(u.dataId),v=f.texData.get(h.dataId),[w,S]=[[b.complexTensorInfos.real,v.complexTensorInfos.real],[b.complexTensorInfos.imag,v.complexTensorInfos.imag]].map($=>{const[T,I]=$,R={dataId:T.dataId,dtype:T.dtype,shape:u.shape},F={dataId:I.dataId,dtype:I.dtype,shape:h.shape},M=new Io(n,u.shape,h.shape);return f.runWebGLProgram(M,[R,F],ds(T.dtype,I.dtype))}),C=Ai({inputs:{real:w,imag:S},backend:f});return f.disposeIntermediateTensorInfo(w),f.disposeIntermediateTensorInfo(S),C}const p=r||ds(u.dtype,h.dtype);if((u.dtype==="string"||h.dtype==="string"||f.shouldExecuteOnCPU([u,h]))&&a!=null){const b=f.texData.get(u.dataId).values,v=f.texData.get(h.dataId).values,w=u.dtype==="string"?Cr(b):b,S=u.dtype==="string"?Cr(v):v,[C,$]=a(u.shape,h.shape,w,S,p),T=f.makeTensorInfo($,p),I=f.texData.get(T.dataId);return I.values=C,T}const m=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let y;return m?y=new cu(t,u.shape,h.shape,e):y=new Io(n,u.shape,h.shape),f.runWebGLProgram(y,[u,h],p)}}function Fc(n,t=!1){if(n==="linear")return t?nQ:ZZ;if(n==="relu")return t?aQ:JZ;if(n==="elu")return t?sQ:QZ;if(n==="relu6")return t?rQ:tQ;if(n==="prelu")return t?AD:ED;if(n==="leakyrelu")return t?ID:kD;if(n==="sigmoid")return t?iQ:eQ;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RD{constructor(t,e,s,a=!1,r=!1,i=!1,l=null,u=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=zn(this.outputShape.length);const f=a?t[1]:t[2],p=Math.ceil(f/2),m=a?"i * 2, rc.y":"rc.y, i * 2",y=r?"rc.z, i * 2":"i * 2, rc.z",b=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],v=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",S="";l&&(u?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:h?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:w=`vec4 activation(vec4 x) {
          ${l}
        }`,S="result = activation(result);");const C=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let $="rc.x",T="rc.x";t[0]<e[0]?$=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(T=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${$};
        int batchB = ${T};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${b[0]} * ${v[0]});
          result += (${b[1]} * ${v[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${C}

        ${S}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S2={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class N2{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C2="return a * b;";function ew(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=ds(s.dtype,a.dtype);if(s.dtype==="complex64"){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),h=new N2(S2.REAL,s.shape,a.shape),f=new N2(S2.IMAG,s.shape,a.shape),p=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Ai({inputs:{real:m,imag:y},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}if(e.shouldExecuteOnCPU([s,a])){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),[h,f]=vZ(s.shape,a.shape,l.values,u.values,r),p=e.makeTensorInfo(f,r),m=e.texData.get(p.dataId);return m.values=h,p}let i;return at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new cu(C2,s.shape,a.shape):i=new Io(C2,s.shape,a.shape),e.runWebGLProgram(i,[s,a],r)}const SQ={kernelName:ph,backendName:"webgl",kernelFunc:ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(n,t,e){const s=[jl(n.shape),...Xl(n.shape)],a={dtype:n.dtype,shape:s,dataId:n.dataId},r=[jl(t),...Xl(t)],i=new $D(r,s),l=!0,u=[s],h=e.runWebGLProgram(i,[a],n.dtype,u,l);return{dataId:h.dataId,shape:t,dtype:h.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=e,l=ht(a.shape),u=Q2(r,l),h=ht(u);_(l===h,()=>`The new shape (${u}) has ${h} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const f=i.texData.get(a.dataId);return f.isPacked&&!mp(a.shape,u)&&!(f.texture!==null&&mp(f.shape,u))?NQ(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}const CQ={kernelName:cm,backendName:"webgl",kernelFunc:St};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T2{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];const l=Math.floor(s/4)*4,u=s%4;let h="sumValue += dot(values, ones);";if(e!=null){const p=1/e;h=`sumValue += dot(values * ${zl(p)?p.toPrecision(2):p}, ones);`}let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${h}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TQ{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];let l="0.0",u="";e==="prod"?l="1.0":e==="min"?(l="1.0 / 1e-20",u="min"):e==="max"&&(l="-1.0 / 1e-20",u="max");let h=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?h="sumValue":e==="prod"?h="prodValue":e==="all"?h="allValue":e==="any"&&(h="anyValue");const f=Math.floor(s/4)*4,p=s%4;let m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,y="vec4";e==="all"?(l="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):e==="any"&&(l="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${b}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Q(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Xm(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Mo(n,t,e,s){const a=$Q(n.shape);let r=n;for(let i=0;i<a.length;i++){const{inSize:l,windowSize:u,outSize:h}=a[i];let f,p;e==="mean"?f=i===0?new T2({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},l):new T2({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h}):f=new TQ({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},e),p=r,r=s.runWebGLProgram(f,[r],t),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kQ{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const a=ge(this.rank),r=IQ(e);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function IQ(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<n.length;a++)s[n[a]]=e[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EQ{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let f=0;f<s.length;f++)s[f]=t[e[f]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=ge(this.rank),r=TD("rc",this.rank),i=new Array(this.rank);for(let f=0;f<e.length;f++)i[e[f]]=r[f];const l=`vec2(${i.slice(-2).join()})`,u=`++${r[this.rank-1]} < ${s[this.rank-1]}`,h=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${h};
      if(${u}) {
        result[1] = ${h};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${h};
        if(${u}) {
          result[3] = ${h};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n,t,e){const s=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EQ(n.shape,t):new kQ(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AQ(n,t,e,s){const a=t,r=n.shape.length,i=Xt(a,n.shape);let l=i;const u=_e(l,r),h=u!=null;let f=n;h&&(f=hg(n,u,s),l=qe(l.length,r)),kn("sum",l,r);const[p,m]=gn(f.shape,l);let y=p;e&&(y=He(p,i));const b=ht(m),w=ht(n.shape)/b,S=St({inputs:{x:f},attrs:{shape:[w,b]},backend:s}),C=e1(n.dtype),$=Mo(S,C,"sum",s),T=St({inputs:{x:$},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),h&&s.disposeIntermediateTensorInfo(f),T}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dg(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;return AQ(a,r,i,e)}const RQ={kernelName:gm,backendName:"webgl",kernelFunc:dg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{perm:r}=s,i=e,l=a.shape.length,u=new Array(l);for(let f=0;f<u.length;f++)u[f]=a.shape[r[f]];let h;if(i.shouldExecuteOnCPU([a])){const p=i.texData.get(a.dataId).values,m=Jv(p,a.shape,a.dtype,r,u);h=i.makeTensorInfo(u,a.dtype);const y=i.texData.get(h.dataId);y.values=m}else h=hg(a,r,i);return h}const DQ={kernelName:Al,backendName:"webgl",kernelFunc:Gn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD=1e3;function gp({a:n,b:t,transposeA:e,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}){const h=n.shape.length,f=t.shape.length,p=e?n.shape[h-2]:n.shape[h-1],m=s?t.shape[f-1]:t.shape[f-2],y=e?n.shape[h-1]:n.shape[h-2],b=s?t.shape[f-2]:t.shape[f-1],v=n.shape.slice(0,-2),w=t.shape.slice(0,-2),S=ht(v),C=ht(w),T=Pt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([y,b]);_(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[S,p,y]:[S,y,p],R=s?[C,b,m]:[C,m,b],F=St({inputs:{x:n},backend:a,attrs:{shape:I}}),M=St({inputs:{x:t},backend:a,attrs:{shape:R}}),D=[F,M],O=Math.max(S,C),A=e?F.shape[1]:F.shape[2],W=r!=null,K=i!=null,tt=u==="leakyrelu",Q=u!=null?Fc(u,!0):null,P=W||K||tt||Q!=null;let et;if((y===1||b===1)&&A>DD&&P===!1){let rt=F,B=M;e&&(rt=Gn({inputs:{x:F},backend:a,attrs:{perm:[0,2,1]}}),D.push(rt)),s&&(B=Gn({inputs:{x:M},backend:a,attrs:{perm:[0,2,1]}}),D.push(B));const j=b!==1,lt=b===1;let ot=rt;j&&(ot=St({inputs:{x:rt},backend:a,attrs:{shape:[O,A,1]}}),D.push(ot));const ut=b===1?2:1;let mt=B;lt&&(mt=St({inputs:{x:B},backend:a,attrs:{shape:[O,1,A]}}),D.push(mt));const bt=ew({inputs:{a:ot,b:mt},backend:a});et=dg({inputs:{x:bt},backend:a,attrs:{axis:ut,keepDims:!0}}),D.push(bt)}else{const rt=ds(n.dtype,t.dtype),B=new RD(I,R,[O,y,b],e,s,W,Q,K,tt),j=[F,M];if(r!=null&&j.push(r),K&&j.push(i),tt){const lt=a.makeTensorInfo([],"float32",vi(l,"float32"));j.push(lt),D.push(lt)}et=a.runWebGLProgram(B,j,rt)}const Y=St({inputs:{x:et},backend:a,attrs:{shape:T}});D.push(et);for(const rt of D)a.disposeIntermediateTensorInfo(rt);return Y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;return gp({a,b:r,transposeA:u,transposeB:h,backend:e,bias:i,preluActivationWeights:l,leakyreluAlpha:p,activation:f})}const _Q={kernelName:Hf,backendName:"webgl",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $2="return abs(x);";function FQ(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=e.texData.get(s.dataId),i=ND(r.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let a;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ni(s.shape,$2):a=new Ba(s.shape,$2),e.runWebGLProgram(a,[s],s.dtype)}const LQ={kernelName:wp,backendName:"webgl",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ=la+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,MQ=oe({opSnippet:zQ}),BQ={kernelName:Bc,backendName:"webgl",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VQ=la+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,PQ=oe({opSnippet:VQ}),UQ={kernelName:Vc,backendName:"webgl",kernelFunc:PQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k2="return a + b;",WQ=En({opSnippet:k2,packedOpSnippet:k2,supportsComplex:!0,cpuKernelImpl:JY}),GQ={kernelName:Ql,backendName:"webgl",kernelFunc:WQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HQ{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qQ{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return ys({inputs:{x:s[0]},backend:e});if(s.length>at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),h=Uf({inputs:s.slice(0,u),backend:e}),f=Uf({inputs:s.slice(u),backend:e});return Uf({inputs:[h,f],backend:e})}const a=s.map(u=>u.dtype).reduce((u,h)=>ds(u,h)),r=s.map(u=>u.shape),l=at().getBool("WEBGL_PACK")?new qQ(s[0].shape,r):new HQ(s[0].shape,r);return e.runWebGLProgram(l,s,a)}const jQ={kernelName:Sp,backendName:"webgl",kernelFunc:Uf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Gn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,l)),kn("all",h,l);const[m,y]=gn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Mo(v,v.dtype,"all",e);let S;if(i){const C=He(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const KQ={kernelName:Z0,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Gn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,l)),kn("any",h,l);const[m,y]=gn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Mo(v,v.dtype,"any",e);let S;if(i){const C=He(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const ZQ={kernelName:Q0,backendName:"webgl",kernelFunc:YQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QQ{constructor(t,e,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const l=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JQ{constructor(t,e,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const l=this.outputShape,u=l.length,h=ge(u),f=Wn("coords",u);let p,m;if(i===1){m=u+1;const M=ge(m);p=`
        ${M} sourceLocR = ${M}(${f.join()}, 0);
        ++${f[u-1]};
        ${M} sourceLocG = ${M}(${f.join()}, 0);
        ++${f[u-2]};
        ${M} sourceLocA = ${M}(${f.join()}, 0);
        --${f[u-1]};
        ${M} sourceLocB = ${M}(${f.join()}, 0);
        --${f[u-2]};`}else m=u,p=`
        ${h} sourceLocR = coords;
        ++${f[u-1]};
        ${h} sourceLocG = coords;
        ++${f[u-2]};
        ${h} sourceLocA = coords;
        --${f[u-1]};
        ${h} sourceLocB = coords;
        --${f[u-2]};`;const y=["x","y","z","w","u","v"].slice(0,m),b="."+y[m-1],v=y.map(M=>"int "+M),w=Wn("sourceLocR",m-1).concat("inIdx.r"),S=Wn("sourceLocG",m-1).concat("inIdx.g"),C=Wn("sourceLocB",m-1).concat("inIdx.b"),$=Wn("sourceLocA",m-1).concat("inIdx.a"),T=s==="max"?"greaterThan":"lessThan",I=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${C.join()}),
                             getBestIndicesAChannel(${$.join()})));`,R=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${S.join()}) : 0.,
            hasNextRow ? getAChannel(${C.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,F=a?"":`
      float getBestIndicesAChannel(${v.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${v.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${F}
      void main() {
        ${h} coords = getOutputCoords();
        bool hasNextCol = ${f[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${f[u-2]} < ${l[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${b}, sourceLocG${b},
          sourceLocB${b}, sourceLocA${b}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${R};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${R};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${T}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,t,e,s=null){let a=t.shape[0],r=t.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Xm(r),l={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},u=new QQ(l,e,s==null),h=[t];s!=null&&h.push(s);const f=n.runWebGLProgram(u,h,"int32");if(f.shape[1]===1)return f;const p=OD(n,t,e,f);return n.disposeIntermediateTensorInfo(f),p}function _D(n,t,e,s=null){const a=s!=null?s.shape:t.shape,r=a[a.length-1],i=Xm(r),l=new JQ(a,i,e,s==null),u=s==null?[t]:[t,s],h=n.runWebGLProgram(l,u,"int32");if(h.shape.length===t.shape.length){const f=_D(n,t,e,h);return n.disposeIntermediateTensorInfo(h),f}return h}function FD(n,t,e,s){const a=[e];if(kn("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!at().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],i=n.texData.get(t.dataId),l=i!==null&&i.isPacked;let u=t;l&&(u=n.unpackTensor(t),r.push(u));const[h,f]=gn(u.shape,a),p=ht(f),m=St({inputs:{x:u},backend:n,attrs:{shape:[-1,p]}});r.push(m);const y=OD(n,m,s);r.push(y);const b=St({inputs:{x:y},backend:n,attrs:{shape:h}});return r.forEach(v=>n.disposeIntermediateTensorInfo(v)),b}return _D(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Xt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Gn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),kn("argMax",[i[0]],u.shape.length);const f=FD(e,u,i[0],"max");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const eJ={kernelName:Np,backendName:"webgl",kernelFunc:tJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Xt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Gn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),kn("argMin",[i[0]],u.shape.length);const f=FD(e,u,i[0],"min");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const sJ={kernelName:Cp,backendName:"webgl",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=la+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,rJ=oe({opSnippet:aJ}),iJ={kernelName:Pc,backendName:"webgl",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ=la+"return log(x + sqrt(x * x + 1.0));",lJ=oe({opSnippet:oJ}),uJ={kernelName:Uc,backendName:"webgl",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cJ=la+`
  return atan(x);
`,hJ=oe({opSnippet:cJ}),dJ={kernelName:Wc,backendName:"webgl",kernelFunc:hJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fJ=tw+`
  return atan(a, b);
`,pJ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,mJ=En({opSnippet:fJ,packedOpSnippet:pJ}),gJ={kernelName:Hc,backendName:"webgl",kernelFunc:mJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ=la+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,bJ=oe({opSnippet:yJ}),xJ={kernelName:Gc,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lc{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg",w=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,S=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let C="0.0";if(v||(C="-1.0 / 1e-20"),s){const M=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${y}, ${b});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${f}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?w:S:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let T=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(T="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,R=i%4,F=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${y}, ${b});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${h}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${f};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              getValue(batch, xR, xC + 3 * ${f}, d)
            );

            ${F}
          }

          int xC = xCCorner + ${I};
          if (${R===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${R===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${R===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              initializationValue
            );

            ${F}
          }
        }
        setOutput(${T});
      }
    `}}class nw{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,u=t.strideHeight,h=t.strideWidth,f=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterDepth,b=t.effectiveFilterHeight,v=t.effectiveFilterWidth,w=t.padInfo.front,S=t.padInfo.top,C=t.padInfo.left;this.outputShape=t.outShape;const $=e==="avg";let T="0.0";if($||(T="-1.0 / 1e-20"),s){const O=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${h});
        const ivec3 pads = ivec3(${w}, ${S}, ${C});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${f}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${b};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${v};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${O} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${b} * ${v} +
                      wR * ${v} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let R=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(R="avgValue / max(count, 1.0)");const F=Math.floor(i/4)*4,M=i%4,D=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${h});
      const ivec3 pads = ivec3(${w}, ${S}, ${C});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${f}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${F}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${D}
            }

            int xC = xCCorner + ${F};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${D}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${D}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${D}
            }
          }
        }
        setOutput(${R});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;ed(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;_($n(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ia(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&te(f.inShape,f.outShape))return ys({inputs:{x:a},backend:e});const p=new Lc(f,"avg",!1);return e.runWebGLProgram(p,[a],"float32")}const wJ={kernelName:Tp,backendName:"webgl",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s,f=[1,1,1],p=Tr(a.shape,r,i,f,l,u,h),m=new nw(p,"avg",!1);return e.runWebGLProgram(m,[a],"float32")}const NJ={kernelName:$p,backendName:"webgl",kernelFunc:SJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=u-1-t.padInfo.top,p=h-1-t.padInfo.left,m=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${f}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${h};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class TJ{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,y=t.effectiveFilterWidth,b=p-1-t.padInfo.front,v=m-1-t.padInfo.top,w=y-1-t.padInfo.left,S=1/(e*s*a);this.userCode=`
      const ivec3 pads = ivec3(${b}, ${v}, ${w});
      const float avgMultiplier = float(${S});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${h}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${f}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Tr(i.shape,l,u,p,h,f),y=new TJ(m);return e.runWebGLProgram(y,[a],i.dtype)}const kJ={kernelName:tx,backendName:"webgl",kernelFunc:$J};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;ed([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=ia(i.shape,l,u,1,h),p=new CJ(f);return e.runWebGLProgram(p,[a],i.dtype)}const EJ={kernelName:J0,backendName:"webgl",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;return gp({a,b:r,transposeA:i,transposeB:l,backend:e})}const RJ={kernelName:kp,backendName:"webgl",kernelFunc:AJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DJ{constructor(t,e,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="0.0";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OJ{constructor(t,e,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="vec4(0.0)";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _J=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:a,variance:r,offset:i,scale:l}=n;_(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(l==null||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const h=[s,a,r];let f=null;i!=null&&(f=i.shape,h.push(i));let p=null;l!=null&&(p=l.shape,h.push(l));const m=at().getBool("WEBGL_PACK_NORMALIZATION")?new OJ(s.shape,a.shape,r.shape,f,p,u):new DJ(s.shape,a.shape,r.shape,f,p,u);return t.runWebGLProgram(m,h,h[0].dtype)},FJ={kernelName:Vp,backendName:"webgl",kernelFunc:_J};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LJ{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=zJ(this.rank);let a;const r=t.map((i,l)=>`sourceLoc.${G0[l]} = start[${l}] + coords.${G0[l]};`);a=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}}const G0=["x","y","z","w","u","v"];function zJ(n){if(n===1)return"sourceLoc";if(n<=6)return G0.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MJ{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ge(this.rank),s=Wn("coords",this.rank),a=Wn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,l=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,h=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((f,p)=>`start[${p}]`).join()});`:t.map((f,p)=>`${a[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${h}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BJ(n,t,e,s){const a=s.texData.get(n.dataId),r=s.makeTensorInfo(e,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=e,i.dtype=n.dtype;let l=Y1(t,Ft(n.shape));a.slice&&(l+=a.slice.flatOffset),i.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||n.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),r}function du(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s,[l,u]=jm(a,r,i);if(j1(a,l,u),ht(u)===0)return e.makeTensorInfo(u,a.dtype,[]);if(e.shouldExecuteOnCPU([a])||a.dtype==="string"){const p=e.texData.get(a.dataId),m=RZ(p.values,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,m)}const{isPacked:h}=e.texData.get(a.dataId),f=K1(a.shape,l,u);if(h||!f){const p=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MJ(u):new LJ(u),m=[l];return e.runWebGLProgram(p,[a],a.dtype,m)}return e.uploadToGPU(a.dataId),BJ(a,l,u,e)}const VJ={kernelName:mm,backendName:"webgl",kernelFunc:du};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PJ=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;_(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((C,$)=>C*$),u=Uh(a.shape,r,l),h=Wh(u.length,r.length),f=Gh(a.shape,r,l),p=ev(i,r.length),m=nv(f,i,r.length),y=[],b=St({inputs:{x:a},backend:e,attrs:{shape:u}}),v=Gn({inputs:{x:b},backend:e,attrs:{perm:h}}),w=St({inputs:{x:v},backend:e,attrs:{shape:f}}),S=du({inputs:{x:w},backend:e,attrs:{begin:p,size:m}});return y.push(b),y.push(v),y.push(w),y.forEach(C=>e.disposeIntermediateTensorInfo(C)),S},UJ={kernelName:Ip,backendName:"webgl",kernelFunc:PJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.readSync(a.dataId),u=e.readSync(r.dataId),h=SD(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const GJ={kernelName:ex,backendName:"webgl",kernelFunc:WJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,qJ=`
  return float(int(a.r) & int(b.r));
`;function jJ(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=at().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,a])||i===1){const u=e.texData.get(s.dataId).values,h=e.texData.get(a.dataId).values,[f,p]=eZ(s.shape,a.shape,u,h,s.dtype),m=e.makeTensorInfo(p,s.dtype),y=e.texData.get(m.dataId);return y.values=f,m}let l;return r?l=new cu(HJ,s.shape,a.shape,!1):l=new Io(qJ,s.shape,a.shape),e.runWebGLProgram(l,[s,a],s.dtype)}const XJ={kernelName:Ep,backendName:"webgl",kernelFunc:jJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.readSync(s.dataId),i=e.readSync(a.dataId),l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const YJ={kernelName:nx,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZJ="return float(a != b);",LD=En({opSnippet:ZJ,cpuKernelImpl:SZ,dtype:"bool"}),QJ={kernelName:sm,backendName:"webgl",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sd(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ys({inputs:{x:a.complexTensorInfos.real},backend:e})}const JJ={kernelName:Fx,backendName:"webgl",kernelFunc:sd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ttt="return float(int(x));";function ett(n,t){const e=new Ba(n.shape,ttt),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return ys({inputs:{x:a},backend:e});const i=en(a.shape),l=H0({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),u=Ai({inputs:{real:l,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(l),u}if(a.dtype==="complex64"){const i=sd({inputs:{input:a},backend:e}),l=H0({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),l}if(!J2(a.dtype,r)){const i=ys({inputs:{x:a},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(e.shouldExecuteOnCPU([a])){const i=e.texData.get(a.dataId).values,[l,u,h]=nZ(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}if(r==="int32")return ett(a,e);if(r==="bool"){const i=e.makeTensorInfo([],"bool",Cn("bool",1)),u=LD({inputs:{a,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const ntt={kernelName:qc,backendName:"webgl",kernelFunc:H0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2="return ceil(x);",stt=oe({opSnippet:I2,packedOpSnippet:I2,cpuKernelImpl:sZ}),att={kernelName:jc,backendName:"webgl",kernelFunc:stt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rtt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class itt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ott(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{clipValueMin:r,clipValueMax:i}=s;let l;at().getBool("WEBGL_PACK_CLIP")?l=new itt(a.shape):l=new rtt(a.shape);const u=[[r],[i]];return e.runWebGLProgram(l,[a],a.dtype,u)}const ltt={kernelName:Xc,backendName:"webgl",kernelFunc:ott};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class utt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function ctt(n){const{inputs:t,backend:e}=n,{x:s}=t,a=e.texData.get(s.dataId),r=new utt(s.shape),i=[E2(s,a.complexTensorInfos.real),E2(s,a.complexTensorInfos.imag)];return e.runWebGLProgram(r,i,i[0].dtype)}const htt={kernelName:Ap,backendName:"webgl",kernelFunc:ctt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dtt{constructor(t){this.outputShape=[],this.outputShape=Pa(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const l=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const a=e.length,r=e[e.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ftt{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Pa(t,e);const s=this.outputShape,a=s.length,r=ge(a),i=Wn("coords",a),l=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map((v,w)=>`T${w}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let v=1;v<u.length;v++)u[v]=u[v-1]+t[v][e];const h=l[e],f=l.slice(-2),p=l.join();let m=`if (${h} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${f.join()}));
        }`;for(let v=1;v<u.length;v++){const w=u[v-1];m+=`
        if (${h} < ${u[v]}  && ${h} >= ${u[v-1]}) {
          return getChannel(
            getT${v}(${Af(l,h,w)}),
            vec2(${Af(f,h,w)}));
        }`}const y=u.length,b=u[u.length-1];m+=`
        return getChannel(
          getT${y}(${Af(l,h,b)}),
          vec2(${Af(f,h,b)}));`,this.userCode=`
      float getValue(${l.map(v=>"int "+v)}) {
        ${m}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Af(n,t,e){const s=n.indexOf(t);return n.map((r,i)=>i===s?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fg(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ys({inputs:{x:a.complexTensorInfos.imag},backend:e})}const ptt={kernelName:wx,backendName:"webgl",kernelFunc:fg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wc(n,t,e){const s=n[0].dtype;if(s==="complex64"){const y=n.map(C=>sd({inputs:{input:C},backend:e})),b=n.map(C=>fg({inputs:{input:C},backend:e})),v=wc(y,t,e),w=wc(b,t,e),S=Ai({inputs:{real:v,imag:w},backend:e});return y.forEach(C=>e.disposeIntermediateTensorInfo(C)),b.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),S}let a=e.shouldExecuteOnCPU(n);if(s==="string"&&(a=!0),a){const y=n.map(T=>{const R=[-1,ht(T.shape.slice(t))];return St({inputs:{x:T},backend:e,attrs:{shape:R}})}),b=y.map(T=>({vals:e.readSync(T.dataId),shape:T.shape})),v=Pa(y.map(T=>T.shape),1),w=y[0].shape[0]===1,S=aZ(b,v,s,w),C=Pa(n.map(T=>T.shape),t),$=e.makeTensorInfo(C,s,S);return y.forEach(T=>e.disposeIntermediateTensorInfo(T)),$}const r=n.filter(y=>ht(y.shape)>0),i=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const y=i?new Ba(n[0].shape,Jr):new ni(n[0].shape,Jr);return e.runWebGLProgram(y,n,s)}const l=at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>l){const y=[];for(let v=0;v<r.length;v+=l){const w=r.slice(v,v+l);y.push(wc(w,t,e))}const b=wc(y,t,e);for(const v of y)e.disposeIntermediateTensorInfo(v);return b}if(i){const y=new ftt(r.map(b=>b.shape),t);return e.runWebGLProgram(y,r,s)}const{tensors2D:u,outShape:h}=mtt(r,t,e),f=new dtt(u.map(y=>y.shape)),p=e.runWebGLProgram(f,u,s);u.forEach(y=>e.disposeIntermediateTensorInfo(y));const m=St({inputs:{x:p},attrs:{shape:h},backend:e});return e.disposeIntermediateTensorInfo(p),m}function mtt(n,t,e){const s=Pa(n.map(r=>r.shape),t);return{tensors2D:n.map(r=>St({inputs:{x:r},attrs:{shape:[-1,ht(r.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Xt(a,t[0].shape)[0],i=t.map(h=>h.shape);Q1(i,r);const l=Pa(t.map(h=>h.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(h=>ht(h.shape)>0);return u.length===1?ys({inputs:{x:u[0]},backend:e}):wc(u,r,e)}const gtt={kernelName:Rp,backendName:"webgl",kernelFunc:zD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,f=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4,w=t.dataFormat==="channelsLast",S=w?1:2,C=w?2:3,$=w?3:1;let T="",I="";s&&(a?T=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?T=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:T=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const R=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${T}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${S}], coords[${C}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${b}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${v===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${b}) *
                    getW(wR, wC, ${b}, d2);
              } else {
                dotProd +=
                    getX(batch, ${b}, xR, xC) *
                    getW(wR, wC, ${b}, d2);
              }

            } else if (${v===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${v===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2),
                getW(wR, wC, ${b} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1),
                  getX(batch, xR, xC, ${b} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC),
                  getX(batch, ${b} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${R}
        ${I}
        setOutput(result);
      }
    `}}class ytt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${l});
      const ivec3 pads = ivec3(${e}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${h};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${f};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${b}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${v===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${b}) *
                  getW(wF, wR, wC, ${b}, d2);
              } else if (${v===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${v===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1),
                  getX(batch, xF, xR, xC, ${b} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2),
                  getW(wF, wR, wC, ${b} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,p=f;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<f;w++)m+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;m+=`
     for (int r = 0; r < ${h}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let w=0;w<f;w++)m+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(p+1)/2;w++){const S=w*2;if(m+=`
           xC = xCCorner + ${S*u};
           `,l===1){if(S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }
               `,u===1&&S>0?m+=`
                 xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                   } else {
                     xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xC${S} = xTexelC${S};
                 `,S+1<f)){const C=i%2===0?X0(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${C};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                     xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${S+1}.zw = vec2(0.0);
                     }
                     xTexelC${S+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                     } else {
                      xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                     }
                     `:m+=`
                     xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                     `):C===1?m+=`
                     xC${S+1} = xTexelC${S};
                     `:m+=`
                     xCOffset = xC + ${C};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                       xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${S+1}.zw = vec2(0.0);
                       }
                       xTexelC${S+1}Ready = 1;
                     }

                     xC${S+1} = xTexelC${S+1};
                     `}}else S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.0);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
               `,S+1<f&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(
                   xTexelC${S}.xy, xTexelC${S+1}.xy);
               `,S+1<f&&(m+=`
                   xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                 `)));S<f&&(m+=`
             wTexel = getW(r, ${S}, d1, d2);
             dotProd += xC${S}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${S}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,S+1<f&&(m+=`
               wTexel = getW(r, ${S+1}, d1, d2);
               dotProd += xC${S+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${S+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let y="",b="";s&&(a?y=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?y=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:y=`vec4 activation(vec4 x) {
           ${s}
         }`,b="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${y}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${v}
         ${b}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class btt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=zn(this.outputShape.length);const{dataFormat:s}=e,a=qn(),r=s==="channelsLast",i=r?1:2,l=r?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let h="";for(let f=0;f<=1;f++)for(let p=0;p<=1;p++)h+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${f};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${h}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function VD({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape,h=s.texData.get(n.dataId),f=e.inChannels,p=u[0]*u[1]*u[2],m=e.outChannels,y=e.dataFormat==="channelsLast",b=!1,v=!1;let w;const S=[];if(r!=null){const T=yp(r.shape,y);T!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:T}}),S.push(r))}if(a!=null){const T=yp(a.shape,y);T!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:T}}),S.push(a))}if(!((p===1||m===1)&&f>DD)&&h.isPacked&&y&&h.texture!=null&&u[2]%2!==0&&te(h.shape.slice(-3),u.slice(-3))){const T=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,T,e.inChannels],dtype:n.dtype},R=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,_(mp(h.shape,I.shape),()=>`packed reshape ${h.shape} to ${I.shape} isn't free`);const F=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});S.push(F);const M=gp({a:I,b:F,backend:s,transposeA:b,transposeB:v,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i}),D=s.texData.get(M.dataId);_(D.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=R,D.shape=e.outShape,w=ys({inputs:{x:M},backend:s}),w.shape=e.outShape,S.push(M)}else{const T=e.outHeight*e.outWidth,I=St({inputs:{x:n},backend:s,attrs:{shape:y?[e.batchSize,T,e.inChannels]:[e.batchSize,e.inChannels,T]}}),R=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),F=gp({a:y?I:R,b:y?R:I,transposeA:!y,transposeB:v,backend:s,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i});w=St({inputs:{x:F},backend:s,attrs:{shape:e.outShape}}),S.push(I),S.push(R),S.push(F)}for(const T of S)s.disposeIntermediateTensorInfo(T);return w}function PD({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:u,filterHeight:h,inChannels:f,outWidth:p,outHeight:m,dataFormat:y}=e,b=y==="channelsLast",v=u*h*f,w=m*p,S=[e.batchSize,v,w],C=!0,$=!1,T=[];if(r!=null){const Y=yp(r.shape,b);Y!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:Y}}),T.push(r))}if(a!=null){const Y=yp(a.shape,b);Y!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:Y}}),T.push(a))}const I=St({inputs:{x:t},backend:s,attrs:{shape:[1,v,ht(t.shape)/v]}});T.push(I);const R=new btt(S,e),F=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],M=s.runWebGLProgram(R,[n],"float32",F),D=St({inputs:{x:M},backend:s,attrs:{shape:S}});T.push(M),T.push(D);const O=a!=null,A=r!=null,W=l==="leakyrelu",K=l?Fc(l,!0):null,tt=new RD(b?D.shape:I.shape,b?I.shape:D.shape,b?[e.batchSize,w,e.outChannels]:[e.batchSize,e.outChannels,w],C,$,O,K,A,W),Q=b?[D,I]:[I,D];if(a&&Q.push(a),A&&Q.push(r),W){const Y=s.makeTensorInfo([],"float32",vi(i,"float32"));Q.push(Y),T.push(Y)}const P=s.runWebGLProgram(tt,Q,"float32"),et=St({inputs:{x:P},backend:s,attrs:{shape:e.outShape}});T.push(P);for(const Y of T)s.disposeIntermediateTensorInfo(Y);return et}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s,p=$r(u),m=mn(a.shape,r.shape,i,h,l,f,!1,p);let y;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=VD({x:a,filter:r,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const v=new BD(m),w=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];y=e.runWebGLProgram(v,[a,r],"float32",w)}else if(at().getBool("WEBGL_CONV_IM2COL"))y=PD({x:a,filter:r,convInfo:m,backend:e});else{const v=new MD(m);y=e.runWebGLProgram(v,[a,r],"float32")}const b=St({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(y),b}const vtt={kernelName:Dp,backendName:"webgl",kernelFunc:xtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wtt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Stt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dataFormat==="channelsLast",l=e-1-t.padInfo.top,u=s-1-t.padInfo.left,h=i?1:2,f=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ntt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ctt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=e-1-t.padInfo.front,h=s-1-t.padInfo.top,f=a-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ttt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s,p=$r(u),m=mn(a.shape,f,i,1,l,h,!1,p),y=new wtt(m);return e.runWebGLProgram(y,[a,r],"float32")}const $tt={kernelName:ax,backendName:"webgl",kernelFunc:Ttt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ktt{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=zn(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,a=e-1-t.padInfo.top,r=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Itt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s,p=$r(h),m=mn(i,r.shape,l,1,u,f,!1,p);if(at().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const y=[[m.strideHeight,m.strideWidth]],b=new ktt(m);return e.runWebGLProgram(b,[a,r],"float32",y)}else{const y=new Stt(m);return e.runWebGLProgram(y,[a,r],"float32")}}const Ett={kernelName:Op,backendName:"webgl",kernelFunc:Itt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Att(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=Ni(a.shape,r.shape,i,u,l),f=new ytt(h);return e.runWebGLProgram(f,[a,r],"float32")}const Rtt={kernelName:_p,backendName:"webgl",kernelFunc:Att};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s,h=Ni(a.shape,u,i,1,l),f=new Ntt(h);return e.runWebGLProgram(f,[a,r],"float32")}const Ott={kernelName:rx,backendName:"webgl",kernelFunc:Dtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _tt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s,h=Ni(u,r.shape,l,1,i),f=new Ctt(h);return e.runWebGLProgram(f,[a,r],"float32")}const Ftt={kernelName:ix,backendName:"webgl",kernelFunc:_tt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ltt=hu+`
  return cos(x);
`,ztt=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${zo}
  return result;
`,Mtt=oe({opSnippet:Ltt,packedOpSnippet:ztt}),Btt={kernelName:Kc,backendName:"webgl",kernelFunc:Mtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vtt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Ptt=oe({opSnippet:Vtt}),Utt={kernelName:Yc,backendName:"webgl",kernelFunc:Ptt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wtt{constructor(t,e,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,u,h]=t,[f]=e,[p,m]=s;this.outputShape=[f,p,m,h];const y=a==="bilinear"?1:0,[b,v]=[`${l-1}.0`,`${u-1}.0`],[w,S,C]=p>1?[`${(l-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${b} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${b}`],[$,T,I]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${v} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${v}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${S};
        float width_scale = ${T};

        float in_y = ${C};
        if( in_y < 0.0 || in_y > ${b} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${v} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gtt=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,f=new Wtt(a.shape,r.shape,l,u,h);return e.runWebGLProgram(f,[a,r,i],"float32")},Htt={kernelName:lx,backendName:"webgl",kernelFunc:Gtt};var zc;(function(n){n.Prod="*",n.Sum="+"})(zc||(zc={}));class A2{constructor(t,e,s,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===zc.Prod?"1.0":"0.0",l=s?i:`getX(${R2(r,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let h="",f="";s?(h=a?`end != ${u-1}`:"end != 0",f=a?"end + 1":"end - 1"):(h=a?`end + pow2 < ${u}`:"end >= pow2",f=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ge(r)} coords = getOutputCoords();
        int end = ${D2(r,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${h}) {
          int idx = ${f};
          ${D2(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${R2(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function R2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function D2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(n,t,e,s,a,r){const i=t.shape.length,l=_e([s],i);let u=t;l!=null&&(u=Gn({inputs:{x:t},backend:e,attrs:{perm:l}}));const h=qe(1,i)[0];if(h!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const f=u.shape[h];let p=ys({inputs:{x:u},backend:e});for(let m=0;m<=Math.ceil(Math.log2(f))-1;m++){const y=new A2(n,u.shape,!1,r),b=[[m]],v=p;p=e.runWebGLProgram(y,[p],p.dtype,b),e.disposeIntermediateTensorInfo(v)}if(a){const m=new A2(n,u.shape,a,r),y=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(y)}if(l!=null){const m=Ci(l),y=Gn({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return UD(zc.Prod,a,e,r,i,l)}const jtt={kernelName:ox,backendName:"webgl",kernelFunc:qtt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return UD(zc.Sum,a,e,r,i,l)}const Ktt={kernelName:Fp,backendName:"webgl",kernelFunc:Xtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ytt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=SD(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=tZ(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const Ztt={kernelName:ux,backendName:"webgl",kernelFunc:Ytt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qtt{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s,l=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],h=i==="NHWC"?a.shape[2]:a.shape[3],f=i==="NHWC"?a.shape[3]:a.shape[1],p=u*r,m=h*r,y=f/(r*r),b=i==="NHWC"?[l,p,m,y]:[l,y,p,m],v=new Qtt(b,r,i);return e.runWebGLProgram(v,[a],a.dtype)}const tet={kernelName:cx,backendName:"webgl",kernelFunc:Jtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,u=t.outChannels/t.inChannels;let h="",f="";s&&(a?h=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?h=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:h=`
          float activation(float x) {
            ${s}
          }
        `,f="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,u=t.strideWidth,h=t.dilationWidth,f=t.filterHeight,p=t.filterWidth,m=p;let y=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let S=0;S<p;S++)y+=`
          vec4 xTexelC${S*2};
          int xTexelC${S*2}Ready;
          vec4 xTexelC${S*2+1};
          int xTexelC${S*2+1}Ready;
          vec4 xC${S};`;y+=`
    for (int r = 0; r < ${f}; r++) {
      `;for(let S=0;S<p;S++)y+=`
          xTexelC${S*2} = vec4(0.0);
          xTexelC${S*2}Ready = 0;
          xTexelC${S*2+1} = vec4(0.0);
          xTexelC${S*2+1}Ready = 0;
          xC${S} = vec4(0.0);`;y+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let S=0;S<(m+1)/2;S++){const C=S*2;if(y+=`
          xC = xCCorner + ${C*h};
          `,u===1){if(C<p&&(l%2===1?(y+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }
              `,h===1&&C>0?y+=`
                xC${C} = vec4(xTexelC${C-2}.zw, xTexelC${C}.xy);
                `:y+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${C} = vec4(previous.zw, xTexelC${C}.xy);
                  } else {
                    xC${C} = vec4(0.0, 0.0, xTexelC${C}.xy);
                  }
                  `):y+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                xC${C} = xTexelC${C};
                `,C+1<p)){const $=l%2===0?X0(h):h;h%2===0&&l%2===1||h%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                    xTexelC${C+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${C+1}.zw = vec2(0.0);
                    }
                    xTexelC${C+1}Ready = 1;
                  }
                  `,h>1?y+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${C+1} = vec4(previous.zw, xTexelC${C+1}.xy);
                    } else {
                     xC${C+1} = vec4(0.0, 0.0, xTexelC${C+1}.xy);
                    }
                    `:y+=`
                    xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.xy);
                    `):$===1?y+=`
                    xC${C+1} = xTexelC${C};
                    `:y+=`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                      xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${C+1}.zw = vec2(0.0);
                      }
                      xTexelC${C+1}Ready = 1;
                    }

                    xC${C+1} = xTexelC${C+1};
                    `}}else C<p&&(l%2===1?(y+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${C+1}Ready == 0) {
                  xTexelC${C+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${C+1}.zw = vec2(0.0);
                  }
                  xTexelC${C+1}Ready = 1;
                }

                xC${C} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
              `,C+1<p&&(y+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${C+1} = vec4(xTexelC${C+1}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                  xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C+1}.zw = vec2(0.);
                  }
                  xTexelC${C+1}Ready = 1;
                }

                xC${C} = vec4(
                  xTexelC${C}.xy, xTexelC${C+1}.xy);
              `,C+1<p&&(y+=`
                  xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
                `)));C<p&&(y+=`
            wTexel = getW(r, ${C}, d1, q);
            dotProd += xC${C} * vec4(wTexel.xz, wTexel.xz);
          `,C+1<p&&(y+=`
              wTexel = getW(r, ${C+1}, d1, q);
              dotProd += xC${C+1} * vec4(wTexel.xz, wTexel.xz);
            `))}y+=`
    }
  `,y+=`
      }
    `;let b="",v="";s&&(a?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${y}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;let f=u;f==null&&(f=[1,1]),_($n(i,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${f}'`);const p=mn(a.shape,r.shape,i,f,l,h,!0);let m;at().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new GD(p):m=new WD(p);const y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[a,r],"float32",y)}const net={kernelName:Lp,backendName:"webgl",kernelFunc:eet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class set{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class aet{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ret(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s,p=mn(a.shape,f,i,l,u,h,!0),m=new set(p);return e.runWebGLProgram(m,[a,r],"float32")}const iet={kernelName:hx,backendName:"webgl",kernelFunc:ret};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oet(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s,p=mn(f,r.shape,i,l,u,h,!0),m=new aet(p);return e.runWebGLProgram(m,[a,r],"float32")}const uet={kernelName:dx,backendName:"webgl",kernelFunc:oet};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cet{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function het(n){const{inputs:t,backend:e}=n,{x:s}=t,a=[...s.shape,...s.shape],r=ht(s.shape),i=St({inputs:{x:s},backend:e,attrs:{shape:[r]}}),l=new cet(r),u=e.runWebGLProgram(l,[i],i.dtype),h=St({inputs:{x:u},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),h}const det={kernelName:fx,backendName:"webgl",kernelFunc:het};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fet{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:l,filterWidth:u,dilationHeight:h,dilationWidth:f}=t,{top:p,left:m}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${h};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${f};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=Fh(a.shape,r.shape,i,l,"NHWC",u);let f;const p=new fet(h);f=e.runWebGLProgram(p,[a,r],"float32");const m=St({inputs:{x:f},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(f),m}const met={kernelName:zp,backendName:"webgl",kernelFunc:pet};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function get(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=cv(a,r.length);dv(i.length,u,r);const{path:h,steps:f}=fv(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of f[v]){const{permutationIndices:S,expandDims:C}=hv(y,u[w]);let $;pv(S)?$=r[w]:($=Gn({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const T=$.shape.slice();for(let I=0;I<C.length;++I)T.splice(C[I],0,1);te($.shape,T)||($=St({inputs:{x:$},backend:e,attrs:{shape:T}}),b.push($)),m===null?m=$:(m=ew({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=dg({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const yet={kernelName:px,backendName:"webgl",kernelFunc:get};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bet="return (x >= 0.0) ? x : (exp(x) - 1.0);",xet=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,vet=oe({opSnippet:bet,packedOpSnippet:xet}),wet={kernelName:Qc,backendName:"webgl",kernelFunc:vet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Net="return (b >= 0.0) ? a : a * (b + 1.0);",Cet=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Tet=n=>{const{inputs:t,backend:e}=n,{dy:s,y:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu(Cet,s.shape,a.shape):new Io(Net,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],s.dtype)},$et={kernelName:mx,backendName:"webgl",kernelFunc:Tet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ket=`
  return vec4(equal(a, b));
`,Iet="return float(a == b);",Eet=En({opSnippet:Iet,packedOpSnippet:ket,dtype:"bool",cpuKernelImpl:rZ}),Aet={kernelName:Mp,backendName:"webgl",kernelFunc:Eet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ret=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${sv};
  float a1 = ${av};
  float a2 = ${rv};
  float a3 = ${iv};
  float a4 = ${ov};
  float a5 = ${lv};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Det=oe({opSnippet:Ret}),Oet={kernelName:Jc,backendName:"webgl",kernelFunc:Det};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _et=hu+`
  return exp(x);
`,Fet=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HD=oe({opSnippet:_et,packedOpSnippet:Fet,cpuKernelImpl:iZ,dtype:"float32"}),Let={kernelName:th,backendName:"webgl",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(n){const{inputs:t,attrs:e,backend:s}=n,{dim:a}=e,{input:r}=t,i=r.shape.length,l=r.shape.slice();let u=a;return a<0&&(_(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),l.splice(u,0,1),St({inputs:{x:r},backend:s,attrs:{shape:l}})}const zet={kernelName:Bp,backendName:"webgl",kernelFunc:q0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2="return exp(x) - 1.0;",Met=oe({opSnippet:O2,packedOpSnippet:O2,cpuKernelImpl:oZ}),Bet={kernelName:eh,backendName:"webgl",kernelFunc:Met};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _2{constructor(t,e,s){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n,t,e){const s=e.texData.get(n.dataId),a=ht(n.shape),r=n.shape[n.shape.length-1],i=a/r,l=St({inputs:{x:n},backend:e,attrs:{shape:[i,r]}}),u=l.shape,h=new _2("real",u,t),f=new _2("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Ai({inputs:{real:m,imag:y},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y);const v=St({inputs:{x:b},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(b),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vet(n){const{inputs:t,backend:e}=n,{input:s}=t;return qD(s,!1,e)}const Pet={kernelName:gx,backendName:"webgl",kernelFunc:Vet};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uet{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ad(n){const{backend:t,attrs:e}=n,{shape:s,value:a}=e;let{dtype:r}=e;if(r=r||Yl(a),r==="string"){const i=Ge(r,ht(s));return i.fill(a),t.makeTensorInfo(s,r,i)}else{const i=new Uet(s,a),l=[[a]];return t.runWebGLProgram(i,[],r,l)}}const Wet={kernelName:yx,backendName:"webgl",kernelFunc:ad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Get{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Het={kernelName:bx,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,a=new Get(e.shape);return s.runWebGLProgram(a,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F2="return floor(x);",qet=oe({opSnippet:F2,packedOpSnippet:F2,cpuKernelImpl:lZ}),jet={kernelName:nh,backendName:"webgl",kernelFunc:qet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xet=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Ket=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Yet=En({opSnippet:Xet,packedOpSnippet:Ket,dtype:"int32"}),Zet={kernelName:sh,backendName:"webgl",kernelFunc:Yet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qet{constructor(t){this.variableNames=["A"];const e=qn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jet{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=qn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tnt={kernelName:e0,backendName:"webgl",kernelFunc:ent};let Nl,jb=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ent(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:a}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],f=[h,u],p=[h,u,r];if(l||i){const v=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nl==null||v!==jb)&&(jb=v,Nl=document.createElement("canvas").getContext("2d",{willReadFrequently:jb})),Nl.canvas.width=u,Nl.canvas.height=h,Nl.drawImage(a,0,0,u,h),a=Nl.canvas}const m=e.makeTensorInfo(f,"int32");e.texData.get(m.dataId).usage=Es.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),a);const y=at().getBool("WEBGL_PACK")?new Jet(p):new Qet(p),b=e.runWebGLProgram(y,[m],"int32");return e.disposeData(m.dataId),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s,v=$r(f),w=mn(a.shape,r.shape,u,p,h,m,!1,v);let S;const C=[],$=i!=null,T=l!=null,I=y==="leakyrelu",R=()=>{const M=[a,r],D=(O,A)=>{if(A==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){const W=St({inputs:{x:O},backend:e,attrs:{shape:[O.shape[0],1,1]}});return C.push(W),W}return O};if($&&M.push(D(i,f)),T&&M.push(D(l,f)),I){const O=e.makeTensorInfo([],"float32",vi(b,"float32"));M.push(O),C.push(O)}return M};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))S=VD({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else if(w.strideWidth<=2&&v==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const M=y?Fc(y,!0):null,D=new BD(w,$,M,T,I),O=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],A=R();S=e.runWebGLProgram(D,A,"float32",O)}else if(at().getBool("WEBGL_CONV_IM2COL"))S=PD({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else{const M=y?Fc(y,!1):null,D=new MD(w,$,M,T,I),O=R();S=e.runWebGLProgram(D,O,"float32")}const F=St({inputs:{x:S},backend:e,attrs:{shape:w.outShape}});return C.push(S),C.forEach(M=>e.disposeIntermediateTensorInfo(M)),F}const snt={kernelName:qf,backendName:"webgl",kernelFunc:nnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ant(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s,b=[];let v=f;v==null&&(v=[1,1]),_($n(u,v),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${v}'`);const w=mn(a.shape,r.shape,u,v,h,p,!0),S=at().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,C=m?Fc(m,S):null,$=[a,r],T=i!=null,I=l!=null,R=m==="leakyrelu";if(T&&$.push(i),I&&$.push(l),R){const O=e.makeTensorInfo([],"float32",vi(y,"float32"));$.push(O),b.push(O)}let F;S?F=new GD(w,T,C,I,R):F=new WD(w,T,C,I,R);const M=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],D=e.runWebGLProgram(F,$,"float32",M);return b.forEach(O=>e.disposeIntermediateTensorInfo(O)),D}const rnt={kernelName:jf,backendName:"webgl",kernelFunc:ant};class int{constructor(t,e,s,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=ge(s.length);let i=`
    int index;`;for(let l=0;l<this.sliceDim;l++)i+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=a.shape,i=r[r.length-1],l=ht(s.shape),[u,h,f,p]=q1(s,a),m=St({inputs:{x:a},backend:e,attrs:{shape:[h,i]}}),y=St({inputs:{x:s},backend:e,attrs:{shape:[ht(s.shape)/f,f]}});if(e.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const S=e.readSync(a.dataId),C=e.bufferSync(s),$=uZ(S,C,s.dtype,h,i,f,p,s.shape,l);return e.makeTensorInfo(u,s.dtype,$.values)}const b=new int(i,p,[h,f],s.shape),v=e.runWebGLProgram(b,[y,m],y.dtype),w=St({inputs:{x:v},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(v),w}const lnt={kernelName:xx,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class unt{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ge(this.rank),a=cnt(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function cnt(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<n.length;a++)a===2?s.push("index"):s.push(`${e[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s,u=Xt(i,a.shape)[0];if(at().get("DEBUG")){const C=e.readSync(r.dataId),$=a.shape[u];for(let T=0;T<C.length;++T){const I=C[T];_(I<=$-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${$-1}]`)}}const h=gv(a,r,u,l),f=ht(r.shape),p=[],m=St({inputs:{x:a},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),y=St({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,f/h.batchSize]}});p.push(m),p.push(y);const b=[h.batchSize,h.outerSize,f/h.batchSize,h.sliceSize];if(e.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const C=e.bufferSync(y),$=e.bufferSync(m),T=cZ($,C,b);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(h.outputShape,T.dtype,T.values)}const v=new unt(m.shape,b),w=e.runWebGLProgram(v,[m,y],m.dtype);p.push(w);const S=St({inputs:{x:w},backend:e,attrs:{shape:h.outputShape}});return p.forEach(C=>e.disposeIntermediateTensorInfo(C)),S}const hnt={kernelName:Pp,backendName:"webgl",kernelFunc:jD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dnt="return float(a > b);",fnt=`
  return vec4(greaterThan(a, b));
`,pnt=En({opSnippet:dnt,packedOpSnippet:fnt,cpuKernelImpl:hZ,dtype:"bool"}),mnt={kernelName:Up,backendName:"webgl",kernelFunc:pnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gnt="return float(a >= b);",ynt=`
  return vec4(greaterThanEqual(a, b));
`,bnt=En({opSnippet:gnt,packedOpSnippet:ynt,dtype:"bool",cpuKernelImpl:dZ}),xnt={kernelName:ah,backendName:"webgl",kernelFunc:bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vnt(n){const{inputs:t,backend:e}=n,{input:s}=t;return qD(s,!0,e)}const wnt={kernelName:vx,backendName:"webgl",kernelFunc:vnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Snt="return float(!isnan(x) && !isinf(x));",Nnt=oe({opSnippet:Snt,dtype:"bool"}),Cnt={kernelName:ih,backendName:"webgl",kernelFunc:Nnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tnt="return float(isinf(x));",$nt=oe({opSnippet:Tnt,dtype:"bool"}),knt={kernelName:oh,backendName:"webgl",kernelFunc:$nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Int="return float(isnan(x));",Ent=oe({opSnippet:Int,dtype:"bool"}),Ant={kernelName:lh,backendName:"webgl",kernelFunc:Ent};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rnt="return float(a < b);",Dnt=`
  return vec4(lessThan(a, b));
`,Ont=En({opSnippet:Rnt,packedOpSnippet:Dnt,cpuKernelImpl:fZ,dtype:"bool"}),_nt={kernelName:Gp,backendName:"webgl",kernelFunc:Ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fnt="return float(a <= b);",Lnt=`
  return vec4(lessThanEqual(a, b));
`,znt=En({opSnippet:Fnt,packedOpSnippet:Lnt,cpuKernelImpl:pZ,dtype:"bool"}),Mnt={kernelName:Hp,backendName:"webgl",kernelFunc:znt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bnt(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=mZ(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const Vnt={kernelName:Sx,backendName:"webgl",kernelFunc:Bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pnt=hu+`
  return x < 0.0 ? 0./0. : log(x);
`,Unt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Wnt=oe({opSnippet:Pnt,packedOpSnippet:Unt,cpuKernelImpl:gZ}),Gnt={kernelName:uh,backendName:"webgl",kernelFunc:Wnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hnt=hu+`
  return log(1.0 + x);
`,qnt=oe({opSnippet:Hnt}),jnt={kernelName:ch,backendName:"webgl",kernelFunc:qnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xnt="return float(a >= 1.0 && b >= 1.0);",Knt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Ynt=En({opSnippet:Xnt,packedOpSnippet:Knt,dtype:"bool"}),Znt={kernelName:qp,backendName:"webgl",kernelFunc:Ynt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qnt="return float(!(x >= 1.0));",Jnt=oe({opSnippet:Qnt}),tst={kernelName:jp,backendName:"webgl",kernelFunc:Jnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const est="return float(a >= 1.0 || b >= 1.0);",nst=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,sst=En({opSnippet:est,packedOpSnippet:nst,dtype:"bool"}),ast={kernelName:Xp,backendName:"webgl",kernelFunc:sst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rst{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ist{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ost=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s,h=at().getBool("WEBGL_PACK_NORMALIZATION")?new ist(a.shape,r,i,l,u):new rst(a.shape,r,i,l,u);return e.runWebGLProgram(h,[a],a.dtype)},lst={kernelName:Kp,backendName:"webgl",kernelFunc:ost};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ust{constructor(t,e,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cst=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s,p=new ust(a.shape,l,u,h,f);return e.runWebGLProgram(p,[a,r,i],a.dtype)},hst={kernelName:Nx,backendName:"webgl",kernelFunc:cst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dst(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Mo(l,n.dtype,"max",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=_e(h,l),p=f!=null,m=e.shouldExecuteOnCPU([a]);let y=a;if(p){if(m){const $=e.texData.get(y.dataId).values,T=new Array(l);for(let F=0;F<T.length;F++)T[F]=a.shape[f[F]];const I=Jv($,a.shape,a.dtype,f,T);y=e.makeTensorInfo(T,a.dtype);const R=e.texData.get(y.dataId);R.values=I}else y=hg(a,f,e);h=qe(h.length,l)}kn("max",h,l);const[b,v]=gn(y.shape,h);let w=b;i&&(w=He(b,u));let S;if(m){const $=e.texData.get(y.dataId).values,T=yZ($,ht(v),w,a.dtype);S=e.makeTensorInfo(w,a.dtype);const I=e.texData.get(S.dataId);I.values=T}else S=dst(y,v,w,e);return p&&e.disposeIntermediateTensorInfo(y),S}const fst={kernelName:Yp,backendName:"webgl",kernelFunc:XD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pst=tw+`
  return max(a, b);
`,mst=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,gst=En({opSnippet:pst,packedOpSnippet:mst,cpuKernelImpl:bZ}),yst={kernelName:hh,backendName:"webgl",kernelFunc:gst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;ed(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;_($n(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ia(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&te(f.inShape,f.outShape))return ys({inputs:{x:a},backend:e});const p=new Lc(f,"max",!1);return e.runWebGLProgram(p,[a],a.dtype)}const xst={kernelName:Zp,backendName:"webgl",kernelFunc:bst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dataFormat:u,dimRoundingMode:h}=s,f=[1,1,1],p=Tr(a.shape,r,i,f,l,h,u),m=new nw(p,"max",!1);return e.runWebGLProgram(m,[a],a.dtype)}const wst={kernelName:Qp,backendName:"webgl",kernelFunc:vst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sst{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=r-1-t.padInfo.top,u=i-1-t.padInfo.left,h=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Nst{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=u-1-t.padInfo.front,m=h-1-t.padInfo.top,y=f-1-t.padInfo.left,b=u*h*f-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${b} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${h} * ${f} +
                  wR * ${f} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cst(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Tr(i.shape,l,u,p,h,f),y=new nw(m,"max",!0),b=e.runWebGLProgram(y,[i],i.dtype),v=new Nst(m),w=e.runWebGLProgram(v,[a,b],i.dtype);return e.disposeIntermediateTensorInfo(b),w}const Tst={kernelName:Tx,backendName:"webgl",kernelFunc:Cst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $st(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;ed([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=ia(l.shape,u,h,1,f,p),y=!0,b=new Lc(m,"max",y),v=e.runWebGLProgram(b,[l],l.dtype),w=new Sst(m),S=e.runWebGLProgram(w,[a,v],l.dtype);return e.disposeIntermediateTensorInfo(v),S}const kst={kernelName:Cx,backendName:"webgl",kernelFunc:$st};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ist(n,t,e,s){let a=new Lc(e,"max",!1);const r=s.runWebGLProgram(a,[n],"float32");a=new Lc(e,"max",!0,!0,t);const i=s.runWebGLProgram(a,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Est={kernelName:$x,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;_(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const h=[1,1];_($n(r,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const f=ia(s.shape,a,r,h,i),[p,m]=Ist(s,l,f,u);return[p,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ast(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Mo(l,"float32","mean",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rst={kernelName:Jp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:a,axis:r}=t,i=e,l=s.shape.length,u=Xt(r,s.shape);let h=u;const f=_e(h,l),p=f!=null,m=i.shouldExecuteOnCPU([s]),y=[];let b=s;if(p){if(m){const T=i.texData.get(b.dataId).values,I=new Array(l);for(let M=0;M<I.length;M++)I[M]=s.shape[f[M]];const R=Jv(T,s.shape,s.dtype,f,I);b=i.makeTensorInfo(I,s.dtype);const F=i.texData.get(b.dataId);F.values=R}else b=hg(s,f,i);y.push(b),h=qe(h.length,l)}kn("sum",h,l);const[v,w]=gn(b.shape,h);let S=v;a&&(S=He(v,u));const C=Ast(b,w,S,i);for(const $ of y)i.disposeIntermediateTensorInfo($);return C}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Gn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,a.shape.length)),kn("min",h,l);const[m,y]=gn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Mo(v,v.dtype,"min",e);let S;if(i){const C=He(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const Ost={kernelName:tm,backendName:"webgl",kernelFunc:Dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _st=tw+`
  return min(a, b);
`,Fst=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,Lst=En({opSnippet:_st,packedOpSnippet:Fst,cpuKernelImpl:xZ}),zst={kernelName:dh,backendName:"webgl",kernelFunc:Lst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mst{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((f,p)=>f[0]+t[p]+f[1]);const a=t.length,r=ge(a),i=e.map(f=>f[0]).join(","),l=e.map((f,p)=>f[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),h=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${h};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${h};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${h};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bst{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((b,v)=>b[0]+t[v]+b[1]);const a=t.length,r=ge(a),i=e.map(b=>b[0]).join(","),l=e.map((b,v)=>b[0]+t[v]).join(","),u=Wn("rc",a),h=Wn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=s==="reflect"?0:1;let y="";if(a===1){const b=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
      `}else{const b=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
        rc = outputLoc;
        ${u[a-2]} += 1;
        if(${u[a-2]} < ${this.outputShape[a-2]}) {
          ${b}
          result[2] = getChannel(getX(${h.join()}), ${p});
          ${u[a-1]} += 1;
          if(${f}) {
            ${b}
            result[3] = getChannel(getX(${h.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vst=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:a,mode:r}=e,i=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bst(s.shape,a,r):new Mst(s.shape,a,r);return t.runWebGLProgram(i,[s],s.dtype)},Pst={kernelName:em,backendName:"webgl",kernelFunc:Vst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ust=`if (b == 0.0) return NAN;
  return mod(a, b);`,Wst=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+zo+`
  return result;
`,Gst=En({opSnippet:Ust,packedOpSnippet:Wst}),Hst={kernelName:fh,backendName:"webgl",kernelFunc:Gst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qst{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jst=`
if (a == b) {
  return 1.0;
};
return a / b;`,Xst=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,KD=En({opSnippet:jst,packedOpSnippet:Xst,checkOutOfBounds:!0}),Kst={kernelName:Zc,backendName:"webgl",kernelFunc:KD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2="return a - b;",YD=En({opSnippet:L2,packedOpSnippet:L2,supportsComplex:!0,cpuKernelImpl:VZ}),Yst={kernelName:Eh,backendName:"webgl",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=Xt([r],a.shape),l=XD({inputs:{x:a},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=He(l.shape,i),h=St({inputs:{x:l},backend:e,attrs:{shape:u}}),f=YD({inputs:{a,b:h},backend:e}),p=HD({inputs:{x:f},backend:e}),m=dg({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),y=St({inputs:{x:m},backend:e,attrs:{shape:u}}),b=KD({inputs:{a:p,b:y},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}const Zst={kernelName:xm,backendName:"webgl",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qst(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s,u=l?a:ZD({inputs:{logits:a},backend:e,attrs:{dim:a.shape.length-1}}),h=u.shape[0],f=u.shape[1],p=new qst(h,f,r),m=[[i]],y=e.runWebGLProgram(p,[u],"int32",m);return l||e.disposeIntermediateTensorInfo(u),y}const Jst={kernelName:kx,backendName:"webgl",kernelFunc:Qst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tat=la+`
  return -x;
`,eat=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function nat(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const r=e.texData.get(s.dataId),[i,l]=wZ(r.values,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}let a;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ni(s.shape,eat):a=new Ba(s.shape,tat),e.runWebGLProgram(a,[s],s.dtype)}const sat={kernelName:nm,backendName:"webgl",kernelFunc:nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aat=B1;function rat(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),{selectedIndices:p}=aat(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const iat={kernelName:Ix,backendName:"webgl",kernelFunc:rat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oat=V1;function lat(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),{selectedIndices:m,validOutputs:y}=oat(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const uat={kernelName:Ex,backendName:"webgl",kernelFunc:lat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cat=P1;function hat(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=cat(f,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const dat={kernelName:Ax,backendName:"webgl",kernelFunc:hat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fat{constructor(t,e,s,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pat=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s,h=ht(a.shape),f=new fat(h,i,l,u),p=St({inputs:{x:a},backend:e,attrs:{shape:[h]}}),m=e.runWebGLProgram(f,[p],r);e.disposeIntermediateTensorInfo(p);const y=[...a.shape,i],b=St({inputs:{x:m},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(m),b},mat={kernelName:rm,backendName:"webgl",kernelFunc:pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bp(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const a=sd({inputs:{input:s},backend:e}),r=bp({inputs:{x:a},backend:e}),i=fg({inputs:{input:s},backend:e}),l=bp({inputs:{x:i},backend:e}),u=Ai({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return ad({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const gat={kernelName:Nm,backendName:"webgl",kernelFunc:bp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=sd({inputs:{input:s},backend:e}),r=QD({inputs:{x:a},backend:e}),i=fg({inputs:{input:s},backend:e}),l=bp({inputs:{x:i},backend:e}),u=Ai({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return ad({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const yat={kernelName:am,backendName:"webgl",kernelFunc:QD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bat(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return q0({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{bs(r,f.shape,"All tensors passed to stack must have matching shapes"),_(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=q0({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=zD({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const xat={kernelName:im,backendName:"webgl",kernelFunc:bat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vat{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((h,f)=>h[0]+t[f]+h[1]);const a=t.length,r=ge(a),i=e.map(h=>h[0]).join(","),l=e.map((h,f)=>h[0]+t[f]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wat{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((v,w)=>v[0]+t[w]+v[1]);const a=t.length,r=ge(a),i=e.map(v=>v[0]).join(","),l=e.map((v,w)=>v[0]+t[w]).join(","),u=Wn("rc",a),h=Wn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=[`${r} rc = outputLoc;`,`${u[a-1]} += 1;
       if(${f}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${u[a-2]} += 1;
       if(${u[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${u[a-1]} += 1;
         if(${f}) {`],y=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let b="";for(let v=0,w=a===1?2:4;v<w;v++)b+=`
        ${m[v]}
        if (${y}) {
          result[${v}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${v}] = getChannel(getX(${h.join()}), ${p});
        }
      `;b+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;if(ht(a.shape)===0){const h=r.map((f,p)=>f[0]+a.shape[p]+f[1]);return ad({backend:e,attrs:{shape:h,value:i,dtype:a.dtype}})}const l=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wat(a.shape,r,i):new vat(a.shape,r,i),u=[[i]];return e.runWebGLProgram(l,[a],a.dtype,u)},Sat={kernelName:om,backendName:"webgl",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nat=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Cat=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+zo+`
  return result;
`,Tat=En({opSnippet:Nat,packedOpSnippet:Cat}),$at={kernelName:mh,backendName:"webgl",kernelFunc:Tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=[],h=Xt(r,a.shape);let f=h;const p=_e(f,l);let m=a;p!=null&&(m=Gn({inputs:{x:a},backend:e,attrs:{perm:p}}),f=qe(f.length,l),u.push(m)),kn("prod",f,l);let y;if(e.shouldExecuteOnCPU([m])){const b=e.texData.get(m.dataId).values,{outVals:v,outShape:w,outDtype:S}=NZ(m.shape,m.dtype,b,f);y=e.makeTensorInfo(w,S,v)}else{const[b,v]=gn(m.shape,f),w=ht(v),S=St({inputs:{x:m},backend:e,attrs:{shape:[-1,w]}}),C=e1(a.dtype),$=Mo(S,C,"prod",e);y=St({inputs:{x:$},backend:e,attrs:{shape:b}}),u.push(S),u.push($)}if(i){u.push(y);const b=He(y.shape,h);y=St({inputs:{x:y},backend:e,attrs:{shape:b}})}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const Iat={kernelName:um,backendName:"webgl",kernelFunc:kat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eat(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.readSync(S.dataId)),h=a.map(S=>S.shape),f=e.readSync(r.dataId),p=e.readSync(i.dataId),[m,y,b]=CZ(u,h,f,r.shape,r.dtype,p,i.shape,l),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const Aat={kernelName:Rx,backendName:"webgl",kernelFunc:Eat};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rat(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=TZ(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const Dat={kernelName:Dx,backendName:"webgl",kernelFunc:Rat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oat(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),p=e.readSync(i.dataId),m=l.map(w=>e.readSync(w.dataId)),y=l.map(w=>w.shape),[b,v]=$Z(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const _at={kernelName:Ox,backendName:"webgl",kernelFunc:Oat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO=n=>{const{backend:t,attrs:e}=n,{start:s,stop:a,step:r,dtype:i}=e,l=kZ(s,a,r,i);return t.makeTensorInfo([l.length],i,l)},Fat={kernelName:_x,backendName:"webgl",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lat="return 1.0 / x;",zat=oe({opSnippet:Lat}),Mat={kernelName:gh,backendName:"webgl",kernelFunc:zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bat=la+`
  return (x < 0.0) ? 0.0 : x;
`,Vat=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pat=oe({opSnippet:Bat,packedOpSnippet:Vat}),Uat={kernelName:yh,backendName:"webgl",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wat=la+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Gat=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hat=oe({opSnippet:Wat,packedOpSnippet:Gat}),qat={kernelName:bh,backendName:"webgl",kernelFunc:Hat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jat{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xat{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Xat(a.shape,u,h,r,i):new jat(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],"float32")}const Yat={kernelName:dm,backendName:"webgl",kernelFunc:Kat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zat{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new Zat(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const Jat={kernelName:zx,backendName:"webgl",kernelFunc:Qat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class trt{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ert{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nrt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ert(a.shape,u,h,r,i):new trt(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],a.dtype)}const srt={kernelName:hm,backendName:"webgl",kernelFunc:nrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class art{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${h[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${h[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rrt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new art(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const irt={kernelName:Lx,backendName:"webgl",kernelFunc:rrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ort{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const a=l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,r=t.map((l,u)=>a(u)).join(","),i=ge(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lrt{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const a=Wn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,l=ge(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(a.slice())};
          if(${r}){
            result.g = ${h(a.slice())};
          }
          if(${i}) {
            result.b = ${f(a.slice())};
            if(${r}) {
              result.a = ${p(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(b){return m(b)}function h(b){return b[s-1]="("+b[s-1]+" + 1)",m(b)}function f(b){return b[s-2]="("+b[s-2]+" + 1)",m(b)}function p(b){return b[s-1]="("+b[s-1]+" + 1)",b[s-2]="("+b[s-2]+" + 1)",m(b)}function m(b){const v=t.map((C,$)=>y($,b)),w=v.join(","),S=v.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${S}))`}function y(b,v){return e.indexOf(b)!==-1&&t[b]!==1?`${t[b]} - ${v[b]} - 1`:`${v[b]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function urt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s,i=a.shape.length,l=Xt(r,a.shape);if(i===0)return ys({inputs:{x:a},backend:e});const u=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lrt(a.shape,l):new ort(a.shape,l);return e.runWebGLProgram(u,[a],a.dtype)}const crt={kernelName:fm,backendName:"webgl",kernelFunc:urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hrt{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],a=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const drt={kernelName:t1,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=new hrt(s.shape,r),[h,f]=tv(i,s.shape[1],s.shape[2]),p=[[h,f,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const frt=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,prt=oe({opSnippet:frt}),mrt={kernelName:xh,backendName:"webgl",kernelFunc:prt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const grt="return inversesqrt(x);",yrt=oe({opSnippet:grt,cpuKernelImpl:IZ}),brt={kernelName:vh,backendName:"webgl",kernelFunc:yrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sw{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const h=ge(r.length),f=ge(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${S};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${b};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xrt{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const h=ge(r.length),f=ge(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides",C=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${S};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${C};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${b};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vrt(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Do(r,a,i),m=[p/h,h];if(p===0)return e.makeTensorInfo(i,a.dtype);const y=St({inputs:{x:a},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:r},backend:e,attrs:{shape:[u,h]}}),v=e.makeTensorInfo([],"float32",new Float32Array([0]));let w;at().getBool("WEBGL_PACK")?w=new xrt(u,l,y.shape.length,b.shape.length,f,m):w=new sw(u,l,y.shape.length,b.shape.length,f,m);const S=e.runWebGLProgram(w,[b,y,v],b.dtype),C=St({inputs:{x:S},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(v),C}const wrt={kernelName:Mx,backendName:"webgl",kernelFunc:vrt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Srt{constructor(t,e,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,l=at().getNumber("WEBGL_VERSION")===2?r:i,u=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nrt(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=new Srt(a.shape[0],a.shape[1],r.shape[1],i),u=[[a.shape[1]]];return e.runWebGLProgram(l,[a,r],"int32",u)}const Crt={kernelName:Vx,backendName:"webgl",kernelFunc:Nrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Trt{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],h=[];for(let f=0;f<e.length;f++)h.push(`${l[f]}`),f<t&&u.push(`${l[f]}`);a=u.join(),r=h.join()}const i=ge(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $rt(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t,i=new Trt(s.shape.length,a.shape,a.shape.length);return e.runWebGLProgram(i,[s,a,r],ds(a.dtype,r.dtype))}const krt={kernelName:pm,backendName:"webgl",kernelFunc:$rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Irt=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Km};
  float scale = ${Ym};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ert=oe({opSnippet:Irt}),Art={kernelName:wh,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rrt=hu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Drt=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ort=oe({opSnippet:Rrt,packedOpSnippet:Drt,cpuKernelImpl:AZ}),_rt={kernelName:Th,backendName:"webgl",kernelFunc:Ort};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Frt=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Lrt=oe({opSnippet:Frt}),zrt={kernelName:Ch,backendName:"webgl",kernelFunc:Lrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mrt=hu+`
  return sin(x);
`,Brt=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${zo}
  return result;
`,Vrt=oe({opSnippet:Mrt,packedOpSnippet:Brt}),Prt={kernelName:Sh,backendName:"webgl",kernelFunc:Vrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Urt=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Wrt=oe({opSnippet:Urt}),Grt={kernelName:Nh,backendName:"webgl",kernelFunc:Wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hrt=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,qrt=oe({opSnippet:Hrt}),jrt={kernelName:$h,backendName:"webgl",kernelFunc:qrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xrt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;_(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((S,C)=>S*C),u=[[0,0]];u.push(...i);for(let S=1+r.length;S<a.shape.length;++S)u.push([0,0]);const h=[],f=JD({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),p=Uh(f.shape,r,l,!1),m=Wh(p.length,r.length,!1),y=Gh(f.shape,r,l,!1),b=St({inputs:{x:f},backend:e,attrs:{shape:p}}),v=Gn({inputs:{x:b},backend:e,attrs:{perm:m}}),w=St({inputs:{x:v},backend:e,attrs:{shape:y}});return h.push(f),h.push(b),h.push(v),h.forEach(S=>e.disposeIntermediateTensorInfo(S)),w},Krt={kernelName:ym,backendName:"webgl",kernelFunc:Xrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yrt(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.readSync(s.dataId),u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=e.readSync(i.dataId)[0],[p,m,y,b,v]=DZ(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const Zrt={kernelName:Px,backendName:"webgl",kernelFunc:Yrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qrt(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.readSync(a.dataId)),l=e.readSync(s.dataId),u=Array.from(e.readSync(r.dataId)),[h,f,p]=OZ(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const Jrt={kernelName:Ux,backendName:"webgl",kernelFunc:Qrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tit(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=CD(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const eit={kernelName:Wx,backendName:"webgl",kernelFunc:tit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nit(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=CD(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const sit={kernelName:Gx,backendName:"webgl",kernelFunc:nit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ait(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Do(r,a,l),y=!1;if(r.dtype==="string"){const S=e.bufferSync(a),C=e.bufferSync(r),$=oi(e.readSync(i.dataId)[0]),T=EZ(S,C,l,m,f,h,u,p,$,y);return e.makeTensorInfo(l,T.dtype,T.values)}const b=new sw(h,u,a.shape.length,r.shape.length,p,[m,1],y),v=e.runWebGLProgram(b,[r,a,i],r.dtype),w=St({inputs:{x:v},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(v),w}const rit={kernelName:Hx,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Xt(i,a.shape)[0],u=mv(a,r,l),h=a.shape.length,f=new Array(h).fill(0),p=a.shape.slice();return u.map(m=>{const y=[...p];y[l]=m;const b=du({inputs:{x:a},backend:e,attrs:{begin:f,size:y}});return f[l]+=m,b})}const oit={kernelName:bm,backendName:"webgl",kernelFunc:iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z2="return sqrt(x);",lit=oe({opSnippet:z2,packedOpSnippet:z2,cpuKernelImpl:_Z}),uit={kernelName:kh,backendName:"webgl",kernelFunc:lit};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cit="return x * x;",hit=oe({opSnippet:cit}),dit={kernelName:qx,backendName:"webgl",kernelFunc:hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M2="return (a - b) * (a - b);",fit=En({opSnippet:M2,packedOpSnippet:M2}),pit={kernelName:Ih,backendName:"webgl",kernelFunc:fit};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=e.readSync(a.dataId),i=Cr(r),l=FZ(i,"string",s);return e.makeTensorInfo(a.shape,"string",l)}const git={kernelName:vm,backendName:"webgl",kernelFunc:mit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yit({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=la+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Ba(s.shape,a);return e.runWebGLProgram(r,[s],s.dtype)}const bit={kernelName:Oh,backendName:"webgl",kernelFunc:yit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xit{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=ge(s.length),i=ge(s.length);let l="";if(a===1)l="coords * strides + begin";else{let u=0;l=s.map((h,f)=>(u++,s.length===1?`coords * strides[${f}] + begin[${f}]`:`coords[${u-1}] * strides[${f}] + begin[${f}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:C,end:$,strides:T}=Z1(a.shape,r,i,l,u,h,f,p,m);let I;if(v)I=St({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){_(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const F=X1(C,$,T),M=du({inputs:{x:a},backend:e,attrs:{begin:C,size:F}});I=St({inputs:{x:M},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(M)}else if(e.shouldExecuteOnCPU([a])){const M=e.readSync(a.dataId),D=Ht(a.shape,a.dtype,M),O=LZ(y,D,T,C);I=e.makeTensorInfo(b,a.dtype,O.values)}else{const M=new xit(C,T,y);I=e.runWebGLProgram(M,[a],a.dtype)}const R=St({inputs:{x:I},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(I),R}const wit={kernelName:jx,backendName:"webgl",kernelFunc:vit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sit(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.readSync(f.dataId),y=e.readSync(p.dataId),[b,v]=zZ(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const Nit={kernelName:Xx,backendName:"webgl",kernelFunc:Sit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cit(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.readSync(r.dataId),u=e.readSync(i.dataId)[0],[h,f,p]=MZ(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const Tit={kernelName:Kx,backendName:"webgl",kernelFunc:Cit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $it(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(r.dataId),l=BZ(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const kit={kernelName:Yx,backendName:"webgl",kernelFunc:$it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iit="return tan(x);",Eit=oe({opSnippet:Iit}),Ait={kernelName:Ah,backendName:"webgl",kernelFunc:Eit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rit=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Dit=oe({opSnippet:Rit}),Oit={kernelName:Rh,backendName:"webgl",kernelFunc:Dit};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _it(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:a,indices:r,updates:i}=t,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Do(i,r,a.shape),m=[p/h,h];if(p===0)return e.makeTensorInfo(a.shape,r.dtype);const y=St({inputs:{x:r},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:i},backend:e,attrs:{shape:[u,h]}}),v=St({inputs:{x:a},backend:e,attrs:{shape:m}}),w=new sw(u,l,y.shape.length,b.shape.length,f,m,!1,!0),S=e.runWebGLProgram(w,[b,y,v],v.dtype),C=St({inputs:{x:S},backend:e,attrs:{shape:a.shape}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(S),C}const Fit={kernelName:Bx,backendName:"webgl",kernelFunc:_it};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lit{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const a=ge(this.rank),r=zit(t);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function zit(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<n.length;a++)s.push(`imod(${e[a]}, ${n[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const u=e.readSync(a.dataId),h=a.dtype==="string"?u.map(m=>oi(m)):u,f=Ht(a.shape,a.dtype,h),p=PZ(f,r);return e.makeTensorInfo(p.shape,p.dtype,p.values)}const i=new Lit(a.shape,r);return e.runWebGLProgram(i,[a],a.dtype)}const Mit={kernelName:Dh,backendName:"webgl",kernelFunc:eO};class Bit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Vit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function no(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function B2(n){let t=1;for(;t<n;)t*=2;return t}function Pit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s,l=at().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=at().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),h=a.shape,f=h[h.length-1];if(e.shouldExecuteOnCPU([a])||f<l||r>u){const O=e.readSync(a.dataId),[A,W]=UZ(O,h,a.dtype,r,i);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(W.shape,W.dtype,W.values)]}if(r===0)return h[h.length-1]=0,[e.makeTensorInfo(h,a.dtype,[]),e.makeTensorInfo(h,"int32",[])];if(f===1)return[a,ad({attrs:{shape:h,dtype:"int32",value:0},backend:e})];const p=e.texData.get(a.dataId),m=p!==null&&p.isPacked,y=m?e.unpackTensor(a):a,v=ht(h)/f,w=St({inputs:{x:y},attrs:{shape:[v,f]},backend:e});m&&no(e,y);const S=B2(r),C=B2(f);let $=null;const T=()=>$===null?[w,w]:[w,$],I=(O,A,W)=>{const K=T(),tt=new Bit(W),P=[[f],[$===null?1:0],[Number.NEGATIVE_INFINITY],[O],[A]],et=$;$=e.runWebGLProgram(tt,K,"int32",P),no(e,et)};for(let O=1;O<S;O*=2){const A=O*2;for(let W=O;W>=1;W/=2)I(A,W,[v,C])}for(let O=C;O>S;O/=2){const A=T(),W=new Vit([v,O/2]),tt=[[f],[$===null?1:0],[S]],Q=$;$=e.runWebGLProgram(W,A,"int32",tt),no(e,Q);const P=S/2,et=P*2;for(let Y=P;Y>=1;Y/=2)I(et,Y,$.shape)}let R=$;$=du({inputs:{x:$},backend:e,attrs:{begin:0,size:[v,r]}}),no(e,R);let F=jD({inputs:{x:w,indices:$},backend:e,attrs:{axis:1,batchDims:1}});no(e,w);const M=h.slice(0,-1);M.push(r),R=$,$=St({inputs:{x:$},attrs:{shape:M},backend:e}),no(e,R);const D=F;return F=St({inputs:{x:F},attrs:{shape:M},backend:e}),no(e,D),[F,$]}const Uit={kernelName:Zx,backendName:"webgl",kernelFunc:Pit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wit{constructor(t,e,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=s==="nearest"?1:2;let u;switch(a){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Git(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=s,[f,p,m,y]=a.shape,[b,v]=h??[p,m],w=[f,b,v,y],S=new Wit(p,m,i,l,u,w);return e.runWebGLProgram(S,[a,r],"float32")}const Hit={kernelName:Qx,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qit(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;ed(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:l,outputShape:u,indices:h}=WZ(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const jit={kernelName:Jx,backendName:"webgl",kernelFunc:qit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xit(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,l=i.shape.length,u=a.shape[r],h=new Array(l-1);let f=0;for(let v=0;v<l;v++)v!==r&&(h[f++]=i.shape[v]);const p=[],m=new Array(l).fill(0),y=i.shape.slice();y[r]=1;const b=new Array(u);for(let v=0;v<b.length;v++){m[r]=v;const w=du({inputs:{x:i},backend:e,attrs:{begin:m,size:y}}),S=St({inputs:{x:w},backend:e,attrs:{shape:h}});b[v]=S,p.push(w)}return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const Kit={kernelName:wm,backendName:"webgl",kernelFunc:Xit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yit{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,a=t.batchSize,r=t.inSize,i=t.numSegments,l=i*Math.ceil(r/s);this.outputShape=[a,l];const u="0.0",h="sumValue",f=Math.floor(s/4)*4,p=s%4,m=`
        sumValue += dot(values, segFilter);
    `;let y="";r%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${b}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s,l=a.shape.length,u=[];let h=0;const f=_e([h],l);let p=a;f!=null&&(p=Gn({inputs:{x:a},backend:e,attrs:{perm:f}}),u.push(p),h=qe(1,l)[0]);const m=DI(p.shape,h,i),y=ht([p.shape[h]]),b=St({inputs:{x:p},backend:e,attrs:{shape:[-1,y]}});u.push(b);const v=e1(a.dtype),w=(T,I,R,F,M)=>{const D=T.shape[0],O=T.shape[1],A=RI(O,M),W={windowSize:A,inSize:O,batchSize:D,numSegments:M},K=new Yit(W,I),tt=e.compileAndRun(K,[T,R],F);if(u.push(tt),tt.shape[1]===M)return tt;const Q=tO({backend:e,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),P=eO({inputs:{x:Q},backend:e,attrs:{reps:[O/A]}});return u.push(Q),u.push(P),w(tt,I,P,F,M)},S=w(b,"unsortedSegmentSum",r,v,i),C=St({inputs:{x:S},backend:e,attrs:{shape:m}});let $=C;if(f!=null){u.push(C);const T=Ci(f);$=Gn({inputs:{x:$},backend:e,attrs:{perm:T}})}return u.forEach(T=>e.disposeIntermediateTensorInfo(T)),$}const Qit={kernelName:Sm,backendName:"webgl",kernelFunc:Zit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jit=[_Q,LQ,BQ,UQ,GQ,jQ,KQ,ZQ,eJ,sJ,iJ,uJ,dJ,gJ,xJ,wJ,NJ,kJ,EJ,RJ,FJ,UJ,GJ,XJ,YJ,ntt,att,ltt,yQ,htt,gtt,vtt,$tt,Ett,Rtt,Ott,Ftt,Btt,Utt,Htt,jtt,Ktt,Ztt,tet,net,iet,uet,det,met,yet,wet,$et,Aet,Oet,Let,zet,Bet,Pet,Wet,Het,jet,Zet,tnt,snt,rnt,lnt,hnt,mnt,xnt,gQ,wnt,ptt,Cnt,knt,Ant,xQ,_nt,Mnt,Vnt,Gnt,jnt,Znt,tst,ast,lst,hst,fst,yst,xst,wst,Tst,kst,Est,Rst,Ost,zst,Pst,Hst,Jst,SQ,sat,iat,uat,dat,QJ,mat,yat,xat,Sat,$at,wQ,Iat,Aat,Dat,_at,Fat,JJ,Kst,Mat,Uat,qat,CQ,Yat,Jat,srt,irt,crt,drt,mrt,brt,wrt,Crt,krt,Art,_rt,zrt,Prt,Grt,VJ,Zst,jrt,Krt,Zrt,Jrt,eit,sit,rit,oit,uit,dit,pit,git,bit,wit,Nit,Tit,kit,Yst,RQ,Ait,Oit,Fit,Mit,Uit,Hit,DQ,jit,Kit,Qit,gat];for(const n of Jit)a$(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function yi(n,t,e,s){return new(e||(e=Promise))(function(a,r){function i(h){try{u(s.next(h))}catch(f){r(f)}}function l(h){try{u(s.throw(h))}catch(f){r(f)}}function u(h){var f;h.done?a(h.value):(f=h.value,f instanceof e?f:new e(function(p){p(f)})).then(i,l)}u((s=s.apply(n,[])).next())})}function bi(n,t){var e,s,a,r,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(r[Symbol.iterator]=function(){return this}),r;function l(u){return function(h){return function(f){if(e)throw new TypeError("Generator is already executing.");for(;r&&(r=0,f[0]&&(i=0)),i;)try{if(e=1,s&&(a=2&f[0]?s.return:f[0]?s.throw||((a=s.return)&&a.call(s),0):s.next)&&!(a=a.call(s,f[1])).done)return a;switch(s=0,a&&(f=[2&f[0],a.value]),f[0]){case 0:case 1:a=f;break;case 4:return i.label++,{value:f[1],done:!1};case 5:i.label++,s=f[1],f=[0];continue;case 7:f=i.ops.pop(),i.trys.pop();continue;default:if(a=i.trys,!((a=a.length>0&&a[a.length-1])||f[0]!==6&&f[0]!==2)){i=0;continue}if(f[0]===3&&(!a||f[1]>a[0]&&f[1]<a[3])){i.label=f[1];break}if(f[0]===6&&i.label<a[1]){i.label=a[1],a=f;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(f);break}a[2]&&i.ops.pop(),i.trys.pop();continue}f=t.call(n,i)}catch(p){f=[6,p],s=0}finally{e=a=0}if(5&f[0])throw f[1];return{value:f[0]?f[1]:void 0,done:!0}}([u,h])}}}function Cl(n,t,e){if(e||arguments.length===2)for(var s,a=0,r=t.length;a<r;a++)!s&&a in t||(s||(s=Array.prototype.slice.call(t,0,a)),s[a]=t[a]);return n.concat(s||Array.prototype.slice.call(t))}function aw(n){return[Math.abs(n.endPoint[0]-n.startPoint[0]),Math.abs(n.endPoint[1]-n.startPoint[1])]}function xp(n){return[n.startPoint[0]+(n.endPoint[0]-n.startPoint[0])/2,n.startPoint[1]+(n.endPoint[1]-n.startPoint[1])/2]}function V2(n,t){t===void 0&&(t=1.5);var e=xp(n),s=aw(n),a=[t*s[0]/2,t*s[1]/2];return{startPoint:[e[0]-a[0],e[1]-a[1]],endPoint:[e[0]+a[0],e[1]+a[1]],palmLandmarks:n.palmLandmarks}}function P2(n){var t=xp(n),e=aw(n),s=Math.max.apply(Math,e)/2;return{startPoint:[t[0]-s,t[1]-s],endPoint:[t[0]+s,t[1]+s],palmLandmarks:n.palmLandmarks}}function U2(n,t){var e=[n.endPoint[0]-n.startPoint[0],n.endPoint[1]-n.startPoint[1]],s=[e[0]*t[0],e[1]*t[1]];return{startPoint:[n.startPoint[0]+s[0],n.startPoint[1]+s[1]],endPoint:[n.endPoint[0]+s[0],n.endPoint[1]+s[1]],palmLandmarks:n.palmLandmarks}}var tot=function(){function n(t,e,s,a,r,i){this.model=t,this.width=e,this.height=s,this.iouThreshold=r,this.scoreThreshold=i,this.anchors=a.map(function(l){return[l.x_center,l.y_center]}),this.anchorsTensor=_l(this.anchors),this.inputSizeTensor=Nn([e,s]),this.doubleInputSizeTensor=Nn([2*e,2*s])}return n.prototype.normalizeBoxes=function(t){var e=this;return nt(function(){var s=Wt(t,[0,0],[-1,2]),a=Wt(t,[0,2],[-1,2]),r=yt(Et(s,e.inputSizeTensor),e.anchorsTensor),i=Et(a,e.doubleInputSizeTensor),l=G(kt(r,i),e.inputSizeTensor),u=G(yt(r,i),e.inputSizeTensor);return l1([l,u],1)})},n.prototype.normalizeLandmarks=function(t,e){var s=this;return nt(function(){var a=yt(Et(q(t,[-1,7,2]),s.inputSizeTensor),s.anchors[e]);return G(a,s.inputSizeTensor)})},n.prototype.getBoundingBoxes=function(t){return yi(this,void 0,void 0,function(){var e,s,a,r,i,l,u,h,f,p,m,y,b,v,w,S=this;return bi(this,function(C){switch(C.label){case 0:return e=nt(function(){return G(kt(t,.5),2)}),n1()==="webgl"?(a=at().get("WEBGL_PACK_DEPTHWISECONV"),at().set("WEBGL_PACK_DEPTHWISECONV",!0),s=this.model.predict(e),at().set("WEBGL_PACK_DEPTHWISECONV",a)):s=this.model.predict(e),r=Sr(s),i=nt(function(){return Sr(wa(Wt(r,[0,0],[-1,1])))}),l=Wt(r,[0,1],[-1,4]),u=this.normalizeBoxes(l),h=console.warn,console.warn=function(){},f=cs.nonMaxSuppression(u,i,1,this.iouThreshold,this.scoreThreshold),console.warn=h,[4,f.array()];case 1:return p=C.sent(),m=[e,s,f,r,u,l,i],p.length===0?(m.forEach(function($){return $.dispose()}),[2,null]):(y=p[0],b=Wt(u,[y,0],[1,-1]),v=Wt(r,[y,5],[1,14]),w=nt(function(){return q(S.normalizeLandmarks(v,y),[-1,2])}),m.push(v),m.forEach(function($){return $.dispose()}),[2,{boxes:b,palmLandmarks:w}])}})})},n.prototype.estimateHandBounds=function(t){return yi(this,void 0,void 0,function(){var e,s,a,r,i,l,u,h,f=this;return bi(this,function(p){switch(p.label){case 0:return e=t.shape[1],s=t.shape[2],a=nt(function(){return Et(cs.resizeBilinear(t,[f.width,f.height]),255)}),[4,this.getBoundingBoxes(a)];case 1:return(r=p.sent())===null?(a.dispose(),[2,null]):(i=r.boxes.arraySync(),l=i[0].slice(0,2),u=i[0].slice(2,4),h=r.palmLandmarks.arraySync(),a.dispose(),r.boxes.dispose(),r.palmLandmarks.dispose(),[2,(m={startPoint:l,endPoint:u,palmLandmarks:h},y=[s/this.width,e/this.height],{startPoint:[m.startPoint[0]*y[0],m.startPoint[1]*y[1]],endPoint:[m.endPoint[0]*y[0],m.endPoint[1]*y[1]],palmLandmarks:m.palmLandmarks.map(function(b){return[b[0]*y[0],b[1]*y[1]]})})])}var m,y})})},n}(),Xb={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]};function eot(n,t){var e,s=Math.PI/2-Math.atan2(-(t[1]-n[1]),t[0]-n[0]);return(e=s)-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}var W2=function(n,t){return[[1,0,n],[0,1,t],[0,0,1]]};function co(n,t){for(var e=0,s=0;s<n.length;s++)e+=n[s]*t[s];return e}function not(n,t){for(var e=[],s=0;s<n.length;s++)e.push(n[s][t]);return e}function G2(n,t){for(var e=[],s=n.length,a=0;a<s;a++){e.push([]);for(var r=0;r<s;r++)e[a].push(co(n[a],not(t,r)))}return e}function H2(n,t){var e=Math.cos(n),s=Math.sin(n),a=[[e,-s,0],[s,e,0],[0,0,1]],r=G2(W2(t[0],t[1]),a);return G2(r,W2(-t[0],-t[1]))}function q2(n,t){return[co(n,t[0]),co(n,t[1])]}var sot=[0,-.4],aot=[0,-.1],j2=[0,5,9,13,17,1,2],rot=function(){function n(t,e,s,a,r,i){this.boundingBoxDetector=t,this.meshDetector=e,this.meshWidth=s,this.meshHeight=a,this.maxContinuousChecks=r,this.detectionConfidence=i,this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.maxHandsNumber=1}return n.prototype.getBoxForPalmLandmarks=function(t,e){var s=t.map(function(a){return q2(Cl(Cl([],a,!0),[1],!1),e)});return V2(P2(U2(this.calculateLandmarksBoundingBox(s),sot)),3)},n.prototype.getBoxForHandLandmarks=function(t){for(var e=V2(P2(U2(this.calculateLandmarksBoundingBox(t),aot)),1.65),s=[],a=0;a<j2.length;a++)s.push(t[j2[a]].slice(0,2));return e.palmLandmarks=s,e},n.prototype.transformRawCoords=function(t,e,s,a){var r,i,l,u,h=this,f=aw(e),p=[f[0]/this.meshWidth,f[1]/this.meshHeight],m=t.map(function(C){return[p[0]*(C[0]-h.meshWidth/2),p[1]*(C[1]-h.meshHeight/2),C[2]]}),y=H2(s,[0,0]),b=m.map(function(C){return Cl(Cl([],q2(C,y),!0),[C[2]],!1)}),v=(i=[[(r=a)[0][0],r[1][0]],[r[0][1],r[1][1]]],l=[r[0][2],r[1][2]],u=[-co(i[0],l),-co(i[1],l)],[i[0].concat(u[0]),i[1].concat(u[1]),[0,0,1]]),w=Cl(Cl([],xp(e),!0),[1],!1),S=[co(w,v[0]),co(w,v[1])];return b.map(function(C){return[C[0]+S[0],C[1]+S[1],C[2]]})},n.prototype.estimateHand=function(t){return yi(this,void 0,void 0,function(){var e,s,a,r,i,l,u,h,f,p,m,y,b,v,w,S,C,$,T,I;return bi(this,function(R){switch(R.label){case 0:return(e=this.shouldUpdateRegionsOfInterest())!==!0?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(t)];case 1:return(s=R.sent())===null?(t.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(s,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,R.label=3;case 3:return a=this.regionsOfInterest[0],r=eot(a.palmLandmarks[0],a.palmLandmarks[2]),i=xp(a),l=[i[0]/t.shape[2],i[1]/t.shape[1]],u=cs.rotateWithOffset(t,r,0,l),h=H2(-r,i),f=e===!0?this.getBoxForPalmLandmarks(a.palmLandmarks,h):a,p=function(F,M,D){var O=M.shape[1],A=M.shape[2],W=[[F.startPoint[1]/O,F.startPoint[0]/A,F.endPoint[1]/O,F.endPoint[0]/A]];return cs.cropAndResize(M,W,[0],D)}(f,u,[this.meshWidth,this.meshHeight]),m=Et(p,255),p.dispose(),u.dispose(),n1()==="webgl"?(b=at().get("WEBGL_PACK_DEPTHWISECONV"),at().set("WEBGL_PACK_DEPTHWISECONV",!0),y=this.meshDetector.predict(m),at().set("WEBGL_PACK_DEPTHWISECONV",b)):y=this.meshDetector.predict(m),v=y[0],w=y[1],m.dispose(),S=v.dataSync()[0],v.dispose(),S<this.detectionConfidence?(w.dispose(),this.regionsOfInterest=[],[2,null]):(C=q(w,[-1,3]),$=C.arraySync(),w.dispose(),C.dispose(),T=this.transformRawCoords($,f,r,h),I=this.getBoxForHandLandmarks(T),this.updateRegionsOfInterest(I,!1),[2,{landmarks:T,handInViewConfidence:S,boundingBox:{topLeft:I.startPoint,bottomRight:I.endPoint}}])}})})},n.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map(function(a){return a[0]}),s=t.map(function(a){return a[1]});return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,s)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,s)]}},n.prototype.updateRegionsOfInterest=function(t,e){if(e)this.regionsOfInterest=[t];else{var s=this.regionsOfInterest[0],a=0;if(s!=null&&s.startPoint!=null){var r=t.startPoint,i=r[0],l=r[1],u=t.endPoint,h=u[0],f=u[1],p=s.startPoint,m=p[0],y=p[1],b=s.endPoint,v=b[0],w=b[1],S=Math.max(i,m),C=Math.max(l,y),$=(Math.min(h,v)-S)*(Math.min(f,w)-C);a=$/((h-i)*(f-l)+(v-m)*(w-l)-$)}this.regionsOfInterest[0]=a>.8?s:t}},n.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},n}();function iot(){return yi(this,void 0,void 0,function(){return bi(this,function(n){return[2,tR("https://tfhub.dev/mediapipe/tfjs-model/handdetector/1/default/1",{fromTFHub:!0})]})})}function oot(){return yi(this,void 0,void 0,function(){return bi(this,function(n){return[2,tR("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1",{fromTFHub:!0})]})})}function lot(){return yi(this,void 0,void 0,function(){return bi(this,function(n){return[2,a3("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1/anchors.json?tfjs-format=file").then(function(t){return t.json()})]})})}function uot(n){var t={},e=t.maxContinuousChecks,s=e===void 0?1/0:e,a=t.detectionConfidence,r=a===void 0?.8:a,i=t.iouThreshold,l=i===void 0?.3:i,u=t.scoreThreshold,h=u===void 0?.5:u;return yi(this,void 0,void 0,function(){var f,p,m,y,b,v;return bi(this,function(w){switch(w.label){case 0:return[4,Promise.all([lot(),iot(),oot()])];case 1:return f=w.sent(),p=f[0],m=f[1],y=f[2],b=new tot(m,256,256,p,l,h),v=new rot(b,y,256,256,s,r),[2,new cot(v)]}})})}var cot=function(){function n(t){this.pipeline=t}return n.getAnnotations=function(){return Xb},n.prototype.estimateHands=function(t,e){return e===void 0&&(e=!1),yi(this,void 0,void 0,function(){var s,a,r,i,l,u,h,f,p;return bi(this,function(m){switch(m.label){case 0:return s=function(y){return y instanceof Ie?[y.shape[0],y.shape[1]]:[y.height,y.width]}(t),a=s[1],r=nt(function(){return t instanceof Ie||(t=YP(t)),On(Nt(t,"float32"))}),[4,this.pipeline.estimateHand(r)];case 1:if(i=m.sent(),r.dispose(),i===null)return[2,[]];for(l=i,e===!0&&(l=function(y,b){var v=y.handInViewConfidence,w=y.landmarks,S=y.boundingBox;return{handInViewConfidence:v,landmarks:w.map(function(C){return[b-1-C[0],C[1],C[2]]}),boundingBox:{topLeft:[b-1-S.topLeft[0],S.topLeft[1]],bottomRight:[b-1-S.bottomRight[0],S.bottomRight[1]]}}}(i,a)),u={},h=0,f=Object.keys(Xb);h<f.length;h++)p=f[h],u[p]=Xb[p].map(function(y){return l.landmarks[y]});return[2,[{handInViewConfidence:l.handInViewConfidence,boundingBox:l.boundingBox,landmarks:l.landmarks,annotations:u}]]}})})},n}(),Wf={exports:{}},hot=Wf.exports,X2;function dot(){return X2||(X2=1,function(n,t){(function(s,a){n.exports=a(vp())})(hot,function(e){return function(s){var a={};function r(i){if(a[i])return a[i].exports;var l=a[i]={i,l:!1,exports:{}};return s[i].call(l.exports,l,l.exports,r),l.l=!0,l.exports}return r.m=s,r.c=a,r.d=function(i,l,u){r.o(i,l)||Object.defineProperty(i,l,{enumerable:!0,get:u})},r.r=function(i){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},r.t=function(i,l){if(l&1&&(i=r(i)),l&8||l&4&&typeof i=="object"&&i&&i.__esModule)return i;var u=Object.create(null);if(r.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:i}),l&2&&typeof i!="string")for(var h in i)r.d(u,h,(function(f){return i[f]}).bind(null,h));return u},r.n=function(i){var l=i&&i.__esModule?function(){return i.default}:function(){return i};return r.d(l,"a",l),l},r.o=function(i,l){return Object.prototype.hasOwnProperty.call(i,l)},r.p="",r(r.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(s,a,r){r.r(a);var i=r("react"),l=function(){var m=function(y,b){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(v,w){v.__proto__=w}||function(v,w){for(var S in w)w.hasOwnProperty(S)&&(v[S]=w[S])},m(y,b)};return function(y,b){m(y,b);function v(){this.constructor=y}y.prototype=b===null?Object.create(b):(v.prototype=b.prototype,new v)}}(),u=function(){return u=Object.assign||function(m){for(var y,b=1,v=arguments.length;b<v;b++){y=arguments[b];for(var w in y)Object.prototype.hasOwnProperty.call(y,w)&&(m[w]=y[w])}return m},u.apply(this,arguments)},h=function(m,y){var b={};for(var v in m)Object.prototype.hasOwnProperty.call(m,v)&&y.indexOf(v)<0&&(b[v]=m[v]);if(m!=null&&typeof Object.getOwnPropertySymbols=="function")for(var w=0,v=Object.getOwnPropertySymbols(m);w<v.length;w++)y.indexOf(v[w])<0&&Object.prototype.propertyIsEnumerable.call(m,v[w])&&(b[v[w]]=m[v[w]]);return b};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(y){var b=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return b?new Promise(function(v,w){b.call(navigator,y,v,w)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function f(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var p=function(m){l(y,m);function y(b){var v=m.call(this,b)||this;return v.canvas=null,v.ctx=null,v.requestUserMediaId=0,v.unmounted=!1,v.state={hasUserMedia:!1},v}return y.prototype.componentDidMount=function(){var b=this,v=b.state,w=b.props;if(this.unmounted=!1,!f()){w.onUserMediaError("getUserMedia not supported");return}v.hasUserMedia||this.requestUserMedia(),w.children&&typeof w.children!="function"&&console.warn("children must be a function")},y.prototype.componentDidUpdate=function(b){var v=this.props;if(!f()){v.onUserMediaError("getUserMedia not supported");return}var w=JSON.stringify(b.audioConstraints)!==JSON.stringify(v.audioConstraints),S=JSON.stringify(b.videoConstraints)!==JSON.stringify(v.videoConstraints),C=b.minScreenshotWidth!==v.minScreenshotWidth,$=b.minScreenshotHeight!==v.minScreenshotHeight;(S||C||$)&&(this.canvas=null,this.ctx=null),(w||S)&&(this.stopAndCleanup(),this.requestUserMedia())},y.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},y.stopMediaStream=function(b){b&&(b.getVideoTracks&&b.getAudioTracks?(b.getVideoTracks().map(function(v){b.removeTrack(v),v.stop()}),b.getAudioTracks().map(function(v){b.removeTrack(v),v.stop()})):b.stop())},y.prototype.stopAndCleanup=function(){var b=this.state;b.hasUserMedia&&(y.stopMediaStream(this.stream),b.src&&window.URL.revokeObjectURL(b.src))},y.prototype.getScreenshot=function(b){var v=this,w=v.state,S=v.props;if(!w.hasUserMedia)return null;var C=this.getCanvas(b);return C&&C.toDataURL(S.screenshotFormat,S.screenshotQuality)},y.prototype.getCanvas=function(b){var v=this,w=v.state,S=v.props;if(!this.video||!w.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var C=this.video.videoWidth,$=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var T=C/$;C=S.minScreenshotWidth||this.video.clientWidth,$=C/T,S.minScreenshotHeight&&$<S.minScreenshotHeight&&($=S.minScreenshotHeight,C=$*T)}this.canvas=document.createElement("canvas"),this.canvas.width=(b==null?void 0:b.width)||C,this.canvas.height=(b==null?void 0:b.height)||$,this.ctx=this.canvas.getContext("2d")}var I=this,R=I.ctx,F=I.canvas;return R&&F&&(F.width=(b==null?void 0:b.width)||F.width,F.height=(b==null?void 0:b.height)||F.height,S.mirrored&&(R.translate(F.width,0),R.scale(-1,1)),R.imageSmoothingEnabled=S.imageSmoothing,R.drawImage(this.video,0,0,(b==null?void 0:b.width)||F.width,(b==null?void 0:b.height)||F.height),S.mirrored&&(R.scale(-1,1),R.translate(-F.width,0))),F},y.prototype.requestUserMedia=function(){var b=this,v=this.props,w=function($,T){var I={video:typeof T<"u"?T:!0};v.audio&&(I.audio=typeof $<"u"?$:!0),b.requestUserMediaId++;var R=b.requestUserMediaId;navigator.mediaDevices.getUserMedia(I).then(function(F){b.unmounted||R!==b.requestUserMediaId?y.stopMediaStream(F):b.handleUserMedia(null,F)}).catch(function(F){b.handleUserMedia(F)})};if("mediaDevices"in navigator)w(v.audioConstraints,v.videoConstraints);else{var S=function($){return{optional:[{sourceId:$}]}},C=function($){var T=$.deviceId;return typeof T=="string"?T:Array.isArray(T)&&T.length>0?T[0]:typeof T=="object"&&T.ideal?T.ideal:null};MediaStreamTrack.getSources(function($){var T=null,I=null;$.forEach(function(M){M.kind==="audio"?T=M.id:M.kind==="video"&&(I=M.id)});var R=C(v.audioConstraints);R&&(T=R);var F=C(v.videoConstraints);F&&(I=F),w(S(T),S(I))})}},y.prototype.handleUserMedia=function(b,v){var w=this.props;if(b||!v){this.setState({hasUserMedia:!1}),w.onUserMediaError(b);return}this.stream=v;try{this.video&&(this.video.srcObject=v),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(v)})}w.onUserMedia(v)},y.prototype.render=function(){var b=this,v=this,w=v.state,S=v.props,C=S.audio;S.forceScreenshotSourceSize;var $=S.disablePictureInPicture;S.onUserMedia,S.onUserMediaError,S.screenshotFormat,S.screenshotQuality,S.minScreenshotWidth,S.minScreenshotHeight,S.audioConstraints,S.videoConstraints,S.imageSmoothing;var T=S.mirrored,I=S.style,R=I===void 0?{}:I,F=S.children,M=h(S,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),D=T?u(u({},R),{transform:(R.transform||"")+" scaleX(-1)"}):R,O={getScreenshot:this.getScreenshot.bind(this)};return i.createElement(i.Fragment,null,i.createElement("video",u({autoPlay:!0,disablePictureInPicture:$,src:w.src,muted:!C,playsInline:!0,ref:function(A){b.video=A},style:D},M)),F&&F(O))},y.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},y}(i.Component);a.default=p},react:function(s,a){s.exports=e}}).default})}(Wf)),Wf.exports}var fot=dot();const pot=Y2(fot),mc={thumb:[0,1,2,3,4],indexFinger:[0,5,6,7,8],middleFinger:[0,9,10,11,12],ringFinger:[0,13,14,15,16],pinky:[0,17,18,19,20]},K2={0:{color:"yellow",size:15},1:{color:"gold",size:6},2:{color:"green",size:10},3:{color:"gold",size:6},4:{color:"gold",size:6},5:{color:"purple",size:10},6:{color:"gold",size:6},7:{color:"gold",size:6},8:{color:"gold",size:6},9:{color:"blue",size:10},10:{color:"gold",size:6},11:{color:"gold",size:6},12:{color:"gold",size:6},13:{color:"red",size:10},14:{color:"gold",size:6},15:{color:"gold",size:6},16:{color:"gold",size:6},17:{color:"orange",size:10},18:{color:"gold",size:6},19:{color:"gold",size:6},20:{color:"gold",size:6}},mot=(n,t)=>{n.length>0&&n.forEach(e=>{const s=e.landmarks;for(let a=0;a<Object.keys(mc).length;a++){let r=Object.keys(mc)[a];for(let i=0;i<mc[r].length-1;i++){const l=mc[r][i],u=mc[r][i+1];t==null||t.beginPath(),t==null||t.moveTo(s[l][0],s[l][1]),t==null||t.lineTo(s[u][0],s[u][1]),t&&(t.strokeStyle="plum"),t&&(t.lineWidth=4),t==null||t.stroke()}}for(let a=0;a<s.length;a++){const r=s[a][0],i=s[a][1];t==null||t.beginPath(),t==null||t.arc(r,i,K2[a].size,0,3*Math.PI),t&&(t.fillStyle=K2[a].color),t==null||t.fill()}})};function got(){const n=Rf.useRef(null),t=Rf.useRef(null),e=async()=>{await S3("cpu");const a=await uot();console.log("Handpose model loaded"),setInterval(()=>{s(a)},100)},s=async a=>{var r;if(n.current&&n.current.video&&n.current.video.readyState===4){const i=n.current.video,l=i.videoHeight,u=i.videoWidth;n.current.video.height=l,n.current.video.width=u,t.current!==null&&(t.current.height=l,t.current.width=u);const h=await a.estimateHands(i);console.log(h);const f=(r=t.current)==null?void 0:r.getContext("2d");mot(h,f)}};return Rf.useEffect(()=>{e()},[]),yr.jsx("div",{children:yr.jsxs("div",{children:[yr.jsx(pot,{className:"webcam",ref:n}),yr.jsx("canvas",{className:"canvas",ref:t})]})})}function yot(){return yr.jsx(yr.Fragment,{children:yr.jsx(got,{})})}IF.createRoot(document.getElementById("root")).render(yr.jsx(Rf.StrictMode,{children:yr.jsx(yot,{})}));
